{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","fish-topo-network.js","webpack:/webpack/bootstrap 2f5c55a29ab8d1bda82e","webpack:///index.network.js","webpack:///lib/fish-topo-network/lib/FishTopoNetwork.js","webpack:///lib/fish-topo-core/lib/graphic.js","webpack:///~/zrender/lib/core/util.js","webpack:///~/zrender/lib/graphic/Gradient.js","webpack:///~/zrender/lib/tool/path.js","webpack:///~/zrender/lib/graphic/Path.js","webpack:///~/zrender/lib/graphic/Displayable.js","webpack:///~/zrender/lib/graphic/Style.js","webpack:///~/zrender/lib/Element.js","webpack:///~/zrender/lib/core/guid.js","webpack:///~/zrender/lib/mixin/Eventful.js","webpack:///~/zrender/lib/mixin/Transformable.js","webpack:///~/zrender/lib/core/matrix.js","webpack:///~/zrender/lib/core/vector.js","webpack:///~/zrender/lib/mixin/Animatable.js","webpack:///~/zrender/lib/animation/Animator.js","webpack:///~/zrender/lib/animation/Clip.js","webpack:///~/zrender/lib/animation/easing.js","webpack:///~/zrender/lib/tool/color.js","webpack:///~/zrender/lib/core/log.js","webpack:///~/zrender/lib/config.js","webpack:///~/zrender/lib/graphic/mixin/RectText.js","webpack:///~/zrender/lib/contain/text.js","webpack:///~/zrender/lib/core/BoundingRect.js","webpack:///~/zrender/lib/core/PathProxy.js","webpack:///~/zrender/lib/core/curve.js","webpack:///~/zrender/lib/core/bbox.js","webpack:///~/zrender/lib/contain/path.js","webpack:///~/zrender/lib/contain/line.js","webpack:///~/zrender/lib/contain/cubic.js","webpack:///~/zrender/lib/contain/quadratic.js","webpack:///~/zrender/lib/contain/arc.js","webpack:///~/zrender/lib/contain/util.js","webpack:///~/zrender/lib/contain/windingLine.js","webpack:///~/zrender/lib/tool/transformPath.js","webpack:///~/zrender/lib/container/Group.js","webpack:///~/zrender/lib/graphic/Image.js","webpack:///~/zrender/lib/graphic/helper/roundRect.js","webpack:///~/zrender/lib/core/LRU.js","webpack:///~/zrender/lib/graphic/Text.js","webpack:///~/zrender/lib/graphic/shape/Circle.js","webpack:///~/zrender/lib/graphic/shape/Sector.js","webpack:///~/zrender/lib/graphic/shape/Ring.js","webpack:///~/zrender/lib/graphic/shape/Polygon.js","webpack:///~/zrender/lib/graphic/helper/poly.js","webpack:///~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///~/zrender/lib/graphic/shape/Polyline.js","webpack:///~/zrender/lib/graphic/shape/Rect.js","webpack:///~/zrender/lib/graphic/shape/Line.js","webpack:///~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///~/zrender/lib/graphic/shape/Arc.js","webpack:///~/zrender/lib/graphic/LinearGradient.js","webpack:///~/zrender/lib/graphic/RadialGradient.js","webpack:///lib/fish-topo-network/lib/ExtensionAPI.js","webpack:///~/zrender/lib/zrender.js","webpack:///~/zrender/lib/core/env.js","webpack:///~/zrender/lib/Handler.js","webpack:///~/zrender/lib/core/event.js","webpack:///~/zrender/lib/mixin/Draggable.js","webpack:///~/zrender/lib/core/GestureMgr.js","webpack:///~/zrender/lib/Storage.js","webpack:///~/zrender/lib/animation/Animation.js","webpack:///~/zrender/lib/Painter.js","webpack:///~/zrender/lib/Layer.js","webpack:///lib/fish-topo-core/lib/util.js","webpack:///lib/fish-topo-core/lib/Point.js","webpack:///lib/fish-topo-core/lib/LineStruct.js","webpack:///lib/fish-topo-network/lib/model/NetworkModel.js","webpack:///lib/fish-topo-core/lib/Model.js","webpack:///lib/fish-topo-core/lib/clazz.js","webpack:///lib/fish-topo-network/lib/node/NetworkNode.js","webpack:///lib/fish-topo-core/lib/Node.js","webpack:///lib/fish-topo-network/lib/node/rack/RackNode.js","webpack:///lib/fish-topo-network/lib/NetworkUtil.js","webpack:///lib/fish-topo-network/lib/node/TipWindowNode.js","webpack:///lib/fish-topo-network/lib/node/rack/ServerNode.js","webpack:///lib/fish-topo-network/lib/node/rack/SwitchNode.js","webpack:///lib/fish-topo-network/lib/node/topo/PointNode.js","webpack:///lib/fish-topo-network/lib/node/topo/CardNode.js","webpack:///lib/fish-topo-network/lib/node/topo/TopoDrawNode.js","webpack:///lib/fish-topo-network/lib/node/NetWorkLineNode.js","webpack:///lib/fish-topo-core/lib/shapes/Connector.js","webpack:///lib/fish-topo-core/lib/shapes/Symbol.js","webpack:///lib/fish-topo-core/lib/shapes/Handle.js","webpack:///lib/fish-topo-core/lib/shapes/ConnectionPoint.js","webpack:///lib/fish-topo-network/lib/model/NetWorkLineModel.js","webpack:///lib/fish-topo-network/lib/node/topo/ServerR630Node.js","webpack:///lib/fish-topo-network/lib/node/topo/ServerTopoNode.js","webpack:///lib/fish-topo-network/lib/node/topo/ServerR730Node.js","webpack:///lib/fish-topo-network/lib/model/topo/CardModel.js","webpack:///lib/fish-topo-network/lib/node/topo/ServerX3550Node.js","webpack:///lib/fish-topo-network/lib/node/topo/ServerX3650Node.js","webpack:///lib/fish-topo-network/lib/node/topo/ServerRD350Node.js","webpack:///lib/fish-topo-network/lib/node/topo/ServerRD650Node.js","webpack:///lib/fish-topo-network/lib/node/topo/SwitchTopoNode.js","webpack:///lib/fish-topo-network/lib/node/topo/SwitchHalfIBNode.js","webpack:///lib/fish-topo-network/lib/node/topo/SwitchFullIBNode.js","webpack:///lib/fish-topo-network/lib/node/topo/SwitchGMNode.js","webpack:///lib/fish-topo-network/lib/node/topo/SwitchKMNode.js","webpack:///lib/fish-topo-network/lib/node/cluster/ClusterDrawNode.js","webpack:///lib/fish-topo-network/lib/model/cluster/DatabaseModel.js","webpack:///lib/fish-topo-network/lib/model/cluster/AsmModel.js","webpack:///lib/fish-topo-network/lib/model/cluster/ISEModel.js","webpack:///lib/fish-topo-network/lib/node/cluster/ClusterDatabaseNode.js","webpack:///lib/fish-topo-network/lib/node/cluster/ClusterAsmNode.js","webpack:///lib/fish-topo-network/lib/node/cluster/ClusterAsmCellNode.js","webpack:///lib/fish-topo-network/lib/node/cluster/ClusterIseNode.js","webpack:///lib/fish-topo-network/lib/node/cluster/ClusterIseCellNode.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","FishTopoNetwork","dom","opts","group","_dom","allNodes","_api","ExtensionAPI","tipNode","_zr","init","Eventful","NetworkUtil","registerNetworkNode","p_this","p_opts","topoDiv","innerHTML","document","getElementById","zRenderer","zrender","renderer","devicePixelRatio","zrUtil","util","NetworkModel","NetworkNode","fishTopoProto","prototype","getDom","getZr","getWidth","getHeight","resize","p_width","p_height","undefined","painter","addNodeByModel","model","Shape","getClass","get","node","add","on","e","getNodeClass","className","showTipWindow","allWidth","width","hideTipWindow","remove","isSelected","clear","exportJson","networkModel","set","getUUID","drawFromJson","json","topoType","type","clientWidth","data","length","clientHeight","height","fromJson","mixin","idBase","Date","instances","DOM_ATTRIBUTE_KEY","fishTopoNetWork","version","dependencies","Error","defaults","showGridLine","gridLineSpacing","setAttribute","getInstanceByDom","key","getAttribute","dispose","chart","topo","isDom","isDisposed","doSingleEnterHover","el","__isHover","__hoverStlDirty","stroke","style","fill","hoverStyle","__hoverStl","lift","colorTool","Gradient","normalStyle","name","hasOwnProperty","__normalStl","setStyle","z2","doSingleLeaveHover","normalStl","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","cb","postfix","duration","getShallow","animationEasing","animateTo","attr","pathTool","round","Math","Path","matrix","vector","graphic","Util","Group","Image","Text","textContain","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","LinearGradient","RadialGradient","BoundingRect","extendShape","extend","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","aspect","cx","x","cy","y","resizePath","mergePath","applyTransform","pathRect","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","max","position","positiveOrNegative","doubledPosition","setHoverStyle","setText","textStyle","labelModel","color","labelPosition","labelColor","indexOf","textStyleModel","getModel","textDistance","textFont","getFont","textPosition","textFill","getTextColor","updateProps","curry","initProps","getTransform","target","ancestor","mat","identity","mul","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","abs","vBase","clone","source","result","Array","i","len","isBuildInObject","merge","overwrite","isObject","targetProp","sourceProp","isArray","mergeAll","targetAndSources","overlay","createCanvas","createElement","getContext","_ctx","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prop","constructor","superClass","isArrayLike","each","obj","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","objToString","isFunction","isString","BUILTIN_OBJECT","nodeType","retrieve","values","slice","Function","assert","condition","message","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","Object","toString","arrayProto","noop","colorStops","addColorStop","offset","processArc","fa","fs","rx","ry","psiDeg","cmd","psi","PI","xp","mathCos","mathSin","yp","lambda","mathSqrt","f","cxp","cyp","theta","vAngle","u","v","dTheta","vRatio","addData","createPathProxyFromString","n","cs","replace","cc","RegExp","prevCmd","arr","split","cpx","cpy","PathProxy","CMD","str","charAt","off","shift","parseFloat","isNaN","ctlPtx","ctlPty","L","M","C","Q","A","Z","toStatic","createPathOptions","pathProxy","buildPath","setData","transformPath","ctx","rebuildPath","create","sqrt","sin","cos","vMag","acos","pathEls","pathEl","pathList","__dirty","pathBundle","appendPath","pathHasFill","pathHasStroke","Displayable","pathContain","__dirtyPath","strokeContainThreshold","brush","save","hasStroke","hasFill","updateCanvasGradient","setTransform","lineDash","lineDashOffset","ctxLineDash","setLineDash","beginPath","setLineDashOffset","text","drawRectText","restore","shapeCfg","_rect","rectWithStroke","_rectWithStroke","copy","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","__zr","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","Element","Style","__clipPaths","RectText","invisible","z","zlevel","draggable","dragging","silent","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","STYLE_LIST_COMMON","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textBaseline","textAlign","textVerticalAlign","textShadowBlur","textShadowOffsetX","textShadowOffsetY","styleName","fillStyle","canvasGradient","strokeStyle","globalAlpha","otherStyle","newStyle","styleProto","guid","Transformable","Animatable","ignore","clipPath","drift","dx","dy","decomposeTransform","beforeUpdate","afterUpdate","update","updateTransform","hide","show","setClipPath","zr","addSelfToZr","removeClipPath","removeSelfFromZr","animators","animation","addAnimator","removeAnimator","idStart","arrySlice","_$handlers","one","event","handler","_h","h","isSilent","newList","l","trigger","argLen","splice","triggerWithContext","isNotAroundZero","val","EPSILON","mIdentity","rotation","scale","origin","transformableProto","needLocalTransform","parentHasTransform","invTransform","rotate","tmpTransform","sx","sy","atan2","v2","transformCoordToGlobal","ArrayCtor","Float32Array","out","m1","m2","out0","out1","out2","out3","out4","out5","translate","a","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","b","v1","scaleAndAdd","sub","lenSquare","div","dot","s","normalize","d","distance","distanceSquare","negate","lerp","t","min","lengthSquare","dist","distSquare","Animator","log","animatingShape","pathSplitted","animator","during","done","stopAnimation","forwardToLast","stop","time","delay","easing","callback","count","_animateToShallow","start","objShallow","propertyCount","when","defaultGetter","defaultSetter","interpolateNumber","p0","p1","percent","interpolateString","interpolateArray","arrDim","len2","j","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","arraySlice","isArraySame","catmullRomInterpolateArray","p2","p3","t2","t3","catmullRomInterpolate","v0","cloneValue","ret","rgba2String","rgba","floor","join","createTrackClip","oneTrackDone","keyframes","propName","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","sort","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","parse","lastValue","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","Clip","life","_loop","_delay","ondestroy","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","_doneCallback","doneList","lastClip","self","clipCount","addClip","oldOnFrame","clipList","removeClip","getClips","options","_life","_initialized","gap","onrestart","easingFuncs","step","_startTime","getTime","easingFunc","schedule","fire","restart","_needsRemove","remainder","eventType","arg","linear","k","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","pow","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","colorStr","toLowerCase","kCSSColorTable","op","ep","fname","substr","params","alpha","pop","hsla2rgba","iv","hsla","rgba2hsla","H","S","R","G","B","vMin","vMax","delta","deltaR","deltaG","deltaB","level","colorArr","stringify","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","mapIntervalToColor","interval","info0","info1","end","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","config","debugMode","console","dpr","window","parsePercent","maxValue","lastIndexOf","tmpRect","textRect","align","font","baseline","verticalAlign","res","adjustTextPositionOnRect","shadowColor","textShadowColor","textLines","fillText","strokeText","lineHeight","getTextWidth","textWidthCache","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textLineLen","textHeight","halfHeight","textEllipsis","containerWidth","ellipsis","minCharacters","maxIterations","cnCharWidth","ascCharWidth","textLineTruncate","subLength","estimateLength","charCode","charCodeAt","vec2","v2ApplyTransform","mathMin","mathAbs","mathMax","union","other","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","curve","bbox","min2","max2","hasTypedArray","_len","_xi","_yi","_x0","_y0","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","lineTo","_needsDash","_dashedLineTo","bezierCurveTo","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","r","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","x0","y0","lineDashSum","appendSize","appendPathData","_expandData","_prevCmd","newData","dash","idx","dashSum","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","fromArc","scaleX","scaleY","isEllipse","isAroundZero","onet","cubicDerivativeAt","cubicRootAt","roots","t1","disc","K","discSqrt","Y1","Y2","mathPow","ONE_THIRD","T","ASqrt","tmp","THREE_SQRT","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","next","d1","d2","Infinity","_v0","_t","_v1","v2DistSquare","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","extremity","PI2","fromPoints","points","left","right","top","bottom","xDim","yDim","tx","ty","vec2Min","vec2Max","diff","angle","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","x_","windingQuadratic","y_","windingArc","dir","normalizeRadian","containPath","isStroke","windingLine","cubic","quadratic","_x","line","_l","_a","_b","_s","nPoint","mathAtan2","_children","__storage","children","childAt","childOfName","childCount","_doAdd","addBefore","nextSibling","storage","addToMap","addChildrenToStorage","delFromMap","delChildrenFromStorage","removeAll","eachChild","includeChildren","tmpMat","childRect","roundRectHelper","LRU","globalImageCache","ZImage","image","src","_image","cachedImgObj","onload","pending","put","sWidth","sHeight","drawImage","r1","r2","r3","r4","total","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","LRUProto","list","leastUsedEntry","r0","clockwise","unitX","unitY","polyHelper","smooth","smoothConstraint","smoothSpline","smoothBezier","controlPoints","cp1","cp2","interpolate","isLoop","segs","pos","w2","w3","v2Min","v2Max","v2Scale","v2Distance","v2Add","constraint","prevPoint","nextPoint","cps","point","d0","sum","cp0","pointAt","curveTool","cpx1","cpy1","cpx2","cpy2","createLinearGradient","createRadialGradient","instance","apiList","delInstance","env","Handler","Storage","Animation","useVML","canvasSupported","painterCtors","canvas","ZRender","getInstance","registerPainter","Ctor","rendererType","vml","getViewportRoot","stage","_needsRefresh","refreshImmediately","oldDelFromMap","oldAddToMap","elId","getId","addRoot","delRoot","configLayer","zLevel","clearAnimation","toDataURL","backgroundColor","pathToImage","setDefaultCursorStyle","cursorStyle","eventName","eventHandler","detect","ua","os","browser","webkit","match","android","ipad","ipod","iphone","webos","touchpad","kindle","silk","blackberry","bb10","rimtabletos","playbook","chrome","firefox","safari","webview","ie","edge","ios","tablet","phone","touchEventsSupported","pointerEventsSupported","navigator","userAgent","makeEventPacket","eveType","cancelBubble","offsetX","zrX","offsetY","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","processGesture","zrHandler","gestureMgr","_gestureMgr","gestureInfo","recognize","findHover","_dispatchProxy","initDomHandler","makeMouseHandler","fn","_touching","handlerNames","touchHandlerNames","pointerHandlerNames","_handlers","domHandlers","mouseHandlerNames","isHover","displayable","setTouchTimer","clearTimeout","_touchTimer","setTimeout","usePointerEvent","useTouchEvent","eventNameFix","eventTool","Draggable","GestureMgr","TOUCH_CLICK_DELAY","addEventListener","removeEventListener","normalizeEvent","mousemove","hovered","lastHovered","_hovered","_defaultCursorStyle","mouseout","element","toElement","relatedTarget","parentNode","touchstart","_lastTouchMoment","mousedown","touchmove","touchend","mouseup","click","mountHandlers","_lastX","_lastY","dispatch","eventArgs","targetEl","eventPacket","eachOtherLayer","layer","exclude","getDisplayList","getBoundingClientRect","isTouch","touch","targetTouches","changedTouches","rBounding","clientX","clientY","box","detail","isDomLevel2","attachEvent","detachEvent","preventDefault","stopPropagation","returnValue","Dispatcher","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","_y","dropTarget","lastDropTarget","_dropTarget","pointPair","center","_track","_doTrack","_recognize","touches","trackItem","recognizers","pinch","track","pinchEnd","pinchPre","isFinite","pinchCenter","shapeCompareFunc","__renderidx","_elements","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","clipPaths","elements","_renderList","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","_clips","_running","_time","clips","_update","deferredEvents","deferredClips","parseInt10","isLayerValid","isBuildin","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","Layer","Painter","singleCanvas","nodeName","toUpperCase","_singleCanvas","rootStyle","_width","_height","mainLayer","initContext","_layers","0","_zlevelList","_getWidth","_getHeight","domRoot","_domRoot","domRootStyle","overflow","appendChild","_layerConfig","_createPathToImage","isSingleCanvas","paintAll","zlevelList","_paintList","_updateLayerStatus","currentLayer","currentZLevel","viewWidth","viewHeight","eachBuildinLayer","prevElClipPaths","elZLevel","getLayer","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","layers","elCounts","elCount","_clearLayer","layerConfig","delLayer","removeChild","display","clearLayer","getRenderedCanvas","imageLayer","pixelRatio","clearColor","stl","defaultView","getComputedStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","_pathToImage","clearRect","pathTransform","ImageShape","imgShape","me","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","createBackBuffer","clearAll","haveClearColor","haveMotionBLur","globalCompositeOperation","fillRect","chars","uuid","rnd","random","getMaxLineLength","getPolylineLength","lenght","NaN","orthogonalPath","lineIntersectsLine","l1","l2","startPoint","endPoint","contains","a1","b1","a2","b2","polylineIntersectsRectangle","bounds","closedPolyline","lines","Point","tempLine","scorePath","score","signum","forwardPath","traslatePoints","isRevert","newPoints","rotationMatrix","mReturn","translationMatrix","scaleMatrix","getEndPoint","getConnectorPoints","getSoltPoints","getRect","tangentRotation","collinearity","precission","determinant","enhancedRound","number","decimals","getLength","getAngle","centerPoint","outsidePoint","atan","boundRect","randomColor","index","arrHex","strHex","isUndefined","template","settings","oldSettings","templateSettings","matcher","escape","noMatch","evaluate","escaper","escapeChar","variable","render","argument","StackedMap","createNew","stack","arrKey","keys","removeTop","escapes","'","\\","\r","\n"," "," ","load","o","newPoint","loadArray","cloneArray","oldX","oldY","equals","anotherPoint","near","getPoints","oType","newLine","contructor","anotherLine","startX","startY","endX","endY","closestX","closestY","getPoint","Xp","Yp","Model","defaultOption","resourceId","properties","notes","extProperties","upperLeft","lowerRight","stencil","showTip","option","parentModel","extraOpt","getDefaultOption","optList","Class","opt","__defaultOption","clazzUtil","mergeOption","ignoreParent","fieldName","fieldArray","currentRef","thisParentModel","isEmpty","restoreData","enableClassExtend","superCall","methodName","superApply","TYPE_DELIMITER","IS_CONTAINER","parseClassType","componentType","main","RootClass","preConstruct","proto","ExtendedClass","enableClassManagement","entity","makeContainer","container","registerClass","Clazz","componentTypeMain","subType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","api","Node","outline","enable","initVisible","nextworkInfo","portNodeList","cardNodeList","initEvent","that","MOUSE_EVENT_NAMES","eveName","drawText","content","toJSON","textName","bpmnInfo","refreshText","RackNode","rackkInfo","_UData","_showTip","_title","rectOut","rectIn","_floorNum","_isnullFloor","modelObj","parmDate","floorNum","column","serverModel","rectTray","p_model","eWidth","nodes","jsonArr","fishTopoNetwork","rack","UData","rackModel","nodeList","topoModel","clusterModel","TipWindowNode","ServerNode","SwitchNode","TopoDrawNode","ServerR630Node","ServerR730Node","PointNode","CardNode","ServerX3550Node","ServerX3650Node","ServerRD350Node","ServerRD650Node","SwitchFullIBNode","SwitchHalfIBNode","SwitchKMNode","SwitchGMNode","ClusterDrawNode","ClusterDatabaseNode","ClusterAsmNode","ClusterAsmCellNode","ClusterIseNode","ClusterIseCellNode","NextWorkUtil","_xWidth","_tipContext","tipContext","tip","serverInfo","rectServer","_px","_py","rectSwitch","lineInfo","portNode","pointList","_portData","_type","_direction","imgUrl","_resourcesName","_resourceNodeType","_No","portModel","_linInfo","sourceReource","sourceCardNo","sourcePort","nodetype","sourceStatus","status","targetReource","reourceName","targetPort","port","pModel","addPortByModel","portList","NetWorkLineNode","NetWorkLineModel","serverWidth","switchWidth","clentWidth","_startX","_textW","_startY","_textH","textKM","lineKM","lineType","textGB","lineGB","textIB","lineIB","lineOut","lineUp","lineDown","startComputeX","startStorageX","startSwitchX","nodeY","_typeNode","cards","ps","startNode","endNode","pe","drawLine","p_nodeList","p_serverW","p_switchW","computeCount","storageCount","switchCount","serverCount","w1","s1","p_startNode","p_endNode","fleftx","flefty","fwidth","fheight","torightx","torighty","towidth","toheight","moddleY","_moddleX","moddleX","fromBounds","toBounds","netWorkLineModel","netWorkLineNode","con","refreshLine","Connector","parmData","symbol","size","_style","_hoverStyle","_isEdit","isEdit","sRect","sBounds","eRect","eBounds","sConnectorPoint","eConnectorPoint","solutions","connector2Points","middleY","s0","defaultOptions","TYPE_STRAIGHT","arrowHoverStyle","handles","connectionPoints","conPointsGroup","icons","symbolUtil","Handle","ConnectionPoint","TYPE_JAGGED","TYPE_ROUND","RADIUS","START_NODE","END_NODE","LEFT","RIGHT","TOP","BOTTOM","SEPERATOR","turningPoints","symbolTo","lineText","middlePoint","middle","createAllconnectionPoint","shapeSetHandle","createSymbol","connectionPointCreate","TYPE_CONNECTOR","conPoint","clearHandles","handleShape","isCollineaityFirst","isCollineaitySecond","symbolType","symbolSize","symbolPath","textWidth","middleX","ellapsedDistance","segment","missingDistance","error","sPos","ePos","refreshModel","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","setColor","connector","visible","actionConnector","anotherHandle","newX","newY","deltaY","deltaX","NORMAL_COLOR","OVER_COLOR","CONNECTED_COLOR","TYPE_FIGURE","anotherConnectionPoint","isVector","ServerTopoNode","serverNodeB","serverNodeA","cardList","defaultPorts","ports","cardNo","_kmx","_index","card1","CardModel","cardX","cardY","cardWidth","cardHeight","No","portData","resourcesName","resourceNodeType","SwitchTopoNode","switchNode","info","databaseList","dgList","DatabaseModel","AsmModel","ISEModel","dataModelData","asmModelData","storageModelData","_dgList","dbData","dg","asmData","childNodeList","iseData","databaseModel","mangerNode","asmModel","iseModel","defaultOptionDatabase","databaseNode","_moddleY","defaultOptionDg","dgModel","dgNode","p_node","p_eventList","instanse","_instanse","_instanseX","_instanseWidth","_instanseNode","_instansestatusNode","_instanseTitle","_status","maxcount","dgHeight","getDgNodeHeight","_dgW","_dgCellY","cellModelData","title","cellModel","_asmX","asmNode","_asmInstanseX","asmIn","asmInsatanceNode","_asmInsatanceStatusNode","_asmInsatanceTitle","_asmStatusX","_asmStatusNode","_asmTitle","p_count","p_space","cellNode","cellTitle","iseList","nodeWidth","isedata","disk","iseCellModel","getDgNodeWidth","isecellNode","isecellStatus","isecellTitle"],"mappings":"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","file":"fish-topo-network.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fishTopoNetwork\"] = factory();\n\telse\n\t\troot[\"fishTopoNetwork\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fishTopoNetwork\"] = factory();\n\telse\n\t\troot[\"fishTopoNetwork\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Export fishTopo as CommonJS module\r\n\t */\r\n\tmodule.exports = __webpack_require__(2);\r\n\t\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var ExtensionAPI = __webpack_require__(56);\r\n\t    var Eventful = __webpack_require__(12);\r\n\t    var zrender = __webpack_require__(57);\r\n\t    var zrUtil = __webpack_require__(4);  \r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var RackNode = __webpack_require__(75);\r\n\t    var NetworkUtil = __webpack_require__(76);\r\n\t\r\n\t    function FishTopoNetwork (dom, opts) {\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.id;\r\n\t        /**\r\n\t         * Group id\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.group;\r\n\t\r\n\t        /**\r\n\t         * @type {HTMLDomElement}\r\n\t         * @private\r\n\t         */\r\n\t        this._dom = dom;\r\n\t\r\n\t        this.allNodes = [];\r\n\t\r\n\t        this._api = new ExtensionAPI(this);\r\n\t\r\n\t        this.tipNode = null;\r\n\t\r\n\t        /**\r\n\t         * @type {module:zrender/ZRender}\r\n\t         * @private\r\n\t         */\r\n\t        this._zr = init(this, opts); \r\n\t\r\n\t        Eventful.call(this);\r\n\t        NetworkUtil.registerNetworkNode(); \r\n\t\r\n\t    }\r\n\t\r\n\t    function init(p_this, p_opts) {\r\n\t\r\n\t        var topoDiv = '<div class=\"topoDiv\" id = \"topoDiv\" style=\"width:100%; height:100%; overflow:auto;\"></div>';\r\n\t        p_this._dom.innerHTML = topoDiv;\r\n\t        \r\n\t        var dom = document.getElementById(\"topoDiv\");\r\n\t\r\n\t        var zRenderer = zrender.init(dom, {\r\n\t            renderer: p_opts.renderer || 'canvas',\r\n\t            devicePixelRatio: p_opts.devicePixelRatio\r\n\t        });\r\n\t        return zRenderer;    \r\n\t    };\r\n\t\r\n\t    var fishTopoProto = FishTopoNetwork.prototype;\r\n\t\r\n\t    /**\r\n\t     * @return {HTMLDomElement}\r\n\t     */\r\n\t    fishTopoProto.getDom = function () {\r\n\t        return this._dom;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @return {module:zrender~ZRender}\r\n\t     */\r\n\t    fishTopoProto.getZr = function () {\r\n\t        return this._zr;\r\n\t    };\r\n\t    /**\r\n\t     * @return {number}\r\n\t     */\r\n\t    fishTopoProto.getWidth = function () {\r\n\t        return this._zr.getWidth();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @return {number}\r\n\t     */\r\n\t    fishTopoProto.getHeight = function () {\r\n\t        return this._zr.getHeight();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * �����ߴ�  �ڴ��ڴ�С�����ı�ʱ��Ҫ�ֹ�����\r\n\t     */\r\n\t    fishTopoProto.resize = function ( p_width, p_height) {\r\n\t        p_width = p_width !== undefined ? p_width : this.getWidth;\r\n\t        p_height = p_height !== undefined ? p_height : this.getHeight() - 50;\r\n\t        this._zr.painter.resize(p_width, p_height);\r\n\t    }; \r\n\t\r\n\t    /**\r\n\t     * ����ģ�����ӽڵ�\r\n\t     * @param {[type]} model [description]\r\n\t     */\r\n\t    fishTopoProto.addNodeByModel = function(model) {\r\n\t        var that = this;\r\n\t        var Shape = NetworkNode.getClass(model.get(\"stencil.type\"));\r\n\t        if (Shape) {\r\n\t            node = new Shape(model, this._api);\r\n\t            this._zr.add(node); \r\n\t            node.on('mousedown',function(e){\r\n\t                //that.newDrag(this,e.event.clientX,e.event.clientY);   \r\n\t            });         \r\n\t        }         \r\n\t             \r\n\t    };  \r\n\t\r\n\t    fishTopoProto.getNodeClass = function (className) {\r\n\t        return NetworkNode.getClass(className);\r\n\t    };\r\n\t\r\n\t    /** \r\n\t     * ������ͣ��ʾ��չʾ\r\n\t     * @param {[type]} model [description]\r\n\t     */\r\n\t    fishTopoProto.showTipWindow = function(model) {\r\n\t        var Shape = NetworkNode.getClass(\"TipWindowNode\");\r\n\t        if (Shape) {\r\n\t            var height = this._zr.getHeight();           \r\n\t            if( this.allWidth != undefined ) {\r\n\t                this._zr.painter.resize( this.allWidth + model.width, 730);\r\n\t            }\r\n\t            \r\n\t            var node = new Shape(model, this._api);\r\n\t            this._zr.add(node); \r\n\t            this.tipNode = node;\r\n\t            node.on('mousedown',function(e){\r\n\t                //that.newDrag(this,e.event.clientX,e.event.clientY);   \r\n\t            });         \r\n\t        }         \r\n\t\r\n\t    };\r\n\t\r\n\t    /** \r\n\t     * ������ͣ��ʾ��չʾ\r\n\t     * @param {[type]} model [description]\r\n\t     */\r\n\t    fishTopoProto.hideTipWindow = function(model) { \r\n\t        if (this.tipNode && this.tipNode !== null ) {\r\n\t            this._zr.remove(this.tipNode);      \r\n\t        }         \r\n\t    };\r\n\t\r\n\t    fishTopoProto.init = function () {\r\n\t        var isSelected = this.isSelected;\r\n\t                \r\n\t    };\r\n\t\r\n\t    fishTopoProto.clear = function () {\r\n\t        this._zr.clear();\r\n\t    };   \r\n\t\r\n\t    fishTopoProto.exportJson = function() {\r\n\t        var networkModel = new NetworkModel({});\r\n\t        networkModel.set(\"resourceId\", util.getUUID());\r\n\t        return NetworkUtil.exportJson(networkModel, this.allNodes);\r\n\t    };\r\n\t\r\n\t    fishTopoProto.drawFromJson = function(json) {\r\n\t        var topoType = json.type;\r\n\t        if ( topoType === \"rack\" ) {\r\n\t            var clientWidth = this._zr.getWidth();\r\n\t            if ( (50 + (json.data.length * 250)) > clientWidth ) {\r\n\t                this._zr.painter.resize( 50 + (json.data.length * 250), 730);\r\n\t                if ( clientWidth < this._zr.getWidth() ) {\r\n\t                    this.allWidth = this._zr.getWidth();\r\n\t                }\r\n\t            } \r\n\t        } else if ( topoType === \"topo\" ) {\r\n\t            var clientWidth = this._zr.getWidth();\r\n\t            var clientHeight = 630;\r\n\t            this.width = clientWidth;\r\n\t            this.height = clientHeight;\r\n\t        }\r\n\t        else if ( topoType === \"cluster\" ) {\r\n\t            var clientWidth = this._zr.getWidth();\r\n\t            var clientHeight = 630;\r\n\t            this.width = clientWidth;\r\n\t            this.height = clientHeight;\r\n\t        }\r\n\t        return NetworkUtil.fromJson(this, json);\r\n\t    };  \r\n\t\r\n\t    zrUtil.mixin(FishTopoNetwork, Eventful);    \r\n\t\r\n\t    // ---------���Ⱪ¶fishTopoNetWork------------------\r\n\t    var idBase = new Date() - 0;\r\n\t    var instances = {};\r\n\t    var DOM_ATTRIBUTE_KEY = '_fishTopoNetwork_instance_';\r\n\t    var fishTopoNetWork = {\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        version: '1.0.0',\r\n\t        dependencies: {\r\n\t            zrender: '3.0.4'\r\n\t        }\r\n\t    }; \r\n\t    \r\n\t    /**\r\n\t     * @param {HTMLDomElement} dom\r\n\t     * @param {Object} opts\r\n\t     */\r\n\t    fishTopoNetWork.init = function (dom, opts) {\r\n\t        if (!dom) {\r\n\t            throw new Error('Initialize failed: invalid dom.');\r\n\t        }\r\n\t\r\n\t        opts = opts || {};\r\n\t        // Default value\r\n\t        zrUtil.defaults(opts,\r\n\t            {\r\n\t                type: \"bpmn\",\r\n\t                showGridLine: true,\r\n\t                devicePixelRatio: 1,\r\n\t                gridLineSpacing:10\r\n\t            }\r\n\t        );        \r\n\t\r\n\t        var fishTopoNetWork = new FishTopoNetwork(dom, opts);\r\n\t        fishTopoNetWork.init();\r\n\t\r\n\t        fishTopoNetWork.id = 'ft_' + idBase++;\r\n\t        instances[fishTopoNetWork.id] = fishTopoNetWork;\r\n\t\r\n\t        dom.setAttribute && dom.setAttribute(DOM_ATTRIBUTE_KEY, fishTopoNetWork.id);\r\n\t\r\n\t        return fishTopoNetWork;\r\n\t    };  \r\n\t\r\n\t\r\n\t    /**\r\n\t     * @param  {HTMLDomElement} dom\r\n\t     * @return {fishTopo}\r\n\t     */\r\n\t    fishTopoNetWork.getInstanceByDom = function (dom) {\r\n\t        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n\t        return instances[key];\r\n\t    };     \r\n\t\r\n\t    /**\r\n\t     * Dispose a fishTopo instance\r\n\t     * @param  {module:fishTopo|HTMLDomElement|string} fishTopo\r\n\t     */\r\n\t    fishTopoNetWork.dispose = function (chart) {\r\n\t        var topo;\r\n\t        if (zrUtil.isDom(chart)) {\r\n\t            topo = fishTopoNetWork.getInstanceByDom(chart);\r\n\t        }\r\n\t        else if (typeof chart === 'string') {\r\n\t            topo = instances[chart];\r\n\t        }\r\n\t        if ((topo instanceof fishTopoNetWork) && !topo.isDisposed()) {\r\n\t            topo.dispose();\r\n\t        }\r\n\t    };    \r\n\t\r\n\t    module.exports = fishTopoNetWork;    \r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\r\n\t\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t\r\n\t    var pathTool = __webpack_require__(6);\r\n\t    var round = Math.round;\r\n\t    var Path = __webpack_require__(7);\r\n\t    var colorTool = __webpack_require__(20);\r\n\t    var matrix = __webpack_require__(14);\r\n\t    var vector = __webpack_require__(15);\r\n\t    var Gradient = __webpack_require__(5);\r\n\t\r\n\t    var graphic = {};\r\n\t    graphic.Util = zrUtil;\r\n\t    graphic.Group = __webpack_require__(37);\r\n\t\r\n\t    graphic.Image = __webpack_require__(38);\r\n\t\r\n\t    graphic.Text = __webpack_require__(41);\r\n\t\r\n\t    graphic.textContain = __webpack_require__(24);\r\n\t\r\n\t    graphic.Circle = __webpack_require__(42);\r\n\t\r\n\t    graphic.Sector = __webpack_require__(43);\r\n\t\r\n\t    graphic.Ring = __webpack_require__(44);\r\n\t\r\n\t    graphic.Polygon = __webpack_require__(45);\r\n\t\r\n\t    graphic.Polyline = __webpack_require__(49);\r\n\t\r\n\t    graphic.Rect = __webpack_require__(50);\r\n\t\r\n\t    graphic.Line = __webpack_require__(51);\r\n\t\r\n\t    graphic.BezierCurve = __webpack_require__(52);\r\n\t\r\n\t    graphic.Arc = __webpack_require__(53);\r\n\t\r\n\t    graphic.LinearGradient = __webpack_require__(54);\r\n\t\r\n\t    graphic.RadialGradient = __webpack_require__(55);\r\n\t\r\n\t    graphic.BoundingRect = __webpack_require__(25);\r\n\t\r\n\t    /**\r\n\t     * Extend shape with parameters\r\n\t     */\r\n\t    graphic.extendShape = function (opts) {\r\n\t        return Path.extend(opts);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Extend path\r\n\t     */\r\n\t    graphic.extendPath = function (pathData, opts) {\r\n\t        return pathTool.extendFromString(pathData, opts);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Create a path element from path data string\r\n\t     * @param {string} pathData\r\n\t     * @param {Object} opts\r\n\t     * @param {module:zrender/core/BoundingRect} rect\r\n\t     * @param {string} [layout=cover] 'center' or 'cover'\r\n\t     */\r\n\t    graphic.makePath = function (pathData, opts, rect, layout) {\r\n\t        var path = pathTool.createFromString(pathData, opts);\r\n\t        var boundingRect = path.getBoundingRect();\r\n\t        if (rect) {\r\n\t            var aspect = boundingRect.width / boundingRect.height;\r\n\t\r\n\t            if (layout === 'center') {\r\n\t                // Set rect to center, keep width / height ratio.\r\n\t                var width = rect.height * aspect;\r\n\t                var height;\r\n\t                if (width <= rect.width) {\r\n\t                    height = rect.height;\r\n\t                }\r\n\t                else {\r\n\t                    width = rect.width;\r\n\t                    height = width / aspect;\r\n\t                }\r\n\t                var cx = rect.x + rect.width / 2;\r\n\t                var cy = rect.y + rect.height / 2;\r\n\t\r\n\t                rect.x = cx - width / 2;\r\n\t                rect.y = cy - height / 2;\r\n\t                rect.width = width;\r\n\t                rect.height = height;\r\n\t            }\r\n\t\r\n\t            this.resizePath(path, rect);\r\n\t        }\r\n\t        return path;\r\n\t    };\r\n\t\r\n\t    graphic.mergePath = pathTool.mergePath,\r\n\t\r\n\t    /**\r\n\t     * Resize a path to fit the rect\r\n\t     * @param {module:zrender/graphic/Path} path\r\n\t     * @param {Object} rect\r\n\t     */\r\n\t    graphic.resizePath = function (path, rect) {\r\n\t        if (!path.applyTransform) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        var pathRect = path.getBoundingRect();\r\n\t\r\n\t        var m = pathRect.calculateTransform(rect);\r\n\t\r\n\t        path.applyTransform(m);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Sub pixel optimize line for canvas\r\n\t     *\r\n\t     * @param {Object} param\r\n\t     * @param {Object} [param.shape]\r\n\t     * @param {number} [param.shape.x1]\r\n\t     * @param {number} [param.shape.y1]\r\n\t     * @param {number} [param.shape.x2]\r\n\t     * @param {number} [param.shape.y2]\r\n\t     * @param {Object} [param.style]\r\n\t     * @param {number} [param.style.lineWidth]\r\n\t     * @return {Object} Modified param\r\n\t     */\r\n\t    graphic.subPixelOptimizeLine = function (param) {\r\n\t        var subPixelOptimize = graphic.subPixelOptimize;\r\n\t        var shape = param.shape;\r\n\t        var lineWidth = param.style.lineWidth;\r\n\t\r\n\t        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\r\n\t            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\r\n\t        }\r\n\t        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\r\n\t            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\r\n\t        }\r\n\t        return param;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Sub pixel optimize rect for canvas\r\n\t     *\r\n\t     * @param {Object} param\r\n\t     * @param {Object} [param.shape]\r\n\t     * @param {number} [param.shape.x]\r\n\t     * @param {number} [param.shape.y]\r\n\t     * @param {number} [param.shape.width]\r\n\t     * @param {number} [param.shape.height]\r\n\t     * @param {Object} [param.style]\r\n\t     * @param {number} [param.style.lineWidth]\r\n\t     * @return {Object} Modified param\r\n\t     */\r\n\t    graphic.subPixelOptimizeRect = function (param) {\r\n\t        var subPixelOptimize = graphic.subPixelOptimize;\r\n\t        var shape = param.shape;\r\n\t        var lineWidth = param.style.lineWidth;\r\n\t        var originX = shape.x;\r\n\t        var originY = shape.y;\r\n\t        var originWidth = shape.width;\r\n\t        var originHeight = shape.height;\r\n\t        shape.x = subPixelOptimize(shape.x, lineWidth, true);\r\n\t        shape.y = subPixelOptimize(shape.y, lineWidth, true);\r\n\t        shape.width = Math.max(\r\n\t            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\r\n\t            originWidth === 0 ? 0 : 1\r\n\t        );\r\n\t        shape.height = Math.max(\r\n\t            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\r\n\t            originHeight === 0 ? 0 : 1\r\n\t        );\r\n\t        return param;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Sub pixel optimize for canvas\r\n\t     *\r\n\t     * @param {number} position Coordinate, such as x, y\r\n\t     * @param {number} lineWidth Should be nonnegative integer.\r\n\t     * @param {boolean=} positiveOrNegative Default false (negative).\r\n\t     * @return {number} Optimized position.\r\n\t     */\r\n\t    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\r\n\t        // Assure that (position + lineWidth / 2) is near integer edge,\r\n\t        // otherwise line will be fuzzy in canvas.\r\n\t        var doubledPosition = round(position * 2);\r\n\t        return (doubledPosition + round(lineWidth)) % 2 === 0\r\n\t            ? doubledPosition / 2\r\n\t            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    function doSingleEnterHover(el) {\r\n\t        if (el.__isHover) {\r\n\t            return;\r\n\t        }\r\n\t        if (el.__hoverStlDirty) {\r\n\t            var stroke = el.style.stroke;\r\n\t            var fill = el.style.fill;\r\n\t\r\n\t            // Create hoverStyle on mouseover\r\n\t            var hoverStyle = el.__hoverStl;\r\n\t            var lift = colorTool.lift;\r\n\t            hoverStyle.fill = hoverStyle.fill\r\n\t                || (fill && (fill instanceof Gradient ? fill : lift(fill, -0.1)));\r\n\t            hoverStyle.stroke = hoverStyle.stroke\r\n\t                || (stroke && (stroke instanceof Gradient ? stroke : lift(stroke, -0.1)));\r\n\t\r\n\t            var normalStyle = {};\r\n\t            for (var name in hoverStyle) {\r\n\t                if (hoverStyle.hasOwnProperty(name)) {\r\n\t                    normalStyle[name] = el.style[name];\r\n\t                }\r\n\t            }\r\n\t\r\n\t            el.__normalStl = normalStyle;\r\n\t\r\n\t            el.__hoverStlDirty = false;\r\n\t        }\r\n\t        el.setStyle(el.__hoverStl);\r\n\t        el.z2 += 1;\r\n\t\r\n\t        el.__isHover = true;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function doSingleLeaveHover(el) {\r\n\t        if (!el.__isHover) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        var normalStl = el.__normalStl;\r\n\t        normalStl && el.setStyle(normalStl);\r\n\t        el.z2 -= 1;\r\n\t\r\n\t        el.__isHover = false;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function doEnterHover(el) {\r\n\t        el.type === 'group'\r\n\t            ? el.traverse(function (child) {\r\n\t                if (child.type !== 'group') {\r\n\t                    doSingleEnterHover(child);\r\n\t                }\r\n\t            })\r\n\t            : doSingleEnterHover(el);\r\n\t    }\r\n\t    graphic.doEnterHover = doEnterHover;\r\n\t    function doLeaveHover(el) {\r\n\t        el.type === 'group'\r\n\t            ? el.traverse(function (child) {\r\n\t                if (child.type !== 'group') {\r\n\t                    doSingleLeaveHover(child);\r\n\t                }\r\n\t            })\r\n\t            : doSingleLeaveHover(el);\r\n\t    }\r\n\t    graphic.doLeaveHover = doLeaveHover;\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function setElementHoverStl(el, hoverStl) {\r\n\t        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\r\n\t        // Often used when item group has a label element and it's hoverStyle is different\r\n\t        el.__hoverStl = el.hoverStyle || hoverStl || {};\r\n\t        el.__hoverStlDirty = true;\r\n\t    }\r\n\t    graphic.setElementHoverStl = setElementHoverStl;\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function onElementMouseOver() {\r\n\t        // Only if element is not in emphasis status\r\n\t        !this.__isEmphasis && doEnterHover(this);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function onElementMouseOut() {\r\n\t        // Only if element is not in emphasis status\r\n\t        !this.__isEmphasis && doLeaveHover(this);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function enterEmphasis() {\r\n\t        this.__isEmphasis = true;\r\n\t        doEnterHover(this);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function leaveEmphasis() {\r\n\t        this.__isEmphasis = false;\r\n\t        doLeaveHover(this);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Set hover style of element\r\n\t     * @param {module:zrender/Element} el\r\n\t     * @param {Object} [hoverStyle]\r\n\t     */\r\n\t    graphic.setHoverStyle = function (el, hoverStyle) {\r\n\t        el.type === 'group'\r\n\t            ? el.traverse(function (child) {\r\n\t                if (child.type !== 'group') {\r\n\t                    setElementHoverStl(child, hoverStyle);\r\n\t                }\r\n\t            })\r\n\t            : setElementHoverStl(el, hoverStyle);\r\n\t        // Remove previous bound handlers\r\n\t        el.on('mouseover', onElementMouseOver)\r\n\t          .on('mouseout', onElementMouseOut);\r\n\t\r\n\t        // Emphasis, normal can be triggered manually\r\n\t        el.on('emphasis', enterEmphasis)\r\n\t          .on('normal', leaveEmphasis);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Set text option in the style\r\n\t     * @param {Object} textStyle\r\n\t     * @param {module:echarts/model/Model} labelModel\r\n\t     * @param {string} color\r\n\t     */\r\n\t    graphic.setText = function (textStyle, labelModel, color) {\r\n\t        var labelPosition = labelModel.getShallow('position') || 'inside';\r\n\t        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\r\n\t        var textStyleModel = labelModel.getModel('textStyle');\r\n\t        zrUtil.extend(textStyle, {\r\n\t            textDistance: labelModel.getShallow('distance') || 5,\r\n\t            textFont: textStyleModel.getFont(),\r\n\t            textPosition: labelPosition,\r\n\t            textFill: textStyleModel.getTextColor() || labelColor\r\n\t        });\r\n\t    };\r\n\t\r\n\t    function animateOrSetProps(isUpdate, el, props, animatableModel, cb) {\r\n\t        var postfix = isUpdate ? 'Update' : '';\r\n\t        var duration = animatableModel\r\n\t            && animatableModel.getShallow('animationDuration' + postfix);\r\n\t        var animationEasing = animatableModel\r\n\t            && animatableModel.getShallow('animationEasing' + postfix);\r\n\t\r\n\t        animatableModel && animatableModel.getShallow('animation')\r\n\t            ? el.animateTo(props, duration, animationEasing, cb)\r\n\t            : (el.attr(props), cb && cb());\r\n\t    }\r\n\t    /**\r\n\t     * Update graphic element properties with or without animation according to the configuration in series\r\n\t     * @param {module:zrender/Element} el\r\n\t     * @param {Object} props\r\n\t     * @param {module:echarts/model/Model} [animatableModel]\r\n\t     * @param {Function} cb\r\n\t     */\r\n\t    graphic.updateProps = zrUtil.curry(animateOrSetProps, true);\r\n\t\r\n\t    /**\r\n\t     * Init graphic element properties with or without animation according to the configuration in series\r\n\t     * @param {module:zrender/Element} el\r\n\t     * @param {Object} props\r\n\t     * @param {module:echarts/model/Model} [animatableModel]\r\n\t     * @param {Function} cb\r\n\t     */\r\n\t    graphic.initProps = zrUtil.curry(animateOrSetProps, false);\r\n\t\r\n\t    /**\r\n\t     * Get transform matrix of target (param target),\r\n\t     * in coordinate of its ancestor (param ancestor)\r\n\t     *\r\n\t     * @param {module:zrender/mixin/Transformable} target\r\n\t     * @param {module:zrender/mixin/Transformable} ancestor\r\n\t     */\r\n\t    graphic.getTransform = function (target, ancestor) {\r\n\t        var mat = matrix.identity([]);\r\n\t\r\n\t        while (target && target !== ancestor) {\r\n\t            matrix.mul(mat, target.getLocalTransform(), mat);\r\n\t            target = target.parent;\r\n\t        }\r\n\t\r\n\t        return mat;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Apply transform to an vertex.\r\n\t     * @param {Array.<number>} vertex [x, y]\r\n\t     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n\t     * @param {boolean=} invert Whether use invert matrix.\r\n\t     * @return {Array.<number>} [x, y]\r\n\t     */\r\n\t    graphic.applyTransform = function (vertex, transform, invert) {\r\n\t        if (invert) {\r\n\t            transform = matrix.invert([], transform);\r\n\t        }\r\n\t        return vector.applyTransform([], vertex, transform);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @param {string} direction 'left' 'right' 'top' 'bottom'\r\n\t     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n\t     * @param {boolean=} invert Whether use invert matrix.\r\n\t     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\r\n\t     */\r\n\t    graphic.transformDirection = function (direction, transform, invert) {\r\n\t\r\n\t        // Pick a base, ensure that transform result will not be (0, 0).\r\n\t        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\r\n\t            ? 1 : Math.abs(2 * transform[4] / transform[0]);\r\n\t        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\r\n\t            ? 1 : Math.abs(2 * transform[4] / transform[2]);\r\n\t\r\n\t        var vertex = [\r\n\t            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\r\n\t            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\r\n\t        ];\r\n\t\r\n\t        vertex = graphic.applyTransform(vertex, transform, invert);\r\n\t\r\n\t        return Math.abs(vertex[0]) > Math.abs(vertex[1])\r\n\t            ? (vertex[0] > 0 ? 'right' : 'left')\r\n\t            : (vertex[1] > 0 ? 'bottom' : 'top');\r\n\t    };\r\n\t\r\n\t    module.exports = graphic;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t */\n\t\n\t    var Gradient = __webpack_require__(5);\n\t    // 用于处理merge时无法遍历Date等对象的问题\n\t    var BUILTIN_OBJECT = {\n\t        '[object Function]': 1,\n\t        '[object RegExp]': 1,\n\t        '[object Date]': 1,\n\t        '[object Error]': 1,\n\t        '[object CanvasGradient]': 1\n\t    };\n\t\n\t    var objToString = Object.prototype.toString;\n\t\n\t    var arrayProto = Array.prototype;\n\t    var nativeForEach = arrayProto.forEach;\n\t    var nativeFilter = arrayProto.filter;\n\t    var nativeSlice = arrayProto.slice;\n\t    var nativeMap = arrayProto.map;\n\t    var nativeReduce = arrayProto.reduce;\n\t\n\t    /**\n\t     * @param {*} source\n\t     * @return {*} 拷贝后的新对象\n\t     */\n\t    function clone(source) {\n\t        if (typeof source == 'object' && source !== null) {\n\t            var result = source;\n\t            if (source instanceof Array) {\n\t                result = [];\n\t                for (var i = 0, len = source.length; i < len; i++) {\n\t                    result[i] = clone(source[i]);\n\t                }\n\t            }\n\t            else if (\n\t                !isBuildInObject(source)\n\t                // 是否为 dom 对象\n\t                && !isDom(source)\n\t            ) {\n\t                result = {};\n\t                for (var key in source) {\n\t                    if (source.hasOwnProperty(key)) {\n\t                        result[key] = clone(source[key]);\n\t                    }\n\t                }\n\t            }\n\t\n\t            return result;\n\t        }\n\t\n\t        return source;\n\t    }\n\t\n\t    /**\n\t     * @param {*} target\n\t     * @param {*} source\n\t     * @param {boolean} [overwrite=false]\n\t     */\n\t    function merge(target, source, overwrite) {\n\t        // We should escapse that source is string\n\t        // and enter for ... in ...\n\t        if (!isObject(source) || !isObject(target)) {\n\t            return overwrite ? clone(source) : target;\n\t        }\n\t\n\t        for (var key in source) {\n\t            if (source.hasOwnProperty(key)) {\n\t                var targetProp = target[key];\n\t                var sourceProp = source[key];\n\t\n\t                if (isObject(sourceProp)\n\t                    && isObject(targetProp)\n\t                    && !isArray(sourceProp)\n\t                    && !isArray(targetProp)\n\t                    && !isDom(sourceProp)\n\t                    && !isDom(targetProp)\n\t                    && !isBuildInObject(sourceProp)\n\t                    && !isBuildInObject(targetProp)\n\t                ) {\n\t                    // 如果需要递归覆盖，就递归调用merge\n\t                    merge(targetProp, sourceProp, overwrite);\n\t                }\n\t                else if (overwrite || !(key in target)) {\n\t                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n\t                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n\t                    target[key] = clone(source[key], true);\n\t                }\n\t            }\n\t        }\n\t\n\t        return target;\n\t    }\n\t\n\t    /**\n\t     * @param {Array} targetAndSources The first item is target, and the rests are source.\n\t     * @param {boolean} [overwrite=false]\n\t     * @return {*} target\n\t     */\n\t    function mergeAll(targetAndSources, overwrite) {\n\t        var result = targetAndSources[0];\n\t        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n\t            result = merge(result, targetAndSources[i], overwrite);\n\t        }\n\t        return result;\n\t    }\n\t\n\t    /**\n\t     * @param {*} target\n\t     * @param {*} source\n\t     */\n\t    function extend(target, source) {\n\t        for (var key in source) {\n\t            if (source.hasOwnProperty(key)) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t\n\t    /**\n\t     * @param {*} target\n\t     * @param {*} source\n\t     * @param {boolen} [overlay=false]\n\t     */\n\t    function defaults(target, source, overlay) {\n\t        for (var key in source) {\n\t            if (source.hasOwnProperty(key)\n\t                && (overlay ? source[key] != null : target[key] == null)\n\t            ) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t\n\t    function createCanvas() {\n\t        return document.createElement('canvas');\n\t    }\n\t    // FIXME\n\t    var _ctx;\n\t    function getContext() {\n\t        if (!_ctx) {\n\t            // Use util.createCanvas instead of createCanvas\n\t            // because createCanvas may be overwritten in different environment\n\t            _ctx = util.createCanvas().getContext('2d');\n\t        }\n\t        return _ctx;\n\t    }\n\t\n\t    /**\n\t     * 查询数组中元素的index\n\t     */\n\t    function indexOf(array, value) {\n\t        if (array) {\n\t            if (array.indexOf) {\n\t                return array.indexOf(value);\n\t            }\n\t            for (var i = 0, len = array.length; i < len; i++) {\n\t                if (array[i] === value) {\n\t                    return i;\n\t                }\n\t            }\n\t        }\n\t        return -1;\n\t    }\n\t\n\t    /**\n\t     * 构造类继承关系\n\t     *\n\t     * @param {Function} clazz 源类\n\t     * @param {Function} baseClazz 基类\n\t     */\n\t    function inherits(clazz, baseClazz) {\n\t        var clazzPrototype = clazz.prototype;\n\t        function F() {}\n\t        F.prototype = baseClazz.prototype;\n\t        clazz.prototype = new F();\n\t\n\t        for (var prop in clazzPrototype) {\n\t            clazz.prototype[prop] = clazzPrototype[prop];\n\t        }\n\t        clazz.prototype.constructor = clazz;\n\t        clazz.superClass = baseClazz;\n\t    }\n\t\n\t    /**\n\t     * @param {Object|Function} target\n\t     * @param {Object|Function} sorce\n\t     * @param {boolean} overlay\n\t     */\n\t    function mixin(target, source, overlay) {\n\t        target = 'prototype' in target ? target.prototype : target;\n\t        source = 'prototype' in source ? source.prototype : source;\n\t\n\t        defaults(target, source, overlay);\n\t    }\n\t\n\t    /**\n\t     * @param {Array|TypedArray} data\n\t     */\n\t    function isArrayLike(data) {\n\t        if (! data) {\n\t            return;\n\t        }\n\t        if (typeof data == 'string') {\n\t            return false;\n\t        }\n\t        return typeof data.length == 'number';\n\t    }\n\t\n\t    /**\n\t     * 数组或对象遍历\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {Object|Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     */\n\t    function each(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.forEach && obj.forEach === nativeForEach) {\n\t            obj.forEach(cb, context);\n\t        }\n\t        else if (obj.length === +obj.length) {\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                cb.call(context, obj[i], i, obj);\n\t            }\n\t        }\n\t        else {\n\t            for (var key in obj) {\n\t                if (obj.hasOwnProperty(key)) {\n\t                    cb.call(context, obj[key], key, obj);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 数组映射\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function map(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.map && obj.map === nativeMap) {\n\t            return obj.map(cb, context);\n\t        }\n\t        else {\n\t            var result = [];\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                result.push(cb.call(context, obj[i], i, obj));\n\t            }\n\t            return result;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {Object} [memo]\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function reduce(obj, cb, memo, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.reduce && obj.reduce === nativeReduce) {\n\t            return obj.reduce(cb, memo, context);\n\t        }\n\t        else {\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                memo = cb.call(context, memo, obj[i], i, obj);\n\t            }\n\t            return memo;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 数组过滤\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function filter(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.filter && obj.filter === nativeFilter) {\n\t            return obj.filter(cb, context);\n\t        }\n\t        else {\n\t            var result = [];\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                if (cb.call(context, obj[i], i, obj)) {\n\t                    result.push(obj[i]);\n\t                }\n\t            }\n\t            return result;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 数组项查找\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function find(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        for (var i = 0, len = obj.length; i < len; i++) {\n\t            if (cb.call(context, obj[i], i, obj)) {\n\t                return obj[i];\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {Function} func\n\t     * @param {*} context\n\t     * @return {Function}\n\t     */\n\t    function bind(func, context) {\n\t        var args = nativeSlice.call(arguments, 2);\n\t        return function () {\n\t            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {Function} func\n\t     * @param {...}\n\t     * @return {Function}\n\t     */\n\t    function curry(func) {\n\t        var args = nativeSlice.call(arguments, 1);\n\t        return function () {\n\t            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isArray(value) {\n\t        return objToString.call(value) === '[object Array]';\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isFunction(value) {\n\t        return typeof value === 'function';\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isString(value) {\n\t        return objToString.call(value) === '[object String]';\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isObject(value) {\n\t        // Avoid a V8 JIT bug in Chrome 19-20.\n\t        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t        var type = typeof value;\n\t        return type === 'function' || (!!value && type == 'object');\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isBuildInObject(value) {\n\t        return !!BUILTIN_OBJECT[objToString.call(value)]\n\t            || (value instanceof Gradient);\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {*} value\n\t     * @return {boolean}\n\t     */\n\t    function isDom(value) {\n\t        return value && value.nodeType === 1\n\t               && typeof(value.nodeName) == 'string';\n\t    }\n\t\n\t    /**\n\t     * If value1 is not null, then return value1, otherwise judget rest of values.\n\t     * @param  {*...} values\n\t     * @return {*} Final value\n\t     */\n\t    function retrieve(values) {\n\t        for (var i = 0, len = arguments.length; i < len; i++) {\n\t            if (arguments[i] != null) {\n\t                return arguments[i];\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @memberOf module:zrender/tool/util\n\t     * @param {Array} arr\n\t     * @param {number} startIndex\n\t     * @param {number} endIndex\n\t     * @return {Array}\n\t     */\n\t    function slice() {\n\t        return Function.call.apply(nativeSlice, arguments);\n\t    }\n\t\n\t    /**\n\t     * @param {boolean} condition\n\t     * @param {string} message\n\t     */\n\t    function assert(condition, message) {\n\t        if (!condition) {\n\t            throw new Error(message);\n\t        }\n\t    }\n\t\n\t    var util = {\n\t        inherits: inherits,\n\t        mixin: mixin,\n\t        clone: clone,\n\t        merge: merge,\n\t        mergeAll: mergeAll,\n\t        extend: extend,\n\t        defaults: defaults,\n\t        getContext: getContext,\n\t        createCanvas: createCanvas,\n\t        indexOf: indexOf,\n\t        slice: slice,\n\t        find: find,\n\t        isArrayLike: isArrayLike,\n\t        each: each,\n\t        map: map,\n\t        reduce: reduce,\n\t        filter: filter,\n\t        bind: bind,\n\t        curry: curry,\n\t        isArray: isArray,\n\t        isString: isString,\n\t        isObject: isObject,\n\t        isFunction: isFunction,\n\t        isBuildInObject: isBuildInObject,\n\t        isDom: isDom,\n\t        retrieve: retrieve,\n\t        assert: assert,\n\t        noop: function () {}\n\t    };\n\t    module.exports = util;\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    /**\n\t     * @param {Array.<Object>} colorStops\n\t     */\n\t    var Gradient = function (colorStops) {\n\t\n\t        this.colorStops = colorStops || [];\n\t    };\n\t\n\t    Gradient.prototype = {\n\t\n\t        constructor: Gradient,\n\t\n\t        addColorStop: function (offset, color) {\n\t            this.colorStops.push({\n\t\n\t                offset: offset,\n\t\n\t                color: color\n\t            });\n\t        }\n\t    };\n\t\n\t    module.exports = Gradient;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var Path = __webpack_require__(7);\n\t    var PathProxy = __webpack_require__(26);\n\t    var transformPath = __webpack_require__(36);\n\t    var matrix = __webpack_require__(14);\n\t\n\t    // command chars\n\t    var cc = [\n\t        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n\t        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n\t    ];\n\t\n\t    var mathSqrt = Math.sqrt;\n\t    var mathSin = Math.sin;\n\t    var mathCos = Math.cos;\n\t    var PI = Math.PI;\n\t\n\t    var vMag = function(v) {\n\t        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n\t    };\n\t    var vRatio = function(u, v) {\n\t        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n\t    };\n\t    var vAngle = function(u, v) {\n\t        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n\t                * Math.acos(vRatio(u, v));\n\t    };\n\t\n\t    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n\t        var psi = psiDeg * (PI / 180.0);\n\t        var xp = mathCos(psi) * (x1 - x2) / 2.0\n\t                 + mathSin(psi) * (y1 - y2) / 2.0;\n\t        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n\t                 + mathCos(psi) * (y1 - y2) / 2.0;\n\t\n\t        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\t\n\t        if (lambda > 1) {\n\t            rx *= mathSqrt(lambda);\n\t            ry *= mathSqrt(lambda);\n\t        }\n\t\n\t        var f = (fa === fs ? -1 : 1)\n\t            * mathSqrt((((rx * rx) * (ry * ry))\n\t                    - ((rx * rx) * (yp * yp))\n\t                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n\t                    + (ry * ry) * (xp * xp))\n\t                ) || 0;\n\t\n\t        var cxp = f * rx * yp / ry;\n\t        var cyp = f * -ry * xp / rx;\n\t\n\t        var cx = (x1 + x2) / 2.0\n\t                 + mathCos(psi) * cxp\n\t                 - mathSin(psi) * cyp;\n\t        var cy = (y1 + y2) / 2.0\n\t                + mathSin(psi) * cxp\n\t                + mathCos(psi) * cyp;\n\t\n\t        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n\t        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n\t        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n\t        var dTheta = vAngle(u, v);\n\t\n\t        if (vRatio(u, v) <= -1) {\n\t            dTheta = PI;\n\t        }\n\t        if (vRatio(u, v) >= 1) {\n\t            dTheta = 0;\n\t        }\n\t        if (fs === 0 && dTheta > 0) {\n\t            dTheta = dTheta - 2 * PI;\n\t        }\n\t        if (fs === 1 && dTheta < 0) {\n\t            dTheta = dTheta + 2 * PI;\n\t        }\n\t\n\t        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n\t    }\n\t\n\t    function createPathProxyFromString(data) {\n\t        if (!data) {\n\t            return [];\n\t        }\n\t\n\t        // command string\n\t        var cs = data.replace(/-/g, ' -')\n\t            .replace(/  /g, ' ')\n\t            .replace(/ /g, ',')\n\t            .replace(/,,/g, ',');\n\t\n\t        var n;\n\t        // create pipes so that we can split the data\n\t        for (n = 0; n < cc.length; n++) {\n\t            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n\t        }\n\t\n\t        // create array\n\t        var arr = cs.split('|');\n\t        // init context point\n\t        var cpx = 0;\n\t        var cpy = 0;\n\t\n\t        var path = new PathProxy();\n\t        var CMD = PathProxy.CMD;\n\t\n\t        var prevCmd;\n\t        for (n = 1; n < arr.length; n++) {\n\t            var str = arr[n];\n\t            var c = str.charAt(0);\n\t            var off = 0;\n\t            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n\t            var cmd;\n\t\n\t            if (p.length > 0 && p[0] === '') {\n\t                p.shift();\n\t            }\n\t\n\t            for (var i = 0; i < p.length; i++) {\n\t                p[i] = parseFloat(p[i]);\n\t            }\n\t            while (off < p.length && !isNaN(p[off])) {\n\t                if (isNaN(p[0])) {\n\t                    break;\n\t                }\n\t                var ctlPtx;\n\t                var ctlPty;\n\t\n\t                var rx;\n\t                var ry;\n\t                var psi;\n\t                var fa;\n\t                var fs;\n\t\n\t                var x1 = cpx;\n\t                var y1 = cpy;\n\t\n\t                // convert l, H, h, V, and v to L\n\t                switch (c) {\n\t                    case 'l':\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'L':\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'm':\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.M;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        c = 'l';\n\t                        break;\n\t                    case 'M':\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.M;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        c = 'L';\n\t                        break;\n\t                    case 'h':\n\t                        cpx += p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'H':\n\t                        cpx = p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'v':\n\t                        cpy += p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'V':\n\t                        cpy = p[off++];\n\t                        cmd = CMD.L;\n\t                        path.addData(cmd, cpx, cpy);\n\t                        break;\n\t                    case 'C':\n\t                        cmd = CMD.C;\n\t                        path.addData(\n\t                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n\t                        );\n\t                        cpx = p[off - 2];\n\t                        cpy = p[off - 1];\n\t                        break;\n\t                    case 'c':\n\t                        cmd = CMD.C;\n\t                        path.addData(\n\t                            cmd,\n\t                            p[off++] + cpx, p[off++] + cpy,\n\t                            p[off++] + cpx, p[off++] + cpy,\n\t                            p[off++] + cpx, p[off++] + cpy\n\t                        );\n\t                        cpx += p[off - 2];\n\t                        cpy += p[off - 1];\n\t                        break;\n\t                    case 'S':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        var len = path.len();\n\t                        var pathData = path.data;\n\t                        if (prevCmd === CMD.C) {\n\t                            ctlPtx += cpx - pathData[len - 4];\n\t                            ctlPty += cpy - pathData[len - 3];\n\t                        }\n\t                        cmd = CMD.C;\n\t                        x1 = p[off++];\n\t                        y1 = p[off++];\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n\t                        break;\n\t                    case 's':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        var len = path.len();\n\t                        var pathData = path.data;\n\t                        if (prevCmd === CMD.C) {\n\t                            ctlPtx += cpx - pathData[len - 4];\n\t                            ctlPty += cpy - pathData[len - 3];\n\t                        }\n\t                        cmd = CMD.C;\n\t                        x1 = cpx + p[off++];\n\t                        y1 = cpy + p[off++];\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n\t                        break;\n\t                    case 'Q':\n\t                        x1 = p[off++];\n\t                        y1 = p[off++];\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.Q;\n\t                        path.addData(cmd, x1, y1, cpx, cpy);\n\t                        break;\n\t                    case 'q':\n\t                        x1 = p[off++] + cpx;\n\t                        y1 = p[off++] + cpy;\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.Q;\n\t                        path.addData(cmd, x1, y1, cpx, cpy);\n\t                        break;\n\t                    case 'T':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        var len = path.len();\n\t                        var pathData = path.data;\n\t                        if (prevCmd === CMD.Q) {\n\t                            ctlPtx += cpx - pathData[len - 4];\n\t                            ctlPty += cpy - pathData[len - 3];\n\t                        }\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.Q;\n\t                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n\t                        break;\n\t                    case 't':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        var len = path.len();\n\t                        var pathData = path.data;\n\t                        if (prevCmd === CMD.Q) {\n\t                            ctlPtx += cpx - pathData[len - 4];\n\t                            ctlPty += cpy - pathData[len - 3];\n\t                        }\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.Q;\n\t                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n\t                        break;\n\t                    case 'A':\n\t                        rx = p[off++];\n\t                        ry = p[off++];\n\t                        psi = p[off++];\n\t                        fa = p[off++];\n\t                        fs = p[off++];\n\t\n\t                        x1 = cpx, y1 = cpy;\n\t                        cpx = p[off++];\n\t                        cpy = p[off++];\n\t                        cmd = CMD.A;\n\t                        processArc(\n\t                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n\t                        );\n\t                        break;\n\t                    case 'a':\n\t                        rx = p[off++];\n\t                        ry = p[off++];\n\t                        psi = p[off++];\n\t                        fa = p[off++];\n\t                        fs = p[off++];\n\t\n\t                        x1 = cpx, y1 = cpy;\n\t                        cpx += p[off++];\n\t                        cpy += p[off++];\n\t                        cmd = CMD.A;\n\t                        processArc(\n\t                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n\t                        );\n\t                        break;\n\t                }\n\t            }\n\t\n\t            if (c === 'z' || c === 'Z') {\n\t                cmd = CMD.Z;\n\t                path.addData(cmd);\n\t            }\n\t\n\t            prevCmd = cmd;\n\t        }\n\t\n\t        path.toStatic();\n\t\n\t        return path;\n\t    }\n\t\n\t    // TODO Optimize double memory cost problem\n\t    function createPathOptions(str, opts) {\n\t        var pathProxy = createPathProxyFromString(str);\n\t        var transform;\n\t        opts = opts || {};\n\t        opts.buildPath = function (path) {\n\t            path.setData(pathProxy.data);\n\t            transform && transformPath(path, transform);\n\t            // Svg and vml renderer don't have context\n\t            var ctx = path.getContext();\n\t            if (ctx) {\n\t                path.rebuildPath(ctx);\n\t            }\n\t        };\n\t\n\t        opts.applyTransform = function (m) {\n\t            if (!transform) {\n\t                transform = matrix.create();\n\t            }\n\t            matrix.mul(transform, m, transform);\n\t        };\n\t\n\t        return opts;\n\t    }\n\t\n\t    module.exports = {\n\t        /**\n\t         * Create a Path object from path string data\n\t         * http://www.w3.org/TR/SVG/paths.html#PathData\n\t         * @param  {Object} opts Other options\n\t         */\n\t        createFromString: function (str, opts) {\n\t            return new Path(createPathOptions(str, opts));\n\t        },\n\t\n\t        /**\n\t         * Create a Path class from path string data\n\t         * @param  {string} str\n\t         * @param  {Object} opts Other options\n\t         */\n\t        extendFromString: function (str, opts) {\n\t            return Path.extend(createPathOptions(str, opts));\n\t        },\n\t\n\t        /**\n\t         * Merge multiple paths\n\t         */\n\t        // TODO Apply transform\n\t        // TODO stroke dash\n\t        // TODO Optimize double memory cost problem\n\t        mergePath: function (pathEls, opts) {\n\t            var pathList = [];\n\t            var len = pathEls.length;\n\t            var pathEl;\n\t            var i;\n\t            for (i = 0; i < len; i++) {\n\t                pathEl = pathEls[i];\n\t                if (pathEl.__dirty) {\n\t                    pathEl.buildPath(pathEl.path, pathEl.shape);\n\t                }\n\t                pathList.push(pathEl.path);\n\t            }\n\t\n\t            var pathBundle = new Path(opts);\n\t            pathBundle.buildPath = function (path) {\n\t                path.appendPath(pathList);\n\t                // Svg and vml renderer don't have context\n\t                var ctx = path.getContext();\n\t                if (ctx) {\n\t                    path.rebuildPath(ctx);\n\t                }\n\t            };\n\t\n\t            return pathBundle;\n\t        }\n\t    };\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Path element\n\t * @module zrender/graphic/Path\n\t */\n\t\n\t\n\t\n\t    var Displayable = __webpack_require__(8);\n\t    var zrUtil = __webpack_require__(4);\n\t    var PathProxy = __webpack_require__(26);\n\t    var pathContain = __webpack_require__(29);\n\t\n\t    var Gradient = __webpack_require__(5);\n\t\n\t    function pathHasFill(style) {\n\t        var fill = style.fill;\n\t        return fill != null && fill !== 'none';\n\t    }\n\t\n\t    function pathHasStroke(style) {\n\t        var stroke = style.stroke;\n\t        return stroke != null && stroke !== 'none' && style.lineWidth > 0;\n\t    }\n\t\n\t    var abs = Math.abs;\n\t\n\t    /**\n\t     * @alias module:zrender/graphic/Path\n\t     * @extends module:zrender/graphic/Displayable\n\t     * @constructor\n\t     * @param {Object} opts\n\t     */\n\t    function Path(opts) {\n\t        Displayable.call(this, opts);\n\t\n\t        /**\n\t         * @type {module:zrender/core/PathProxy}\n\t         * @readOnly\n\t         */\n\t        this.path = new PathProxy();\n\t    }\n\t\n\t    Path.prototype = {\n\t\n\t        constructor: Path,\n\t\n\t        type: 'path',\n\t\n\t        __dirtyPath: true,\n\t\n\t        strokeContainThreshold: 5,\n\t\n\t        brush: function (ctx) {\n\t            ctx.save();\n\t\n\t            var style = this.style;\n\t            var path = this.path;\n\t            var hasStroke = pathHasStroke(style);\n\t            var hasFill = pathHasFill(style);\n\t\n\t            if (this.__dirtyPath) {\n\t                // Update gradient because bounding rect may changed\n\t                if (hasFill && (style.fill instanceof Gradient)) {\n\t                    style.fill.updateCanvasGradient(this, ctx);\n\t                }\n\t                if (hasStroke && (style.stroke instanceof Gradient)) {\n\t                    style.stroke.updateCanvasGradient(this, ctx);\n\t                }\n\t            }\n\t\n\t            style.bind(ctx, this);\n\t            this.setTransform(ctx);\n\t\n\t            var lineDash = style.lineDash;\n\t            var lineDashOffset = style.lineDashOffset;\n\t\n\t            var ctxLineDash = !!ctx.setLineDash;\n\t\n\t            // Proxy context\n\t            // Rebuild path in following 2 cases\n\t            // 1. Path is dirty\n\t            // 2. Path needs javascript implemented lineDash stroking.\n\t            //    In this case, lineDash information will not be saved in PathProxy\n\t            if (this.__dirtyPath || (\n\t                lineDash && !ctxLineDash && hasStroke\n\t            )) {\n\t                path = this.path.beginPath(ctx);\n\t\n\t                // Setting line dash before build path\n\t                if (lineDash && !ctxLineDash) {\n\t                    path.setLineDash(lineDash);\n\t                    path.setLineDashOffset(lineDashOffset);\n\t                }\n\t\n\t                this.buildPath(path, this.shape);\n\t\n\t                // Clear path dirty flag\n\t                this.__dirtyPath = false;\n\t            }\n\t            else {\n\t                // Replay path building\n\t                ctx.beginPath();\n\t                this.path.rebuildPath(ctx);\n\t            }\n\t\n\t            hasFill && path.fill(ctx);\n\t\n\t            if (lineDash && ctxLineDash) {\n\t                ctx.setLineDash(lineDash);\n\t                ctx.lineDashOffset = lineDashOffset;\n\t            }\n\t\n\t            hasStroke && path.stroke(ctx);\n\t\n\t            // Draw rect text\n\t            if (style.text != null) {\n\t                // var rect = this.getBoundingRect();\n\t                this.drawRectText(ctx, this.getBoundingRect());\n\t            }\n\t\n\t            ctx.restore();\n\t        },\n\t\n\t        buildPath: function (ctx, shapeCfg) {},\n\t\n\t        getBoundingRect: function () {\n\t            var rect = this._rect;\n\t            var style = this.style;\n\t            if (!rect) {\n\t                var path = this.path;\n\t                if (this.__dirtyPath) {\n\t                    path.beginPath();\n\t                    this.buildPath(path, this.shape);\n\t                }\n\t                rect = path.getBoundingRect();\n\t            }\n\t            /**\n\t             * Needs update rect with stroke lineWidth when\n\t             * 1. Element changes scale or lineWidth\n\t             * 2. First create rect\n\t             */\n\t            if (pathHasStroke(style) && (this.__dirty || !this._rect)) {\n\t                var rectWithStroke = this._rectWithStroke\n\t                    || (this._rectWithStroke = rect.clone());\n\t                rectWithStroke.copy(rect);\n\t                // FIXME Must after updateTransform\n\t                var w = style.lineWidth;\n\t                // PENDING, Min line width is needed when line is horizontal or vertical\n\t                var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\t\n\t                // Only add extra hover lineWidth when there are no fill\n\t                if (!pathHasFill(style)) {\n\t                    w = Math.max(w, this.strokeContainThreshold);\n\t                }\n\t                // Consider line width\n\t                // Line scale can't be 0;\n\t                if (lineScale > 1e-10) {\n\t                    rectWithStroke.width += w / lineScale;\n\t                    rectWithStroke.height += w / lineScale;\n\t                    rectWithStroke.x -= w / lineScale / 2;\n\t                    rectWithStroke.y -= w / lineScale / 2;\n\t                }\n\t                return rectWithStroke;\n\t            }\n\t            this._rect = rect;\n\t            return rect;\n\t        },\n\t\n\t        contain: function (x, y) {\n\t            var localPos = this.transformCoordToLocal(x, y);\n\t            var rect = this.getBoundingRect();\n\t            var style = this.style;\n\t            x = localPos[0];\n\t            y = localPos[1];\n\t\n\t            if (rect.contain(x, y)) {\n\t                var pathData = this.path.data;\n\t                if (pathHasStroke(style)) {\n\t                    var lineWidth = style.lineWidth;\n\t                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\t                    // Line scale can't be 0;\n\t                    if (lineScale > 1e-10) {\n\t                        // Only add extra hover lineWidth when there are no fill\n\t                        if (!pathHasFill(style)) {\n\t                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n\t                        }\n\t                        if (pathContain.containStroke(\n\t                            pathData, lineWidth / lineScale, x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                }\n\t                if (pathHasFill(style)) {\n\t                    return pathContain.contain(pathData, x, y);\n\t                }\n\t            }\n\t            return false;\n\t        },\n\t\n\t        /**\n\t         * @param  {boolean} dirtyPath\n\t         */\n\t        dirty: function (dirtyPath) {\n\t            if (arguments.length ===0) {\n\t                dirtyPath = true;\n\t            }\n\t            // Only mark dirty, not mark clean\n\t            if (dirtyPath) {\n\t                this.__dirtyPath = dirtyPath;\n\t                this._rect = null;\n\t            }\n\t\n\t            this.__dirty = true;\n\t\n\t            this.__zr && this.__zr.refresh();\n\t\n\t            // Used as a clipping path\n\t            if (this.__clipTarget) {\n\t                this.__clipTarget.dirty();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Alias for animate('shape')\n\t         * @param {boolean} loop\n\t         */\n\t        animateShape: function (loop) {\n\t            return this.animate('shape', loop);\n\t        },\n\t\n\t        // Overwrite attrKV\n\t        attrKV: function (key, value) {\n\t            // FIXME\n\t            if (key === 'shape') {\n\t                this.setShape(value);\n\t            }\n\t            else {\n\t                Displayable.prototype.attrKV.call(this, key, value);\n\t            }\n\t        },\n\t        /**\n\t         * @param {Object|string} key\n\t         * @param {*} value\n\t         */\n\t        setShape: function (key, value) {\n\t            var shape = this.shape;\n\t            // Path from string may not have shape\n\t            if (shape) {\n\t                if (zrUtil.isObject(key)) {\n\t                    for (var name in key) {\n\t                        shape[name] = key[name];\n\t                    }\n\t                }\n\t                else {\n\t                    shape[key] = value;\n\t                }\n\t                this.dirty(true);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        getLineScale: function () {\n\t            var m = this.transform;\n\t            // Get the line scale.\n\t            // Determinant of `m` means how much the area is enlarged by the\n\t            // transformation. So its square root can be used as a scale factor\n\t            // for width.\n\t            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n\t                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n\t                : 1;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * 扩展一个 Path element, 比如星形，圆等。\n\t     * Extend a path element\n\t     * @param {Object} props\n\t     * @param {string} props.type Path type\n\t     * @param {Function} props.init Initialize\n\t     * @param {Function} props.buildPath Overwrite buildPath method\n\t     * @param {Object} [props.style] Extended default style config\n\t     * @param {Object} [props.shape] Extended default shape config\n\t     */\n\t    Path.extend = function (defaults) {\n\t        var Sub = function (opts) {\n\t            Path.call(this, opts);\n\t\n\t            if (defaults.style) {\n\t                // Extend default style\n\t                this.style.extendFrom(defaults.style, false);\n\t            }\n\t\n\t            // Extend default shape\n\t            var defaultShape = defaults.shape;\n\t            if (defaultShape) {\n\t                this.shape = this.shape || {};\n\t                var thisShape = this.shape;\n\t                for (var name in defaultShape) {\n\t                    if (\n\t                        ! thisShape.hasOwnProperty(name)\n\t                        && defaultShape.hasOwnProperty(name)\n\t                    ) {\n\t                        thisShape[name] = defaultShape[name];\n\t                    }\n\t                }\n\t            }\n\t\n\t            defaults.init && defaults.init.call(this, opts);\n\t        };\n\t\n\t        zrUtil.inherits(Sub, Path);\n\t\n\t        // FIXME 不能 extend position, rotation 等引用对象\n\t        for (var name in defaults) {\n\t            // Extending prototype values and methods\n\t            if (name !== 'style' && name !== 'shape') {\n\t                Sub.prototype[name] = defaults[name];\n\t            }\n\t        }\n\t\n\t        return Sub;\n\t    };\n\t\n\t    zrUtil.inherits(Path, Displayable);\n\t\n\t    module.exports = Path;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 可绘制的图形基类\n\t * Base class of all displayable graphic objects\n\t * @module zrender/graphic/Displayable\n\t */\n\t\n\t\n\t\n\t    var zrUtil = __webpack_require__(4);\n\t\n\t    var Style = __webpack_require__(9);\n\t\n\t    var Element = __webpack_require__(10);\n\t    var RectText = __webpack_require__(23);\n\t    // var Stateful = require('./mixin/Stateful');\n\t\n\t    /**\n\t     * @alias module:zrender/graphic/Displayable\n\t     * @extends module:zrender/Element\n\t     * @extends module:zrender/graphic/mixin/RectText\n\t     */\n\t    function Displayable(opts) {\n\t\n\t        opts = opts || {};\n\t\n\t        Element.call(this, opts);\n\t\n\t        // Extend properties\n\t        for (var name in opts) {\n\t            if (\n\t                opts.hasOwnProperty(name) &&\n\t                name !== 'style'\n\t            ) {\n\t                this[name] = opts[name];\n\t            }\n\t        }\n\t\n\t        /**\n\t         * @type {module:zrender/graphic/Style}\n\t         */\n\t        this.style = new Style(opts.style);\n\t\n\t        this._rect = null;\n\t        // Shapes for cascade clipping.\n\t        this.__clipPaths = [];\n\t\n\t        // FIXME Stateful must be mixined after style is setted\n\t        // Stateful.call(this, opts);\n\t    }\n\t\n\t    Displayable.prototype = {\n\t\n\t        constructor: Displayable,\n\t\n\t        type: 'displayable',\n\t\n\t        /**\n\t         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n\t         * Dirty flag. From which painter will determine if this displayable object needs brush\n\t         * @name module:zrender/graphic/Displayable#__dirty\n\t         * @type {boolean}\n\t         */\n\t        __dirty: true,\n\t\n\t        /**\n\t         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n\t         * If ignore drawing of the displayable object. Mouse event will still be triggered\n\t         * @name module:/zrender/graphic/Displayable#invisible\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        invisible: false,\n\t\n\t        /**\n\t         * @name module:/zrender/graphic/Displayable#z\n\t         * @type {number}\n\t         * @default 0\n\t         */\n\t        z: 0,\n\t\n\t        /**\n\t         * @name module:/zrender/graphic/Displayable#z\n\t         * @type {number}\n\t         * @default 0\n\t         */\n\t        z2: 0,\n\t\n\t        /**\n\t         * z层level，决定绘画在哪层canvas中\n\t         * @name module:/zrender/graphic/Displayable#zlevel\n\t         * @type {number}\n\t         * @default 0\n\t         */\n\t        zlevel: 0,\n\t\n\t        /**\n\t         * 是否可拖拽\n\t         * @name module:/zrender/graphic/Displayable#draggable\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        draggable: false,\n\t\n\t        /**\n\t         * 是否正在拖拽\n\t         * @name module:/zrender/graphic/Displayable#draggable\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        dragging: false,\n\t\n\t        /**\n\t         * 是否相应鼠标事件\n\t         * @name module:/zrender/graphic/Displayable#silent\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        silent: false,\n\t\n\t        /**\n\t         * If enable culling\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        culling: false,\n\t\n\t        /**\n\t         * Mouse cursor when hovered\n\t         * @name module:/zrender/graphic/Displayable#cursor\n\t         * @type {string}\n\t         */\n\t        cursor: 'pointer',\n\t\n\t        /**\n\t         * If hover area is bounding rect\n\t         * @name module:/zrender/graphic/Displayable#rectHover\n\t         * @type {string}\n\t         */\n\t        rectHover: false,\n\t\n\t        beforeBrush: function (ctx) {},\n\t\n\t        afterBrush: function (ctx) {},\n\t\n\t        /**\n\t         * 图形绘制方法\n\t         * @param {Canvas2DRenderingContext} ctx\n\t         */\n\t        // Interface\n\t        brush: function (ctx) {},\n\t\n\t        /**\n\t         * 获取最小包围盒\n\t         * @return {module:zrender/core/BoundingRect}\n\t         */\n\t        // Interface\n\t        getBoundingRect: function () {},\n\t\n\t        /**\n\t         * 判断坐标 x, y 是否在图形上\n\t         * If displayable element contain coord x, y\n\t         * @param  {number} x\n\t         * @param  {number} y\n\t         * @return {boolean}\n\t         */\n\t        contain: function (x, y) {\n\t            return this.rectContain(x, y);\n\t        },\n\t\n\t        /**\n\t         * @param  {Function} cb\n\t         * @param  {}   context\n\t         */\n\t        traverse: function (cb, context) {\n\t            cb.call(context, this);\n\t        },\n\t\n\t        /**\n\t         * 判断坐标 x, y 是否在图形的包围盒上\n\t         * If bounding rect of element contain coord x, y\n\t         * @param  {number} x\n\t         * @param  {number} y\n\t         * @return {boolean}\n\t         */\n\t        rectContain: function (x, y) {\n\t            var coord = this.transformCoordToLocal(x, y);\n\t            var rect = this.getBoundingRect();\n\t            return rect.contain(coord[0], coord[1]);\n\t        },\n\t\n\t        /**\n\t         * 标记图形元素为脏，并且在下一帧重绘\n\t         * Mark displayable element dirty and refresh next frame\n\t         */\n\t        dirty: function () {\n\t            this.__dirty = true;\n\t\n\t            this._rect = null;\n\t\n\t            this.__zr && this.__zr.refresh();\n\t        },\n\t\n\t        /**\n\t         * 图形是否会触发事件\n\t         * If displayable object binded any event\n\t         * @return {boolean}\n\t         */\n\t        // TODO, 通过 bind 绑定的事件\n\t        // isSilent: function () {\n\t        //     return !(\n\t        //         this.hoverable || this.draggable\n\t        //         || this.onmousemove || this.onmouseover || this.onmouseout\n\t        //         || this.onmousedown || this.onmouseup || this.onclick\n\t        //         || this.ondragenter || this.ondragover || this.ondragleave\n\t        //         || this.ondrop\n\t        //     );\n\t        // },\n\t        /**\n\t         * Alias for animate('style')\n\t         * @param {boolean} loop\n\t         */\n\t        animateStyle: function (loop) {\n\t            return this.animate('style', loop);\n\t        },\n\t\n\t        attrKV: function (key, value) {\n\t            if (key !== 'style') {\n\t                Element.prototype.attrKV.call(this, key, value);\n\t            }\n\t            else {\n\t                this.style.set(value);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param {Object|string} key\n\t         * @param {*} value\n\t         */\n\t        setStyle: function (key, value) {\n\t            this.style.set(key, value);\n\t            this.dirty();\n\t            return this;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(Displayable, Element);\n\t\n\t    zrUtil.mixin(Displayable, RectText);\n\t    // zrUtil.mixin(Displayable, Stateful);\n\t\n\t    module.exports = Displayable;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @module zrender/graphic/Style\n\t */\n\t\n\t\n\t\n\t    var STYLE_LIST_COMMON = [\n\t        'lineCap', 'lineJoin', 'miterLimit',\n\t        'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'shadowColor'\n\t    ];\n\t\n\t    var Style = function (opts) {\n\t        this.extendFrom(opts);\n\t    };\n\t\n\t    Style.prototype = {\n\t\n\t        constructor: Style,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        fill: '#000000',\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        stroke: null,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        opacity: 1,\n\t\n\t        /**\n\t         * @type {Array.<number>}\n\t         */\n\t        lineDash: null,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        lineDashOffset: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        shadowBlur: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        shadowOffsetX: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        shadowOffsetY: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        lineWidth: 1,\n\t\n\t        /**\n\t         * If stroke ignore scale\n\t         * @type {Boolean}\n\t         */\n\t        strokeNoScale: false,\n\t\n\t        // Bounding rect text configuration\n\t        // Not affected by element transform\n\t        /**\n\t         * @type {string}\n\t         */\n\t        text: null,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textFill: '#000',\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textStroke: null,\n\t\n\t        /**\n\t         * 'inside', 'left', 'right', 'top', 'bottom'\n\t         * [x, y]\n\t         * @type {string|Array.<number>}\n\t         * @default 'inside'\n\t         */\n\t        textPosition: 'inside',\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textBaseline: null,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textAlign: null,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        textVerticalAlign: null,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        textDistance: 5,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        textShadowBlur: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        textShadowOffsetX: 0,\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        textShadowOffsetY: 0,\n\t\n\t        /**\n\t         * @param {CanvasRenderingContext2D} ctx\n\t         */\n\t        bind: function (ctx, el) {\n\t            var fill = this.fill;\n\t            var stroke = this.stroke;\n\t            for (var i = 0; i < STYLE_LIST_COMMON.length; i++) {\n\t                var styleName = STYLE_LIST_COMMON[i];\n\t\n\t                if (this[styleName] != null) {\n\t                    ctx[styleName] = this[styleName];\n\t                }\n\t            }\n\t            if (stroke != null) {\n\t                var lineWidth = this.lineWidth;\n\t                ctx.lineWidth = lineWidth / (\n\t                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n\t                );\n\t            }\n\t            if (fill != null) {\n\t                 // Use canvas gradient if has\n\t                ctx.fillStyle = fill.canvasGradient ? fill.canvasGradient : fill;\n\t            }\n\t            if (stroke != null) {\n\t                 // Use canvas gradient if has\n\t                ctx.strokeStyle = stroke.canvasGradient ? stroke.canvasGradient : stroke;\n\t            }\n\t            this.opacity != null && (ctx.globalAlpha = this.opacity);\n\t        },\n\t\n\t        /**\n\t         * Extend from other style\n\t         * @param {zrender/graphic/Style} otherStyle\n\t         * @param {boolean} overwrite\n\t         */\n\t        extendFrom: function (otherStyle, overwrite) {\n\t            if (otherStyle) {\n\t                var target = this;\n\t                for (var name in otherStyle) {\n\t                    if (otherStyle.hasOwnProperty(name)\n\t                        && (overwrite || ! target.hasOwnProperty(name))\n\t                    ) {\n\t                        target[name] = otherStyle[name];\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Batch setting style with a given object\n\t         * @param {Object|string} obj\n\t         * @param {*} [obj]\n\t         */\n\t        set: function (obj, value) {\n\t            if (typeof obj === 'string') {\n\t                this[obj] = value;\n\t            }\n\t            else {\n\t                this.extendFrom(obj, true);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Clone\n\t         * @return {zrender/graphic/Style} [description]\n\t         */\n\t        clone: function () {\n\t            var newStyle = new this.constructor();\n\t            newStyle.extendFrom(this, true);\n\t            return newStyle;\n\t        }\n\t    };\n\t\n\t    var styleProto = Style.prototype;\n\t    var name;\n\t    var i;\n\t    for (i = 0; i < STYLE_LIST_COMMON.length; i++) {\n\t        name = STYLE_LIST_COMMON[i];\n\t        if (!(name in styleProto)) {\n\t            styleProto[name] = null;\n\t        }\n\t    }\n\t\n\t    module.exports = Style;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module zrender/Element\n\t */\n\t\n\t\n\t    var guid = __webpack_require__(11);\n\t    var Eventful = __webpack_require__(12);\n\t    var Transformable = __webpack_require__(13);\n\t    var Animatable = __webpack_require__(16);\n\t    var zrUtil = __webpack_require__(4);\n\t\n\t    /**\n\t     * @alias module:zrender/Element\n\t     * @constructor\n\t     * @extends {module:zrender/mixin/Animatable}\n\t     * @extends {module:zrender/mixin/Transformable}\n\t     * @extends {module:zrender/mixin/Eventful}\n\t     */\n\t    var Element = function (opts) {\n\t\n\t        Transformable.call(this, opts);\n\t        Eventful.call(this, opts);\n\t        Animatable.call(this, opts);\n\t\n\t        /**\n\t         * 画布元素ID\n\t         * @type {string}\n\t         */\n\t        this.id = opts.id || guid();\n\t    };\n\t\n\t    Element.prototype = {\n\t\n\t        /**\n\t         * 元素类型\n\t         * Element type\n\t         * @type {string}\n\t         */\n\t        type: 'element',\n\t\n\t        /**\n\t         * 元素名字\n\t         * Element name\n\t         * @type {string}\n\t         */\n\t        name: '',\n\t\n\t        /**\n\t         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n\t         * ZRender instance will be assigned when element is associated with zrender\n\t         * @name module:/zrender/Element#__zr\n\t         * @type {module:zrender/ZRender}\n\t         */\n\t        __zr: null,\n\t\n\t        /**\n\t         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n\t         * If ignore drawing and events of the element object\n\t         * @name module:/zrender/Element#ignore\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        ignore: false,\n\t\n\t        /**\n\t         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n\t         * 该路径会继承被裁减对象的变换\n\t         * @type {module:zrender/graphic/Path}\n\t         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n\t         * @readOnly\n\t         */\n\t        clipPath: null,\n\t\n\t        /**\n\t         * Drift element\n\t         * @param  {number} dx dx on the global space\n\t         * @param  {number} dy dy on the global space\n\t         */\n\t        drift: function (dx, dy) {\n\t            switch (this.draggable) {\n\t                case 'horizontal':\n\t                    dy = 0;\n\t                    break;\n\t                case 'vertical':\n\t                    dx = 0;\n\t                    break;\n\t            }\n\t\n\t            var m = this.transform;\n\t            if (!m) {\n\t                m = this.transform = [1, 0, 0, 1, 0, 0];\n\t            }\n\t            m[4] += dx;\n\t            m[5] += dy;\n\t\n\t            this.decomposeTransform();\n\t            this.dirty();\n\t        },\n\t\n\t        /**\n\t         * Hook before update\n\t         */\n\t        beforeUpdate: function () {},\n\t        /**\n\t         * Hook after update\n\t         */\n\t        afterUpdate: function () {},\n\t        /**\n\t         * Update each frame\n\t         */\n\t        update: function () {\n\t            this.updateTransform();\n\t        },\n\t\n\t        /**\n\t         * @param  {Function} cb\n\t         * @param  {}   context\n\t         */\n\t        traverse: function (cb, context) {},\n\t\n\t        /**\n\t         * @protected\n\t         */\n\t        attrKV: function (key, value) {\n\t            if (key === 'position' || key === 'scale' || key === 'origin') {\n\t                // Copy the array\n\t                if (value) {\n\t                    var target = this[key];\n\t                    if (!target) {\n\t                        target = this[key] = [];\n\t                    }\n\t                    target[0] = value[0];\n\t                    target[1] = value[1];\n\t                }\n\t            }\n\t            else {\n\t                this[key] = value;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Hide the element\n\t         */\n\t        hide: function () {\n\t            this.ignore = true;\n\t            this.__zr && this.__zr.refresh();\n\t        },\n\t\n\t        /**\n\t         * Show the element\n\t         */\n\t        show: function () {\n\t            this.ignore = false;\n\t            this.__zr && this.__zr.refresh();\n\t        },\n\t\n\t        /**\n\t         * @param {string|Object} key\n\t         * @param {*} value\n\t         */\n\t        attr: function (key, value) {\n\t            if (typeof key === 'string') {\n\t                this.attrKV(key, value);\n\t            }\n\t            else if (zrUtil.isObject(key)) {\n\t                for (var name in key) {\n\t                    if (key.hasOwnProperty(name)) {\n\t                        this.attrKV(name, key[name]);\n\t                    }\n\t                }\n\t            }\n\t            this.dirty();\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param {module:zrender/graphic/Path} clipPath\n\t         */\n\t        setClipPath: function (clipPath) {\n\t            var zr = this.__zr;\n\t            if (zr) {\n\t                clipPath.addSelfToZr(zr);\n\t            }\n\t\n\t            // Remove previous clip path\n\t            if (this.clipPath && this.clipPath !== clipPath) {\n\t                this.removeClipPath();\n\t            }\n\t\n\t            this.clipPath = clipPath;\n\t            clipPath.__zr = zr;\n\t            clipPath.__clipTarget = this;\n\t\n\t            this.dirty();\n\t        },\n\t\n\t        /**\n\t         */\n\t        removeClipPath: function () {\n\t            var clipPath = this.clipPath;\n\t            if (clipPath) {\n\t                if (clipPath.__zr) {\n\t                    clipPath.removeSelfFromZr(clipPath.__zr);\n\t                }\n\t\n\t                clipPath.__zr = null;\n\t                clipPath.__clipTarget = null;\n\t                this.clipPath = null;\n\t\n\t                this.dirty();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Add self from zrender instance.\n\t         * Not recursively because it will be invoked when element added to storage.\n\t         * @param {module:zrender/ZRender} zr\n\t         */\n\t        addSelfToZr: function (zr) {\n\t            this.__zr = zr;\n\t            // 添加动画\n\t            var animators = this.animators;\n\t            if (animators) {\n\t                for (var i = 0; i < animators.length; i++) {\n\t                    zr.animation.addAnimator(animators[i]);\n\t                }\n\t            }\n\t\n\t            if (this.clipPath) {\n\t                this.clipPath.addSelfToZr(zr);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Remove self from zrender instance.\n\t         * Not recursively because it will be invoked when element added to storage.\n\t         * @param {module:zrender/ZRender} zr\n\t         */\n\t        removeSelfFromZr: function (zr) {\n\t            this.__zr = null;\n\t            // 移除动画\n\t            var animators = this.animators;\n\t            if (animators) {\n\t                for (var i = 0; i < animators.length; i++) {\n\t                    zr.animation.removeAnimator(animators[i]);\n\t                }\n\t            }\n\t\n\t            if (this.clipPath) {\n\t                this.clipPath.removeSelfFromZr(zr);\n\t            }\n\t        }\n\t    };\n\t\n\t    zrUtil.mixin(Element, Animatable);\n\t    zrUtil.mixin(Element, Transformable);\n\t    zrUtil.mixin(Element, Eventful);\n\t\n\t    module.exports = Element;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\n\t * zrender: 生成唯一id\n\t *\n\t * @author errorrik (errorrik@gmail.com)\n\t */\n\t\n\t\n\t        var idStart = 0x0907;\n\t\n\t        module.exports = function () {\n\t            return 'zr_' + (idStart++);\n\t        };\n\t    \n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 事件扩展\n\t * @module zrender/mixin/Eventful\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         pissang (https://www.github.com/pissang)\n\t */\n\t\n\t\n\t    var arrySlice = Array.prototype.slice;\n\t    var zrUtil = __webpack_require__(4);\n\t    var indexOf = zrUtil.indexOf;\n\t\n\t    /**\n\t     * 事件分发器\n\t     * @alias module:zrender/mixin/Eventful\n\t     * @constructor\n\t     */\n\t    var Eventful = function () {\n\t        this._$handlers = {};\n\t    };\n\t\n\t    Eventful.prototype = {\n\t\n\t        constructor: Eventful,\n\t\n\t        /**\n\t         * 单次触发绑定，trigger后销毁\n\t         *\n\t         * @param {string} event 事件名\n\t         * @param {Function} handler 响应函数\n\t         * @param {Object} context\n\t         */\n\t        one: function (event, handler, context) {\n\t            var _h = this._$handlers;\n\t\n\t            if (!handler || !event) {\n\t                return this;\n\t            }\n\t\n\t            if (!_h[event]) {\n\t                _h[event] = [];\n\t            }\n\t\n\t            if (indexOf(_h[event], event) >= 0) {\n\t                return this;\n\t            }\n\t\n\t            _h[event].push({\n\t                h: handler,\n\t                one: true,\n\t                ctx: context || this\n\t            });\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 绑定事件\n\t         * @param {string} event 事件名\n\t         * @param {Function} handler 事件处理函数\n\t         * @param {Object} [context]\n\t         */\n\t        on: function (event, handler, context) {\n\t            var _h = this._$handlers;\n\t\n\t            if (!handler || !event) {\n\t                return this;\n\t            }\n\t\n\t            if (!_h[event]) {\n\t                _h[event] = [];\n\t            }\n\t\n\t            _h[event].push({\n\t                h: handler,\n\t                one: false,\n\t                ctx: context || this\n\t            });\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 是否绑定了事件\n\t         * @param  {string}  event\n\t         * @return {boolean}\n\t         */\n\t        isSilent: function (event) {\n\t            var _h = this._$handlers;\n\t            return _h[event] && _h[event].length;\n\t        },\n\t\n\t        /**\n\t         * 解绑事件\n\t         * @param {string} event 事件名\n\t         * @param {Function} [handler] 事件处理函数\n\t         */\n\t        off: function (event, handler) {\n\t            var _h = this._$handlers;\n\t\n\t            if (!event) {\n\t                this._$handlers = {};\n\t                return this;\n\t            }\n\t\n\t            if (handler) {\n\t                if (_h[event]) {\n\t                    var newList = [];\n\t                    for (var i = 0, l = _h[event].length; i < l; i++) {\n\t                        if (_h[event][i]['h'] != handler) {\n\t                            newList.push(_h[event][i]);\n\t                        }\n\t                    }\n\t                    _h[event] = newList;\n\t                }\n\t\n\t                if (_h[event] && _h[event].length === 0) {\n\t                    delete _h[event];\n\t                }\n\t            }\n\t            else {\n\t                delete _h[event];\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 事件分发\n\t         *\n\t         * @param {string} type 事件类型\n\t         */\n\t        trigger: function (type) {\n\t            if (this._$handlers[type]) {\n\t                var args = arguments;\n\t                var argLen = args.length;\n\t\n\t                if (argLen > 3) {\n\t                    args = arrySlice.call(args, 1);\n\t                }\n\t\n\t                var _h = this._$handlers[type];\n\t                var len = _h.length;\n\t                for (var i = 0; i < len;) {\n\t                    // Optimize advise from backbone\n\t                    switch (argLen) {\n\t                        case 1:\n\t                            _h[i]['h'].call(_h[i]['ctx']);\n\t                            break;\n\t                        case 2:\n\t                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\t                            break;\n\t                        case 3:\n\t                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\t                            break;\n\t                        default:\n\t                            // have more than 2 given arguments\n\t                            _h[i]['h'].apply(_h[i]['ctx'], args);\n\t                            break;\n\t                    }\n\t\n\t                    if (_h[i]['one']) {\n\t                        _h.splice(i, 1);\n\t                        len--;\n\t                    }\n\t                    else {\n\t                        i++;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 带有context的事件分发, 最后一个参数是事件回调的context\n\t         * @param {string} type 事件类型\n\t         */\n\t        triggerWithContext: function (type) {\n\t            if (this._$handlers[type]) {\n\t                var args = arguments;\n\t                var argLen = args.length;\n\t\n\t                if (argLen > 4) {\n\t                    args = arrySlice.call(args, 1, args.length - 1);\n\t                }\n\t                var ctx = args[args.length - 1];\n\t\n\t                var _h = this._$handlers[type];\n\t                var len = _h.length;\n\t                for (var i = 0; i < len;) {\n\t                    // Optimize advise from backbone\n\t                    switch (argLen) {\n\t                        case 1:\n\t                            _h[i]['h'].call(ctx);\n\t                            break;\n\t                        case 2:\n\t                            _h[i]['h'].call(ctx, args[1]);\n\t                            break;\n\t                        case 3:\n\t                            _h[i]['h'].call(ctx, args[1], args[2]);\n\t                            break;\n\t                        default:\n\t                            // have more than 2 given arguments\n\t                            _h[i]['h'].apply(ctx, args);\n\t                            break;\n\t                    }\n\t\n\t                    if (_h[i]['one']) {\n\t                        _h.splice(i, 1);\n\t                        len--;\n\t                    }\n\t                    else {\n\t                        i++;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return this;\n\t        }\n\t    };\n\t\n\t    // 对象可以通过 onxxxx 绑定事件\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onclick\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmouseover\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmouseout\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmousemove\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmousewheel\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmousedown\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#onmouseup\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragstart\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragend\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragenter\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragleave\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondragover\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t    /**\n\t     * @event module:zrender/mixin/Eventful#ondrop\n\t     * @type {Function}\n\t     * @default null\n\t     */\n\t\n\t    module.exports = Eventful;\n\t\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 提供变换扩展\n\t * @module zrender/mixin/Transformable\n\t * @author pissang (https://www.github.com/pissang)\n\t */\n\t\n\t\n\t    var matrix = __webpack_require__(14);\n\t    var vector = __webpack_require__(15);\n\t    var mIdentity = matrix.identity;\n\t\n\t    var EPSILON = 5e-5;\n\t\n\t    function isNotAroundZero(val) {\n\t        return val > EPSILON || val < -EPSILON;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/mixin/Transformable\n\t     * @constructor\n\t     */\n\t    var Transformable = function (opts) {\n\t        opts = opts || {};\n\t        // If there are no given position, rotation, scale\n\t        if (!opts.position) {\n\t            /**\n\t             * 平移\n\t             * @type {Array.<number>}\n\t             * @default [0, 0]\n\t             */\n\t            this.position = [0, 0];\n\t        }\n\t        if (opts.rotation == null) {\n\t            /**\n\t             * 旋转\n\t             * @type {Array.<number>}\n\t             * @default 0\n\t             */\n\t            this.rotation = 0;\n\t        }\n\t        if (!opts.scale) {\n\t            /**\n\t             * 缩放\n\t             * @type {Array.<number>}\n\t             * @default [1, 1]\n\t             */\n\t            this.scale = [1, 1];\n\t        }\n\t        /**\n\t         * 旋转和缩放的原点\n\t         * @type {Array.<number>}\n\t         * @default null\n\t         */\n\t        this.origin = this.origin || null;\n\t    };\n\t\n\t    var transformableProto = Transformable.prototype;\n\t    transformableProto.transform = null;\n\t\n\t    /**\n\t     * 判断是否需要有坐标变换\n\t     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n\t     */\n\t    transformableProto.needLocalTransform = function () {\n\t        return isNotAroundZero(this.rotation)\n\t            || isNotAroundZero(this.position[0])\n\t            || isNotAroundZero(this.position[1])\n\t            || isNotAroundZero(this.scale[0] - 1)\n\t            || isNotAroundZero(this.scale[1] - 1);\n\t    };\n\t\n\t    transformableProto.updateTransform = function () {\n\t        var parent = this.parent;\n\t        var parentHasTransform = parent && parent.transform;\n\t        var needLocalTransform = this.needLocalTransform();\n\t\n\t        var m = this.transform;\n\t        if (!(needLocalTransform || parentHasTransform)) {\n\t            m && mIdentity(m);\n\t            return;\n\t        }\n\t\n\t        m = m || matrix.create();\n\t\n\t        if (needLocalTransform) {\n\t            this.getLocalTransform(m);\n\t        }\n\t        else {\n\t            mIdentity(m);\n\t        }\n\t\n\t        // 应用父节点变换\n\t        if (parentHasTransform) {\n\t            if (needLocalTransform) {\n\t                matrix.mul(m, parent.transform, m);\n\t            }\n\t            else {\n\t                matrix.copy(m, parent.transform);\n\t            }\n\t        }\n\t        // 保存这个变换矩阵\n\t        this.transform = m;\n\t\n\t        this.invTransform = this.invTransform || matrix.create();\n\t        matrix.invert(this.invTransform, m);\n\t    };\n\t\n\t    transformableProto.getLocalTransform = function (m) {\n\t        m = m || [];\n\t        mIdentity(m);\n\t\n\t        var origin = this.origin;\n\t\n\t        var scale = this.scale;\n\t        var rotation = this.rotation;\n\t        var position = this.position;\n\t        if (origin) {\n\t            // Translate to origin\n\t            m[4] -= origin[0];\n\t            m[5] -= origin[1];\n\t        }\n\t        matrix.scale(m, m, scale);\n\t        if (rotation) {\n\t            matrix.rotate(m, m, rotation);\n\t        }\n\t        if (origin) {\n\t            // Translate back from origin\n\t            m[4] += origin[0];\n\t            m[5] += origin[1];\n\t        }\n\t\n\t        m[4] += position[0];\n\t        m[5] += position[1];\n\t\n\t        return m;\n\t    };\n\t    /**\n\t     * 将自己的transform应用到context上\n\t     * @param {Context2D} ctx\n\t     */\n\t    transformableProto.setTransform = function (ctx) {\n\t        var m = this.transform;\n\t        if (m) {\n\t            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\t        }\n\t    };\n\t\n\t    var tmpTransform = [];\n\t\n\t    /**\n\t     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n\t     */\n\t    transformableProto.decomposeTransform = function () {\n\t        if (!this.transform) {\n\t            return;\n\t        }\n\t        var parent = this.parent;\n\t        var m = this.transform;\n\t        if (parent && parent.transform) {\n\t            // Get local transform and decompose them to position, scale, rotation\n\t            matrix.mul(tmpTransform, parent.invTransform, m);\n\t            m = tmpTransform;\n\t        }\n\t        var sx = m[0] * m[0] + m[1] * m[1];\n\t        var sy = m[2] * m[2] + m[3] * m[3];\n\t        var position = this.position;\n\t        var scale = this.scale;\n\t        if (isNotAroundZero(sx - 1)) {\n\t            sx = Math.sqrt(sx);\n\t        }\n\t        if (isNotAroundZero(sy - 1)) {\n\t            sy = Math.sqrt(sy);\n\t        }\n\t        if (m[0] < 0) {\n\t            sx = -sx;\n\t        }\n\t        if (m[3] < 0) {\n\t            sy = -sy;\n\t        }\n\t        position[0] = m[4];\n\t        position[1] = m[5];\n\t        scale[0] = sx;\n\t        scale[1] = sy;\n\t        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n\t    };\n\t\n\t    /**\n\t     * 变换坐标位置到 shape 的局部坐标空间\n\t     * @method\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @return {Array.<number>}\n\t     */\n\t    transformableProto.transformCoordToLocal = function (x, y) {\n\t        var v2 = [x, y];\n\t        var invTransform = this.invTransform;\n\t        if (invTransform) {\n\t            vector.applyTransform(v2, v2, invTransform);\n\t        }\n\t        return v2;\n\t    };\n\t\n\t    /**\n\t     * 变换局部坐标位置到全局坐标空间\n\t     * @method\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @return {Array.<number>}\n\t     */\n\t    transformableProto.transformCoordToGlobal = function (x, y) {\n\t        var v2 = [x, y];\n\t        var transform = this.transform;\n\t        if (transform) {\n\t            vector.applyTransform(v2, v2, transform);\n\t        }\n\t        return v2;\n\t    };\n\t\n\t    module.exports = Transformable;\n\t\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\n\t    var ArrayCtor = typeof Float32Array === 'undefined'\n\t        ? Array\n\t        : Float32Array;\n\t    /**\n\t     * 3x2矩阵操作类\n\t     * @exports zrender/tool/matrix\n\t     */\n\t    var matrix = {\n\t        /**\n\t         * 创建一个单位矩阵\n\t         * @return {Float32Array|Array.<number>}\n\t         */\n\t        create : function() {\n\t            var out = new ArrayCtor(6);\n\t            matrix.identity(out);\n\t\n\t            return out;\n\t        },\n\t        /**\n\t         * 设置矩阵为单位矩阵\n\t         * @param {Float32Array|Array.<number>} out\n\t         */\n\t        identity : function(out) {\n\t            out[0] = 1;\n\t            out[1] = 0;\n\t            out[2] = 0;\n\t            out[3] = 1;\n\t            out[4] = 0;\n\t            out[5] = 0;\n\t            return out;\n\t        },\n\t        /**\n\t         * 复制矩阵\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} m\n\t         */\n\t        copy: function(out, m) {\n\t            out[0] = m[0];\n\t            out[1] = m[1];\n\t            out[2] = m[2];\n\t            out[3] = m[3];\n\t            out[4] = m[4];\n\t            out[5] = m[5];\n\t            return out;\n\t        },\n\t        /**\n\t         * 矩阵相乘\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} m1\n\t         * @param {Float32Array|Array.<number>} m2\n\t         */\n\t        mul : function (out, m1, m2) {\n\t            // Consider matrix.mul(m, m2, m);\n\t            // where out is the same as m2.\n\t            // So use temp variable to escape error.\n\t            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n\t            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n\t            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n\t            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n\t            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n\t            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n\t            out[0] = out0;\n\t            out[1] = out1;\n\t            out[2] = out2;\n\t            out[3] = out3;\n\t            out[4] = out4;\n\t            out[5] = out5;\n\t            return out;\n\t        },\n\t        /**\n\t         * 平移变换\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} a\n\t         * @param {Float32Array|Array.<number>} v\n\t         */\n\t        translate : function(out, a, v) {\n\t            out[0] = a[0];\n\t            out[1] = a[1];\n\t            out[2] = a[2];\n\t            out[3] = a[3];\n\t            out[4] = a[4] + v[0];\n\t            out[5] = a[5] + v[1];\n\t            return out;\n\t        },\n\t        /**\n\t         * 旋转变换\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} a\n\t         * @param {number} rad\n\t         */\n\t        rotate : function(out, a, rad) {\n\t            var aa = a[0];\n\t            var ac = a[2];\n\t            var atx = a[4];\n\t            var ab = a[1];\n\t            var ad = a[3];\n\t            var aty = a[5];\n\t            var st = Math.sin(rad);\n\t            var ct = Math.cos(rad);\n\t\n\t            out[0] = aa * ct + ab * st;\n\t            out[1] = -aa * st + ab * ct;\n\t            out[2] = ac * ct + ad * st;\n\t            out[3] = -ac * st + ct * ad;\n\t            out[4] = ct * atx + st * aty;\n\t            out[5] = ct * aty - st * atx;\n\t            return out;\n\t        },\n\t        /**\n\t         * 缩放变换\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} a\n\t         * @param {Float32Array|Array.<number>} v\n\t         */\n\t        scale : function(out, a, v) {\n\t            var vx = v[0];\n\t            var vy = v[1];\n\t            out[0] = a[0] * vx;\n\t            out[1] = a[1] * vy;\n\t            out[2] = a[2] * vx;\n\t            out[3] = a[3] * vy;\n\t            out[4] = a[4] * vx;\n\t            out[5] = a[5] * vy;\n\t            return out;\n\t        },\n\t        /**\n\t         * 求逆矩阵\n\t         * @param {Float32Array|Array.<number>} out\n\t         * @param {Float32Array|Array.<number>} a\n\t         */\n\t        invert : function(out, a) {\n\t\n\t            var aa = a[0];\n\t            var ac = a[2];\n\t            var atx = a[4];\n\t            var ab = a[1];\n\t            var ad = a[3];\n\t            var aty = a[5];\n\t\n\t            var det = aa * ad - ab * ac;\n\t            if (!det) {\n\t                return null;\n\t            }\n\t            det = 1.0 / det;\n\t\n\t            out[0] = ad * det;\n\t            out[1] = -ab * det;\n\t            out[2] = -ac * det;\n\t            out[3] = aa * det;\n\t            out[4] = (ac * aty - ad * atx) * det;\n\t            out[5] = (ab * atx - aa * aty) * det;\n\t            return out;\n\t        }\n\t    };\n\t\n\t    module.exports = matrix;\n\t\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\n\t    var ArrayCtor = typeof Float32Array === 'undefined'\n\t        ? Array\n\t        : Float32Array;\n\t\n\t    /**\n\t     * @typedef {Float32Array|Array.<number>} Vector2\n\t     */\n\t    /**\n\t     * 二维向量类\n\t     * @exports zrender/tool/vector\n\t     */\n\t    var vector = {\n\t        /**\n\t         * 创建一个向量\n\t         * @param {number} [x=0]\n\t         * @param {number} [y=0]\n\t         * @return {Vector2}\n\t         */\n\t        create: function (x, y) {\n\t            var out = new ArrayCtor(2);\n\t            out[0] = x || 0;\n\t            out[1] = y || 0;\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 复制向量数据\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         * @return {Vector2}\n\t         */\n\t        copy: function (out, v) {\n\t            out[0] = v[0];\n\t            out[1] = v[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 克隆一个向量\n\t         * @param {Vector2} v\n\t         * @return {Vector2}\n\t         */\n\t        clone: function (v) {\n\t            var out = new ArrayCtor(2);\n\t            out[0] = v[0];\n\t            out[1] = v[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 设置向量的两个项\n\t         * @param {Vector2} out\n\t         * @param {number} a\n\t         * @param {number} b\n\t         * @return {Vector2} 结果\n\t         */\n\t        set: function (out, a, b) {\n\t            out[0] = a;\n\t            out[1] = b;\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量相加\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         */\n\t        add: function (out, v1, v2) {\n\t            out[0] = v1[0] + v2[0];\n\t            out[1] = v1[1] + v2[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量缩放后相加\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @param {number} a\n\t         */\n\t        scaleAndAdd: function (out, v1, v2, a) {\n\t            out[0] = v1[0] + v2[0] * a;\n\t            out[1] = v1[1] + v2[1] * a;\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量相减\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         */\n\t        sub: function (out, v1, v2) {\n\t            out[0] = v1[0] - v2[0];\n\t            out[1] = v1[1] - v2[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量长度\n\t         * @param {Vector2} v\n\t         * @return {number}\n\t         */\n\t        len: function (v) {\n\t            return Math.sqrt(this.lenSquare(v));\n\t        },\n\t\n\t        /**\n\t         * 向量长度平方\n\t         * @param {Vector2} v\n\t         * @return {number}\n\t         */\n\t        lenSquare: function (v) {\n\t            return v[0] * v[0] + v[1] * v[1];\n\t        },\n\t\n\t        /**\n\t         * 向量乘法\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         */\n\t        mul: function (out, v1, v2) {\n\t            out[0] = v1[0] * v2[0];\n\t            out[1] = v1[1] * v2[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量除法\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         */\n\t        div: function (out, v1, v2) {\n\t            out[0] = v1[0] / v2[0];\n\t            out[1] = v1[1] / v2[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量点乘\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @return {number}\n\t         */\n\t        dot: function (v1, v2) {\n\t            return v1[0] * v2[0] + v1[1] * v2[1];\n\t        },\n\t\n\t        /**\n\t         * 向量缩放\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         * @param {number} s\n\t         */\n\t        scale: function (out, v, s) {\n\t            out[0] = v[0] * s;\n\t            out[1] = v[1] * s;\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 向量归一化\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         */\n\t        normalize: function (out, v) {\n\t            var d = vector.len(v);\n\t            if (d === 0) {\n\t                out[0] = 0;\n\t                out[1] = 0;\n\t            }\n\t            else {\n\t                out[0] = v[0] / d;\n\t                out[1] = v[1] / d;\n\t            }\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 计算向量间距离\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @return {number}\n\t         */\n\t        distance: function (v1, v2) {\n\t            return Math.sqrt(\n\t                (v1[0] - v2[0]) * (v1[0] - v2[0])\n\t                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n\t            );\n\t        },\n\t\n\t        /**\n\t         * 向量距离平方\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @return {number}\n\t         */\n\t        distanceSquare: function (v1, v2) {\n\t            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n\t                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n\t        },\n\t\n\t        /**\n\t         * 求负向量\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         */\n\t        negate: function (out, v) {\n\t            out[0] = -v[0];\n\t            out[1] = -v[1];\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 插值两个点\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v1\n\t         * @param {Vector2} v2\n\t         * @param {number} t\n\t         */\n\t        lerp: function (out, v1, v2, t) {\n\t            out[0] = v1[0] + t * (v2[0] - v1[0]);\n\t            out[1] = v1[1] + t * (v2[1] - v1[1]);\n\t            return out;\n\t        },\n\t\n\t        /**\n\t         * 矩阵左乘向量\n\t         * @param {Vector2} out\n\t         * @param {Vector2} v\n\t         * @param {Vector2} m\n\t         */\n\t        applyTransform: function (out, v, m) {\n\t            var x = v[0];\n\t            var y = v[1];\n\t            out[0] = m[0] * x + m[2] * y + m[4];\n\t            out[1] = m[1] * x + m[3] * y + m[5];\n\t            return out;\n\t        },\n\t        /**\n\t         * 求两个向量最小值\n\t         * @param  {Vector2} out\n\t         * @param  {Vector2} v1\n\t         * @param  {Vector2} v2\n\t         */\n\t        min: function (out, v1, v2) {\n\t            out[0] = Math.min(v1[0], v2[0]);\n\t            out[1] = Math.min(v1[1], v2[1]);\n\t            return out;\n\t        },\n\t        /**\n\t         * 求两个向量最大值\n\t         * @param  {Vector2} out\n\t         * @param  {Vector2} v1\n\t         * @param  {Vector2} v2\n\t         */\n\t        max: function (out, v1, v2) {\n\t            out[0] = Math.max(v1[0], v2[0]);\n\t            out[1] = Math.max(v1[1], v2[1]);\n\t            return out;\n\t        }\n\t    };\n\t\n\t    vector.length = vector.len;\n\t    vector.lengthSquare = vector.lenSquare;\n\t    vector.dist = vector.distance;\n\t    vector.distSquare = vector.distanceSquare;\n\t\n\t    module.exports = vector;\n\t\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module zrender/mixin/Animatable\n\t */\n\t\n\t\n\t    var Animator = __webpack_require__(17);\n\t    var util = __webpack_require__(4);\n\t    var isString = util.isString;\n\t    var isFunction = util.isFunction;\n\t    var isObject = util.isObject;\n\t    var log = __webpack_require__(21);\n\t\n\t    /**\n\t     * @alias modue:zrender/mixin/Animatable\n\t     * @constructor\n\t     */\n\t    var Animatable = function () {\n\t\n\t        /**\n\t         * @type {Array.<module:zrender/animation/Animator>}\n\t         * @readOnly\n\t         */\n\t        this.animators = [];\n\t    };\n\t\n\t    Animatable.prototype = {\n\t\n\t        constructor: Animatable,\n\t\n\t        /**\n\t         * 动画\n\t         *\n\t         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n\t         * @param {boolean} [loop] 动画是否循环\n\t         * @return {module:zrender/animation/Animator}\n\t         * @example:\n\t         *     el.animate('style', false)\n\t         *         .when(1000, {x: 10} )\n\t         *         .done(function(){ // Animation done })\n\t         *         .start()\n\t         */\n\t        animate: function (path, loop) {\n\t            var target;\n\t            var animatingShape = false;\n\t            var el = this;\n\t            var zr = this.__zr;\n\t            if (path) {\n\t                var pathSplitted = path.split('.');\n\t                var prop = el;\n\t                // If animating shape\n\t                animatingShape = pathSplitted[0] === 'shape';\n\t                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n\t                    if (!prop) {\n\t                        continue;\n\t                    }\n\t                    prop = prop[pathSplitted[i]];\n\t                }\n\t                if (prop) {\n\t                    target = prop;\n\t                }\n\t            }\n\t            else {\n\t                target = el;\n\t            }\n\t\n\t            if (!target) {\n\t                log(\n\t                    'Property \"'\n\t                    + path\n\t                    + '\" is not existed in element '\n\t                    + el.id\n\t                );\n\t                return;\n\t            }\n\t\n\t            var animators = el.animators;\n\t\n\t            var animator = new Animator(target, loop);\n\t\n\t            animator.during(function (target) {\n\t                el.dirty(animatingShape);\n\t            })\n\t            .done(function () {\n\t                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n\t                animators.splice(util.indexOf(animators, animator), 1);\n\t            });\n\t\n\t            animators.push(animator);\n\t\n\t            // If animate after added to the zrender\n\t            if (zr) {\n\t                zr.animation.addAnimator(animator);\n\t            }\n\t\n\t            return animator;\n\t        },\n\t\n\t        /**\n\t         * 停止动画\n\t         * @param {boolean} forwardToLast If move to last frame before stop\n\t         */\n\t        stopAnimation: function (forwardToLast) {\n\t            var animators = this.animators;\n\t            var len = animators.length;\n\t            for (var i = 0; i < len; i++) {\n\t                animators[i].stop(forwardToLast);\n\t            }\n\t            animators.length = 0;\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param {Object} target\n\t         * @param {number} [time=500] Time in ms\n\t         * @param {string} [easing='linear']\n\t         * @param {number} [delay=0]\n\t         * @param {Function} [callback]\n\t         *\n\t         * @example\n\t         *  // Animate position\n\t         *  el.animateTo({\n\t         *      position: [10, 10]\n\t         *  }, function () { // done })\n\t         *\n\t         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n\t         *  el.animateTo({\n\t         *      shape: {\n\t         *          width: 500\n\t         *      },\n\t         *      style: {\n\t         *          fill: 'red'\n\t         *      }\n\t         *      position: [10, 10]\n\t         *  }, 100, 100, 'cubicOut', function () { // done })\n\t         */\n\t         // TODO Return animation key\n\t        animateTo: function (target, time, delay, easing, callback) {\n\t            // animateTo(target, time, easing, callback);\n\t            if (isString(delay)) {\n\t                callback = easing;\n\t                easing = delay;\n\t                delay = 0;\n\t            }\n\t            // animateTo(target, time, delay, callback);\n\t            else if (isFunction(easing)) {\n\t                callback = easing;\n\t                easing = 'linear';\n\t                delay = 0;\n\t            }\n\t            // animateTo(target, time, callback);\n\t            else if (isFunction(delay)) {\n\t                callback = delay;\n\t                delay = 0;\n\t            }\n\t            // animateTo(target, callback)\n\t            else if (isFunction(time)) {\n\t                callback = time;\n\t                time = 500;\n\t            }\n\t            // animateTo(target)\n\t            else if (!time) {\n\t                time = 500;\n\t            }\n\t            // Stop all previous animations\n\t            this.stopAnimation();\n\t            this._animateToShallow('', this, target, time, delay, easing, callback);\n\t\n\t            // Animators may be removed immediately after start\n\t            // if there is nothing to animate\n\t            var animators = this.animators.slice();\n\t            var count = animators.length;\n\t            function done() {\n\t                count--;\n\t                if (!count) {\n\t                    callback && callback();\n\t                }\n\t            }\n\t\n\t            // No animators. This should be checked before animators[i].start(),\n\t            // because 'done' may be executed immediately if no need to animate.\n\t            if (!count) {\n\t                callback && callback();\n\t            }\n\t            // Start after all animators created\n\t            // Incase any animator is done immediately when all animation properties are not changed\n\t            for (var i = 0; i < animators.length; i++) {\n\t                animators[i]\n\t                    .done(done)\n\t                    .start(easing);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param {string} path=''\n\t         * @param {Object} source=this\n\t         * @param {Object} target\n\t         * @param {number} [time=500]\n\t         * @param {number} [delay=0]\n\t         *\n\t         * @example\n\t         *  // Animate position\n\t         *  el._animateToShallow({\n\t         *      position: [10, 10]\n\t         *  })\n\t         *\n\t         *  // Animate shape, style and position in 100ms, delayed 100ms\n\t         *  el._animateToShallow({\n\t         *      shape: {\n\t         *          width: 500\n\t         *      },\n\t         *      style: {\n\t         *          fill: 'red'\n\t         *      }\n\t         *      position: [10, 10]\n\t         *  }, 100, 100)\n\t         */\n\t        _animateToShallow: function (path, source, target, time, delay) {\n\t            var objShallow = {};\n\t            var propertyCount = 0;\n\t            for (var name in target) {\n\t                if (source[name] != null) {\n\t                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n\t                        this._animateToShallow(\n\t                            path ? path + '.' + name : name,\n\t                            source[name],\n\t                            target[name],\n\t                            time,\n\t                            delay\n\t                        );\n\t                    }\n\t                    else {\n\t                        objShallow[name] = target[name];\n\t                        propertyCount++;\n\t                    }\n\t                }\n\t                else if (target[name] != null) {\n\t                    // Attr directly if not has property\n\t                    // FIXME, if some property not needed for element ?\n\t                    if (!path) {\n\t                        this.attr(name, target[name]);\n\t                    }\n\t                    else {  // Shape or style\n\t                        var props = {};\n\t                        props[path] = {};\n\t                        props[path][name] = target[name];\n\t                        this.attr(props);\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (propertyCount > 0) {\n\t                this.animate(path, false)\n\t                    .when(time == null ? 500 : time, objShallow)\n\t                    .delay(delay || 0);\n\t            }\n\t\n\t            return this;\n\t        }\n\t    };\n\t\n\t    module.exports = Animatable;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module echarts/animation/Animator\n\t */\n\t\n\t\n\t    var Clip = __webpack_require__(18);\n\t    var color = __webpack_require__(20);\n\t    var util = __webpack_require__(4);\n\t    var isArrayLike = util.isArrayLike;\n\t\n\t    var arraySlice = Array.prototype.slice;\n\t\n\t    function defaultGetter(target, key) {\n\t        return target[key];\n\t    }\n\t\n\t    function defaultSetter(target, key, value) {\n\t        target[key] = value;\n\t    }\n\t\n\t    /**\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} percent\n\t     * @return {number}\n\t     */\n\t    function interpolateNumber(p0, p1, percent) {\n\t        return (p1 - p0) * percent + p0;\n\t    }\n\t\n\t    /**\n\t     * @param  {string} p0\n\t     * @param  {string} p1\n\t     * @param  {number} percent\n\t     * @return {string}\n\t     */\n\t    function interpolateString(p0, p1, percent) {\n\t        return percent > 0.5 ? p1 : p0;\n\t    }\n\t\n\t    /**\n\t     * @param  {Array} p0\n\t     * @param  {Array} p1\n\t     * @param  {number} percent\n\t     * @param  {Array} out\n\t     * @param  {number} arrDim\n\t     */\n\t    function interpolateArray(p0, p1, percent, out, arrDim) {\n\t        var len = p0.length;\n\t        if (arrDim == 1) {\n\t            for (var i = 0; i < len; i++) {\n\t                out[i] = interpolateNumber(p0[i], p1[i], percent);\n\t            }\n\t        }\n\t        else {\n\t            var len2 = p0[0].length;\n\t            for (var i = 0; i < len; i++) {\n\t                for (var j = 0; j < len2; j++) {\n\t                    out[i][j] = interpolateNumber(\n\t                        p0[i][j], p1[i][j], percent\n\t                    );\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function fillArr(arr0, arr1, arrDim) {\n\t        var arr0Len = arr0.length;\n\t        var arr1Len = arr1.length;\n\t        if (arr0Len === arr1Len) {\n\t            return;\n\t        }\n\t        // FIXME Not work for TypedArray\n\t        var isPreviousLarger = arr0Len > arr1Len;\n\t        if (isPreviousLarger) {\n\t            // Cut the previous\n\t            arr0.length = arr1Len;\n\t        }\n\t        else {\n\t            // Fill the previous\n\t            for (var i = arr0Len; i < arr1Len; i++) {\n\t                arr0.push(\n\t                    arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n\t                );\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param  {Array} arr0\n\t     * @param  {Array} arr1\n\t     * @param  {number} arrDim\n\t     * @return {boolean}\n\t     */\n\t    function isArraySame(arr0, arr1, arrDim) {\n\t        if (arr0 === arr1) {\n\t            return true;\n\t        }\n\t        var len = arr0.length;\n\t        if (len !== arr1.length) {\n\t            return false;\n\t        }\n\t        if (arrDim === 1) {\n\t            for (var i = 0; i < len; i++) {\n\t                if (arr0[i] !== arr1[i]) {\n\t                    return false;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            var len2 = arr0[0].length;\n\t            for (var i = 0; i < len; i++) {\n\t                for (var j = 0; j < len2; j++) {\n\t                    if (arr0[i][j] !== arr1[i][j]) {\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t\n\t    /**\n\t     * Catmull Rom interpolate array\n\t     * @param  {Array} p0\n\t     * @param  {Array} p1\n\t     * @param  {Array} p2\n\t     * @param  {Array} p3\n\t     * @param  {number} t\n\t     * @param  {number} t2\n\t     * @param  {number} t3\n\t     * @param  {Array} out\n\t     * @param  {number} arrDim\n\t     */\n\t    function catmullRomInterpolateArray(\n\t        p0, p1, p2, p3, t, t2, t3, out, arrDim\n\t    ) {\n\t        var len = p0.length;\n\t        if (arrDim == 1) {\n\t            for (var i = 0; i < len; i++) {\n\t                out[i] = catmullRomInterpolate(\n\t                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n\t                );\n\t            }\n\t        }\n\t        else {\n\t            var len2 = p0[0].length;\n\t            for (var i = 0; i < len; i++) {\n\t                for (var j = 0; j < len2; j++) {\n\t                    out[i][j] = catmullRomInterpolate(\n\t                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n\t                        t, t2, t3\n\t                    );\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Catmull Rom interpolate number\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} t\n\t     * @param  {number} t2\n\t     * @param  {number} t3\n\t     * @return {number}\n\t     */\n\t    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n\t        var v0 = (p2 - p0) * 0.5;\n\t        var v1 = (p3 - p1) * 0.5;\n\t        return (2 * (p1 - p2) + v0 + v1) * t3\n\t                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n\t                + v0 * t + p1;\n\t    }\n\t\n\t    function cloneValue(value) {\n\t        if (isArrayLike(value)) {\n\t            var len = value.length;\n\t            if (isArrayLike(value[0])) {\n\t                var ret = [];\n\t                for (var i = 0; i < len; i++) {\n\t                    ret.push(arraySlice.call(value[i]));\n\t                }\n\t                return ret;\n\t            }\n\t\n\t            return arraySlice.call(value);\n\t        }\n\t\n\t        return value;\n\t    }\n\t\n\t    function rgba2String(rgba) {\n\t        rgba[0] = Math.floor(rgba[0]);\n\t        rgba[1] = Math.floor(rgba[1]);\n\t        rgba[2] = Math.floor(rgba[2]);\n\t\n\t        return 'rgba(' + rgba.join(',') + ')';\n\t    }\n\t\n\t    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n\t        var getter = animator._getter;\n\t        var setter = animator._setter;\n\t        var useSpline = easing === 'spline';\n\t\n\t        var trackLen = keyframes.length;\n\t        if (!trackLen) {\n\t            return;\n\t        }\n\t        // Guess data type\n\t        var firstVal = keyframes[0].value;\n\t        var isValueArray = isArrayLike(firstVal);\n\t        var isValueColor = false;\n\t        var isValueString = false;\n\t\n\t        // For vertices morphing\n\t        var arrDim = (\n\t                isValueArray\n\t                && isArrayLike(firstVal[0])\n\t            )\n\t            ? 2 : 1;\n\t        var trackMaxTime;\n\t        // Sort keyframe as ascending\n\t        keyframes.sort(function(a, b) {\n\t            return a.time - b.time;\n\t        });\n\t\n\t        trackMaxTime = keyframes[trackLen - 1].time;\n\t        // Percents of each keyframe\n\t        var kfPercents = [];\n\t        // Value of each keyframe\n\t        var kfValues = [];\n\t        var prevValue = keyframes[0].value;\n\t        var isAllValueEqual = true;\n\t        for (var i = 0; i < trackLen; i++) {\n\t            kfPercents.push(keyframes[i].time / trackMaxTime);\n\t            // Assume value is a color when it is a string\n\t            var value = keyframes[i].value;\n\t\n\t            // Check if value is equal, deep check if value is array\n\t            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n\t                || (!isValueArray && value === prevValue))) {\n\t                isAllValueEqual = false;\n\t            }\n\t            prevValue = value;\n\t\n\t            // Try converting a string to a color array\n\t            if (typeof value == 'string') {\n\t                var colorArray = color.parse(value);\n\t                if (colorArray) {\n\t                    value = colorArray;\n\t                    isValueColor = true;\n\t                }\n\t                else {\n\t                    isValueString = true;\n\t                }\n\t            }\n\t            kfValues.push(value);\n\t        }\n\t        if (isAllValueEqual) {\n\t            return;\n\t        }\n\t\n\t        if (isValueArray) {\n\t            var lastValue = kfValues[trackLen - 1];\n\t            // Polyfill array\n\t            for (var i = 0; i < trackLen - 1; i++) {\n\t                fillArr(kfValues[i], lastValue, arrDim);\n\t            }\n\t            fillArr(getter(animator._target, propName), lastValue, arrDim);\n\t        }\n\t\n\t        // Cache the key of last frame to speed up when\n\t        // animation playback is sequency\n\t        var lastFrame = 0;\n\t        var lastFramePercent = 0;\n\t        var start;\n\t        var w;\n\t        var p0;\n\t        var p1;\n\t        var p2;\n\t        var p3;\n\t\n\t        if (isValueColor) {\n\t            var rgba = [0, 0, 0, 0];\n\t        }\n\t\n\t        var onframe = function (target, percent) {\n\t            // Find the range keyframes\n\t            // kf1-----kf2---------current--------kf3\n\t            // find kf2 and kf3 and do interpolation\n\t            var frame;\n\t            if (percent < lastFramePercent) {\n\t                // Start from next key\n\t                start = Math.min(lastFrame + 1, trackLen - 1);\n\t                for (frame = start; frame >= 0; frame--) {\n\t                    if (kfPercents[frame] <= percent) {\n\t                        break;\n\t                    }\n\t                }\n\t                frame = Math.min(frame, trackLen - 2);\n\t            }\n\t            else {\n\t                for (frame = lastFrame; frame < trackLen; frame++) {\n\t                    if (kfPercents[frame] > percent) {\n\t                        break;\n\t                    }\n\t                }\n\t                frame = Math.min(frame - 1, trackLen - 2);\n\t            }\n\t            lastFrame = frame;\n\t            lastFramePercent = percent;\n\t\n\t            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n\t            if (range === 0) {\n\t                return;\n\t            }\n\t            else {\n\t                w = (percent - kfPercents[frame]) / range;\n\t            }\n\t            if (useSpline) {\n\t                p1 = kfValues[frame];\n\t                p0 = kfValues[frame === 0 ? frame : frame - 1];\n\t                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n\t                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\t                if (isValueArray) {\n\t                    catmullRomInterpolateArray(\n\t                        p0, p1, p2, p3, w, w * w, w * w * w,\n\t                        getter(target, propName),\n\t                        arrDim\n\t                    );\n\t                }\n\t                else {\n\t                    var value;\n\t                    if (isValueColor) {\n\t                        value = catmullRomInterpolateArray(\n\t                            p0, p1, p2, p3, w, w * w, w * w * w,\n\t                            rgba, 1\n\t                        );\n\t                        value = rgba2String(rgba);\n\t                    }\n\t                    else if (isValueString) {\n\t                        // String is step(0.5)\n\t                        return interpolateString(p1, p2, w);\n\t                    }\n\t                    else {\n\t                        value = catmullRomInterpolate(\n\t                            p0, p1, p2, p3, w, w * w, w * w * w\n\t                        );\n\t                    }\n\t                    setter(\n\t                        target,\n\t                        propName,\n\t                        value\n\t                    );\n\t                }\n\t            }\n\t            else {\n\t                if (isValueArray) {\n\t                    interpolateArray(\n\t                        kfValues[frame], kfValues[frame + 1], w,\n\t                        getter(target, propName),\n\t                        arrDim\n\t                    );\n\t                }\n\t                else {\n\t                    var value;\n\t                    if (isValueColor) {\n\t                        interpolateArray(\n\t                            kfValues[frame], kfValues[frame + 1], w,\n\t                            rgba, 1\n\t                        );\n\t                        value = rgba2String(rgba);\n\t                    }\n\t                    else if (isValueString) {\n\t                        // String is step(0.5)\n\t                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n\t                    }\n\t                    else {\n\t                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n\t                    }\n\t                    setter(\n\t                        target,\n\t                        propName,\n\t                        value\n\t                    );\n\t                }\n\t            }\n\t        };\n\t\n\t        var clip = new Clip({\n\t            target: animator._target,\n\t            life: trackMaxTime,\n\t            loop: animator._loop,\n\t            delay: animator._delay,\n\t            onframe: onframe,\n\t            ondestroy: oneTrackDone\n\t        });\n\t\n\t        if (easing && easing !== 'spline') {\n\t            clip.easing = easing;\n\t        }\n\t\n\t        return clip;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/animation/Animator\n\t     * @constructor\n\t     * @param {Object} target\n\t     * @param {boolean} loop\n\t     * @param {Function} getter\n\t     * @param {Function} setter\n\t     */\n\t    var Animator = function(target, loop, getter, setter) {\n\t        this._tracks = {};\n\t        this._target = target;\n\t\n\t        this._loop = loop || false;\n\t\n\t        this._getter = getter || defaultGetter;\n\t        this._setter = setter || defaultSetter;\n\t\n\t        this._clipCount = 0;\n\t\n\t        this._delay = 0;\n\t\n\t        this._doneList = [];\n\t\n\t        this._onframeList = [];\n\t\n\t        this._clipList = [];\n\t    };\n\t\n\t    Animator.prototype = {\n\t        /**\n\t         * 设置动画关键帧\n\t         * @param  {number} time 关键帧时间，单位是ms\n\t         * @param  {Object} props 关键帧的属性值，key-value表示\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        when: function(time /* ms */, props) {\n\t            var tracks = this._tracks;\n\t            for (var propName in props) {\n\t                if (!tracks[propName]) {\n\t                    tracks[propName] = [];\n\t                    // Invalid value\n\t                    var value = this._getter(this._target, propName);\n\t                    if (value == null) {\n\t                        // zrLog('Invalid property ' + propName);\n\t                        continue;\n\t                    }\n\t                    // If time is 0\n\t                    //  Then props is given initialize value\n\t                    // Else\n\t                    //  Initialize value from current prop value\n\t                    if (time !== 0) {\n\t                        tracks[propName].push({\n\t                            time: 0,\n\t                            value: cloneValue(value)\n\t                        });\n\t                    }\n\t                }\n\t                tracks[propName].push({\n\t                    time: time,\n\t                    value: props[propName]\n\t                });\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * 添加动画每一帧的回调函数\n\t         * @param  {Function} callback\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        during: function (callback) {\n\t            this._onframeList.push(callback);\n\t            return this;\n\t        },\n\t\n\t        _doneCallback: function () {\n\t            // Clear all tracks\n\t            this._tracks = {};\n\t            // Clear all clips\n\t            this._clipList.length = 0;\n\t\n\t            var doneList = this._doneList;\n\t            var len = doneList.length;\n\t            for (var i = 0; i < len; i++) {\n\t                doneList[i].call(this);\n\t            }\n\t        },\n\t        /**\n\t         * 开始执行动画\n\t         * @param  {string|Function} easing\n\t         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        start: function (easing) {\n\t\n\t            var self = this;\n\t            var clipCount = 0;\n\t\n\t            var oneTrackDone = function() {\n\t                clipCount--;\n\t                if (!clipCount) {\n\t                    self._doneCallback();\n\t                }\n\t            };\n\t\n\t            var lastClip;\n\t            for (var propName in this._tracks) {\n\t                var clip = createTrackClip(\n\t                    this, easing, oneTrackDone,\n\t                    this._tracks[propName], propName\n\t                );\n\t                if (clip) {\n\t                    this._clipList.push(clip);\n\t                    clipCount++;\n\t\n\t                    // If start after added to animation\n\t                    if (this.animation) {\n\t                        this.animation.addClip(clip);\n\t                    }\n\t\n\t                    lastClip = clip;\n\t                }\n\t            }\n\t\n\t            // Add during callback on the last clip\n\t            if (lastClip) {\n\t                var oldOnFrame = lastClip.onframe;\n\t                lastClip.onframe = function (target, percent) {\n\t                    oldOnFrame(target, percent);\n\t\n\t                    for (var i = 0; i < self._onframeList.length; i++) {\n\t                        self._onframeList[i](target, percent);\n\t                    }\n\t                };\n\t            }\n\t\n\t            if (!clipCount) {\n\t                this._doneCallback();\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * 停止动画\n\t         * @param {boolean} forwardToLast If move to last frame before stop\n\t         */\n\t        stop: function (forwardToLast) {\n\t            var clipList = this._clipList;\n\t            var animation = this.animation;\n\t            for (var i = 0; i < clipList.length; i++) {\n\t                var clip = clipList[i];\n\t                if (forwardToLast) {\n\t                    // Move to last frame before stop\n\t                    clip.onframe(this._target, 1);\n\t                }\n\t                animation && animation.removeClip(clip);\n\t            }\n\t            clipList.length = 0;\n\t        },\n\t        /**\n\t         * 设置动画延迟开始的时间\n\t         * @param  {number} time 单位ms\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        delay: function (time) {\n\t            this._delay = time;\n\t            return this;\n\t        },\n\t        /**\n\t         * 添加动画结束的回调\n\t         * @param  {Function} cb\n\t         * @return {module:zrender/animation/Animator}\n\t         */\n\t        done: function(cb) {\n\t            if (cb) {\n\t                this._doneList.push(cb);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @return {Array.<module:zrender/animation/Clip>}\n\t         */\n\t        getClips: function () {\n\t            return this._clipList;\n\t        }\n\t    };\n\t\n\t    module.exports = Animator;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 动画主控制器\n\t * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n\t * @config life(1000) 动画时长\n\t * @config delay(0) 动画延迟时间\n\t * @config loop(true)\n\t * @config gap(0) 循环的间隔时间\n\t * @config onframe\n\t * @config easing(optional)\n\t * @config ondestroy(optional)\n\t * @config onrestart(optional)\n\t *\n\t * TODO pause\n\t */\n\t\n\t\n\t    var easingFuncs = __webpack_require__(19);\n\t\n\t    function Clip(options) {\n\t\n\t        this._target = options.target;\n\t\n\t        // 生命周期\n\t        this._life = options.life || 1000;\n\t        // 延时\n\t        this._delay = options.delay || 0;\n\t        // 开始时间\n\t        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\t        this._initialized = false;\n\t\n\t        // 是否循环\n\t        this.loop = options.loop == null ? false : options.loop;\n\t\n\t        this.gap = options.gap || 0;\n\t\n\t        this.easing = options.easing || 'Linear';\n\t\n\t        this.onframe = options.onframe;\n\t        this.ondestroy = options.ondestroy;\n\t        this.onrestart = options.onrestart;\n\t    }\n\t\n\t    Clip.prototype = {\n\t\n\t        constructor: Clip,\n\t\n\t        step: function (time) {\n\t            // Set startTime on first step, or _startTime may has milleseconds different between clips\n\t            // PENDING\n\t            if (!this._initialized) {\n\t                this._startTime = new Date().getTime() + this._delay;\n\t                this._initialized = true;\n\t            }\n\t\n\t            var percent = (time - this._startTime) / this._life;\n\t\n\t            // 还没开始\n\t            if (percent < 0) {\n\t                return;\n\t            }\n\t\n\t            percent = Math.min(percent, 1);\n\t\n\t            var easing = this.easing;\n\t            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n\t            var schedule = typeof easingFunc === 'function'\n\t                ? easingFunc(percent)\n\t                : percent;\n\t\n\t            this.fire('frame', schedule);\n\t\n\t            // 结束\n\t            if (percent == 1) {\n\t                if (this.loop) {\n\t                    this.restart();\n\t                    // 重新开始周期\n\t                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\t                    return 'restart';\n\t                }\n\t\n\t                // 动画完成将这个控制器标识为待删除\n\t                // 在Animation.update中进行批量删除\n\t                this._needsRemove = true;\n\t                return 'destroy';\n\t            }\n\t\n\t            return null;\n\t        },\n\t\n\t        restart: function() {\n\t            var time = new Date().getTime();\n\t            var remainder = (time - this._startTime) % this._life;\n\t            this._startTime = new Date().getTime() - remainder + this.gap;\n\t\n\t            this._needsRemove = false;\n\t        },\n\t\n\t        fire: function(eventType, arg) {\n\t            eventType = 'on' + eventType;\n\t            if (this[eventType]) {\n\t                this[eventType](this._target, arg);\n\t            }\n\t        }\n\t    };\n\t\n\t    module.exports = Clip;\n\t\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t/**\n\t * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n\t * @see http://sole.github.io/tween.js/examples/03_graphs.html\n\t * @exports zrender/animation/easing\n\t */\n\t\n\t    var easing = {\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        linear: function (k) {\n\t            return k;\n\t        },\n\t\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quadraticIn: function (k) {\n\t            return k * k;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quadraticOut: function (k) {\n\t            return k * (2 - k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quadraticInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * k * k;\n\t            }\n\t            return -0.5 * (--k * (k - 2) - 1);\n\t        },\n\t\n\t        // 三次方的缓动（t^3）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        cubicIn: function (k) {\n\t            return k * k * k;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        cubicOut: function (k) {\n\t            return --k * k * k + 1;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        cubicInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * k * k * k;\n\t            }\n\t            return 0.5 * ((k -= 2) * k * k + 2);\n\t        },\n\t\n\t        // 四次方的缓动（t^4）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quarticIn: function (k) {\n\t            return k * k * k * k;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quarticOut: function (k) {\n\t            return 1 - (--k * k * k * k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quarticInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * k * k * k * k;\n\t            }\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\n\t        },\n\t\n\t        // 五次方的缓动（t^5）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quinticIn: function (k) {\n\t            return k * k * k * k * k;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quinticOut: function (k) {\n\t            return --k * k * k * k * k + 1;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        quinticInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * k * k * k * k * k;\n\t            }\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n\t        },\n\t\n\t        // 正弦曲线的缓动（sin(t)）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        sinusoidalIn: function (k) {\n\t            return 1 - Math.cos(k * Math.PI / 2);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        sinusoidalOut: function (k) {\n\t            return Math.sin(k * Math.PI / 2);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        sinusoidalInOut: function (k) {\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\n\t        },\n\t\n\t        // 指数曲线的缓动（2^t）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        exponentialIn: function (k) {\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        exponentialOut: function (k) {\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        exponentialInOut: function (k) {\n\t            if (k === 0) {\n\t                return 0;\n\t            }\n\t            if (k === 1) {\n\t                return 1;\n\t            }\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * Math.pow(1024, k - 1);\n\t            }\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t        },\n\t\n\t        // 圆形曲线的缓动（sqrt(1-t^2)）\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        circularIn: function (k) {\n\t            return 1 - Math.sqrt(1 - k * k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        circularOut: function (k) {\n\t            return Math.sqrt(1 - (--k * k));\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        circularInOut: function (k) {\n\t            if ((k *= 2) < 1) {\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n\t            }\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t        },\n\t\n\t        // 创建类似于弹簧在停止前来回振荡的动画\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        elasticIn: function (k) {\n\t            var s;\n\t            var a = 0.1;\n\t            var p = 0.4;\n\t            if (k === 0) {\n\t                return 0;\n\t            }\n\t            if (k === 1) {\n\t                return 1;\n\t            }\n\t            if (!a || a < 1) {\n\t                a = 1; s = p / 4;\n\t            }\n\t            else {\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t            }\n\t            return -(a * Math.pow(2, 10 * (k -= 1)) *\n\t                        Math.sin((k - s) * (2 * Math.PI) / p));\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        elasticOut: function (k) {\n\t            var s;\n\t            var a = 0.1;\n\t            var p = 0.4;\n\t            if (k === 0) {\n\t                return 0;\n\t            }\n\t            if (k === 1) {\n\t                return 1;\n\t            }\n\t            if (!a || a < 1) {\n\t                a = 1; s = p / 4;\n\t            }\n\t            else {\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t            }\n\t            return (a * Math.pow(2, -10 * k) *\n\t                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        elasticInOut: function (k) {\n\t            var s;\n\t            var a = 0.1;\n\t            var p = 0.4;\n\t            if (k === 0) {\n\t                return 0;\n\t            }\n\t            if (k === 1) {\n\t                return 1;\n\t            }\n\t            if (!a || a < 1) {\n\t                a = 1; s = p / 4;\n\t            }\n\t            else {\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t            }\n\t            if ((k *= 2) < 1) {\n\t                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n\t                    * Math.sin((k - s) * (2 * Math.PI) / p));\n\t            }\n\t            return a * Math.pow(2, -10 * (k -= 1))\n\t                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\n\t        },\n\t\n\t        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        backIn: function (k) {\n\t            var s = 1.70158;\n\t            return k * k * ((s + 1) * k - s);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        backOut: function (k) {\n\t            var s = 1.70158;\n\t            return --k * k * ((s + 1) * k + s) + 1;\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        backInOut: function (k) {\n\t            var s = 1.70158 * 1.525;\n\t            if ((k *= 2) < 1) {\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\n\t            }\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t        },\n\t\n\t        // 创建弹跳效果\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        bounceIn: function (k) {\n\t            return 1 - easing.bounceOut(1 - k);\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        bounceOut: function (k) {\n\t            if (k < (1 / 2.75)) {\n\t                return 7.5625 * k * k;\n\t            }\n\t            else if (k < (2 / 2.75)) {\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t            }\n\t            else if (k < (2.5 / 2.75)) {\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t            }\n\t            else {\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t            }\n\t        },\n\t        /**\n\t        * @param {number} k\n\t        * @return {number}\n\t        */\n\t        bounceInOut: function (k) {\n\t            if (k < 0.5) {\n\t                return easing.bounceIn(k * 2) * 0.5;\n\t            }\n\t            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n\t        }\n\t    };\n\t\n\t    module.exports = easing;\n\t\n\t\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @module zrender/tool/color\n\t */\n\t\n\t\n\t    var kCSSColorTable = {\n\t        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n\t        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n\t        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n\t        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n\t        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n\t        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n\t        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n\t        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n\t        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n\t        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n\t        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n\t        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n\t        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n\t        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n\t        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n\t        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n\t        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n\t        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n\t        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n\t        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n\t        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n\t        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n\t        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n\t        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n\t        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n\t        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n\t        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n\t        'gray': [128,128,128,1], 'green': [0,128,0,1],\n\t        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n\t        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n\t        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n\t        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n\t        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n\t        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n\t        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n\t        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n\t        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n\t        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n\t        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n\t        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n\t        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n\t        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n\t        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n\t        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n\t        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n\t        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n\t        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n\t        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n\t        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n\t        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n\t        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n\t        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n\t        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n\t        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n\t        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n\t        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n\t        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n\t        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n\t        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n\t        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n\t        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n\t        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n\t        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n\t        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n\t        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n\t        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n\t        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n\t        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n\t        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n\t        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n\t        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n\t        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n\t        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n\t        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n\t    };\n\t\n\t    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n\t        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n\t        return i < 0 ? 0 : i > 255 ? 255 : i;\n\t    }\n\t\n\t    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n\t        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n\t        return i < 0 ? 0 : i > 360 ? 360 : i;\n\t    }\n\t\n\t    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n\t        return f < 0 ? 0 : f > 1 ? 1 : f;\n\t    }\n\t\n\t    function parseCssInt(str) {  // int or percentage.\n\t        if (str.length && str.charAt(str.length - 1) === '%') {\n\t            return clampCssByte(parseFloat(str) / 100 * 255);\n\t        }\n\t        return clampCssByte(parseInt(str, 10));\n\t    }\n\t\n\t    function parseCssFloat(str) {  // float or percentage.\n\t        if (str.length && str.charAt(str.length - 1) === '%') {\n\t            return clampCssFloat(parseFloat(str) / 100);\n\t        }\n\t        return clampCssFloat(parseFloat(str));\n\t    }\n\t\n\t    function cssHueToRgb(m1, m2, h) {\n\t        if (h < 0) {\n\t            h += 1;\n\t        }\n\t        else if (h > 1) {\n\t            h -= 1;\n\t        }\n\t\n\t        if (h * 6 < 1) {\n\t            return m1 + (m2 - m1) * h * 6;\n\t        }\n\t        if (h * 2 < 1) {\n\t            return m2;\n\t        }\n\t        if (h * 3 < 2) {\n\t            return m1 + (m2 - m1) * (2/3 - h) * 6;\n\t        }\n\t        return m1;\n\t    }\n\t\n\t    function lerp(a, b, p) {\n\t        return a + (b - a) * p;\n\t    }\n\t\n\t    /**\n\t     * @param {string} colorStr\n\t     * @return {Array.<number>}\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function parse(colorStr) {\n\t        if (!colorStr) {\n\t            return;\n\t        }\n\t        // colorStr may be not string\n\t        colorStr = colorStr + '';\n\t        // Remove all whitespace, not compliant, but should just be more accepting.\n\t        var str = colorStr.replace(/ /g, '').toLowerCase();\n\t\n\t        // Color keywords (and transparent) lookup.\n\t        if (str in kCSSColorTable) {\n\t            return kCSSColorTable[str].slice();  // dup.\n\t        }\n\t\n\t        // #abc and #abc123 syntax.\n\t        if (str.charAt(0) === '#') {\n\t            if (str.length === 4) {\n\t                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n\t                if (!(iv >= 0 && iv <= 0xfff)) {\n\t                    return;  // Covers NaN.\n\t                }\n\t                return [\n\t                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n\t                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n\t                    (iv & 0xf) | ((iv & 0xf) << 4),\n\t                    1\n\t                ];\n\t            }\n\t            else if (str.length === 7) {\n\t                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n\t                if (!(iv >= 0 && iv <= 0xffffff)) {\n\t                    return;  // Covers NaN.\n\t                }\n\t                return [\n\t                    (iv & 0xff0000) >> 16,\n\t                    (iv & 0xff00) >> 8,\n\t                    iv & 0xff,\n\t                    1\n\t                ];\n\t            }\n\t\n\t            return;\n\t        }\n\t        var op = str.indexOf('('), ep = str.indexOf(')');\n\t        if (op !== -1 && ep + 1 === str.length) {\n\t            var fname = str.substr(0, op);\n\t            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n\t            var alpha = 1;  // To allow case fallthrough.\n\t            switch (fname) {\n\t                case 'rgba':\n\t                    if (params.length !== 4) {\n\t                        return;\n\t                    }\n\t                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n\t                // Fall through.\n\t                case 'rgb':\n\t                    if (params.length !== 3) {\n\t                        return;\n\t                    }\n\t                    return [\n\t                        parseCssInt(params[0]),\n\t                        parseCssInt(params[1]),\n\t                        parseCssInt(params[2]),\n\t                        alpha\n\t                    ];\n\t                case 'hsla':\n\t                    if (params.length !== 4) {\n\t                        return;\n\t                    }\n\t                    params[3] = parseCssFloat(params[3]);\n\t                    return hsla2rgba(params);\n\t                case 'hsl':\n\t                    if (params.length !== 3) {\n\t                        return;\n\t                    }\n\t                    return hsla2rgba(params);\n\t                default:\n\t                    return;\n\t            }\n\t        }\n\t\n\t        return;\n\t    }\n\t\n\t    /**\n\t     * @param {Array.<number>} hsla\n\t     * @return {Array.<number>} rgba\n\t     */\n\t    function hsla2rgba(hsla) {\n\t        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n\t        // NOTE(deanm): According to the CSS spec s/l should only be\n\t        // percentages, but we don't bother and let float or percentage.\n\t        var s = parseCssFloat(hsla[1]);\n\t        var l = parseCssFloat(hsla[2]);\n\t        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n\t        var m1 = l * 2 - m2;\n\t\n\t        var rgba = [\n\t            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n\t            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n\t            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\n\t        ];\n\t\n\t        if (hsla.length === 4) {\n\t            rgba[3] = hsla[3];\n\t        }\n\t\n\t        return rgba;\n\t    }\n\t\n\t    /**\n\t     * @param {Array.<number>} rgba\n\t     * @return {Array.<number>} hsla\n\t     */\n\t    function rgba2hsla(rgba) {\n\t        if (!rgba) {\n\t            return;\n\t        }\n\t\n\t        // RGB from 0 to 255\n\t        var R = rgba[0] / 255;\n\t        var G = rgba[1] / 255;\n\t        var B = rgba[2] / 255;\n\t\n\t        var vMin = Math.min(R, G, B); // Min. value of RGB\n\t        var vMax = Math.max(R, G, B); // Max. value of RGB\n\t        var delta = vMax - vMin; // Delta RGB value\n\t\n\t        var L = (vMax + vMin) / 2;\n\t        var H;\n\t        var S;\n\t        // HSL results from 0 to 1\n\t        if (delta === 0) {\n\t            H = 0;\n\t            S = 0;\n\t        }\n\t        else {\n\t            if (L < 0.5) {\n\t                S = delta / (vMax + vMin);\n\t            }\n\t            else {\n\t                S = delta / (2 - vMax - vMin);\n\t            }\n\t\n\t            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n\t            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n\t            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\t\n\t            if (R === vMax) {\n\t                H = deltaB - deltaG;\n\t            }\n\t            else if (G === vMax) {\n\t                H = (1 / 3) + deltaR - deltaB;\n\t            }\n\t            else if (B === vMax) {\n\t                H = (2 / 3) + deltaG - deltaR;\n\t            }\n\t\n\t            if (H < 0) {\n\t                H += 1;\n\t            }\n\t\n\t            if (H > 1) {\n\t                H -= 1;\n\t            }\n\t        }\n\t\n\t        var hsla = [H * 360, S, L];\n\t\n\t        if (rgba[3] != null) {\n\t            hsla.push(rgba[3]);\n\t        }\n\t\n\t        return hsla;\n\t    }\n\t\n\t    /**\n\t     * @param {string} color\n\t     * @param {number} level\n\t     * @return {string}\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function lift(color, level) {\n\t        var colorArr = parse(color);\n\t        if (colorArr) {\n\t            for (var i = 0; i < 3; i++) {\n\t                if (level < 0) {\n\t                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n\t                }\n\t                else {\n\t                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n\t                }\n\t            }\n\t            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {string} color\n\t     * @return {string}\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function toHex(color, level) {\n\t        var colorArr = parse(color);\n\t        if (colorArr) {\n\t            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\n\t     * @param {number} normalizedValue A float between 0 and 1.\n\t     * @param {Array.<Array.<number>>} colors List of rgba color array\n\t     * @param {Array.<number>} [out] Mapped gba color array\n\t     * @return {Array.<number>}\n\t     */\n\t    function fastMapToColor(normalizedValue, colors, out) {\n\t        if (!(colors && colors.length)\n\t            || !(normalizedValue >= 0 && normalizedValue <= 1)\n\t        ) {\n\t            return;\n\t        }\n\t        out = out || [0, 0, 0, 0];\n\t        var value = normalizedValue * (colors.length - 1);\n\t        var leftIndex = Math.floor(value);\n\t        var rightIndex = Math.ceil(value);\n\t        var leftColor = colors[leftIndex];\n\t        var rightColor = colors[rightIndex];\n\t        var dv = value - leftIndex;\n\t        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n\t        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n\t        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n\t        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\n\t        return out;\n\t    }\n\t    /**\n\t     * @param {number} normalizedValue A float between 0 and 1.\n\t     * @param {Array.<string>} colors Color list.\n\t     * @param {boolean=} fullOutput Default false.\n\t     * @return {(string|Object)} Result color. If fullOutput,\n\t     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function mapToColor(normalizedValue, colors, fullOutput) {\n\t        if (!(colors && colors.length)\n\t            || !(normalizedValue >= 0 && normalizedValue <= 1)\n\t        ) {\n\t            return;\n\t        }\n\t\n\t        var value = normalizedValue * (colors.length - 1);\n\t        var leftIndex = Math.floor(value);\n\t        var rightIndex = Math.ceil(value);\n\t        var leftColor = parse(colors[leftIndex]);\n\t        var rightColor = parse(colors[rightIndex]);\n\t        var dv = value - leftIndex;\n\t\n\t        var color = stringify(\n\t            [\n\t                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n\t                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n\t                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n\t                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n\t            ],\n\t            'rgba'\n\t        );\n\t\n\t        return fullOutput\n\t            ? {\n\t                color: color,\n\t                leftIndex: leftIndex,\n\t                rightIndex: rightIndex,\n\t                value: value\n\t            }\n\t            : color;\n\t    }\n\t\n\t    /**\n\t     * @param {Array<number>} interval  Array length === 2,\n\t     *                                  each item is normalized value ([0, 1]).\n\t     * @param {Array.<string>} colors Color list.\n\t     * @return {Array.<Object>} colors corresponding to the interval,\n\t     *                          each item is {color: 'xxx', offset: ...}\n\t     *                          where offset is between 0 and 1.\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function mapIntervalToColor(interval, colors) {\n\t        if (interval.length !== 2 || interval[1] < interval[0]) {\n\t            return;\n\t        }\n\t\n\t        var info0 = mapToColor(interval[0], colors, true);\n\t        var info1 = mapToColor(interval[1], colors, true);\n\t\n\t        var result = [{color: info0.color, offset: 0}];\n\t\n\t        var during = info1.value - info0.value;\n\t        var start = Math.max(info0.value, info0.rightIndex);\n\t        var end = Math.min(info1.value, info1.leftIndex);\n\t\n\t        for (var i = start; during > 0 && i <= end; i++) {\n\t            result.push({\n\t                color: colors[i],\n\t                offset: (i - info0.value) / during\n\t            });\n\t        }\n\t        result.push({color: info1.color, offset: 1});\n\t\n\t        return result;\n\t    }\n\t\n\t    /**\n\t     * @param {string} color\n\t     * @param {number=} h 0 ~ 360, ignore when null.\n\t     * @param {number=} s 0 ~ 1, ignore when null.\n\t     * @param {number=} l 0 ~ 1, ignore when null.\n\t     * @return {string} Color string in rgba format.\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function modifyHSL(color, h, s, l) {\n\t        color = parse(color);\n\t\n\t        if (color) {\n\t            color = rgba2hsla(color);\n\t            h != null && (color[0] = clampCssAngle(h));\n\t            s != null && (color[1] = parseCssFloat(s));\n\t            l != null && (color[2] = parseCssFloat(l));\n\t\n\t            return stringify(hsla2rgba(color), 'rgba');\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {string} color\n\t     * @param {number=} alpha 0 ~ 1\n\t     * @return {string} Color string in rgba format.\n\t     * @memberOf module:zrender/util/color\n\t     */\n\t    function modifyAlpha(color, alpha) {\n\t        color = parse(color);\n\t\n\t        if (color && alpha != null) {\n\t            color[3] = clampCssFloat(alpha);\n\t            return stringify(color, 'rgba');\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {Array.<string>} colors Color list.\n\t     * @param {string} type 'rgba', 'hsva', ...\n\t     * @return {string} Result color.\n\t     */\n\t    function stringify(arrColor, type) {\n\t        if (type === 'rgb' || type === 'hsv' || type === 'hsl') {\n\t            arrColor = arrColor.slice(0, 3);\n\t        }\n\t        return type + '(' + arrColor.join(',') + ')';\n\t    }\n\t\n\t    module.exports = {\n\t        parse: parse,\n\t        lift: lift,\n\t        toHex: toHex,\n\t        fastMapToColor: fastMapToColor,\n\t        mapToColor: mapToColor,\n\t        mapIntervalToColor: mapIntervalToColor,\n\t        modifyHSL: modifyHSL,\n\t        modifyAlpha: modifyAlpha,\n\t        stringify: stringify\n\t    };\n\t\n\t\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t        var config = __webpack_require__(22);\n\t\n\t        /**\n\t         * @exports zrender/tool/log\n\t         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t         */\n\t        module.exports = function() {\n\t            if (config.debugMode === 0) {\n\t                return;\n\t            }\n\t            else if (config.debugMode == 1) {\n\t                for (var k in arguments) {\n\t                    throw new Error(arguments[k]);\n\t                }\n\t            }\n\t            else if (config.debugMode > 1) {\n\t                for (var k in arguments) {\n\t                    console.log(arguments[k]);\n\t                }\n\t            }\n\t        };\n\t\n\t        /* for debug\n\t        return function(mes) {\n\t            document.getElementById('wrong-message').innerHTML =\n\t                mes + ' ' + (new Date() - 0)\n\t                + '<br/>' \n\t                + document.getElementById('wrong-message').innerHTML;\n\t        };\n\t        */\n\t    \n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\n\t    var dpr = 1;\n\t    // If in browser environment\n\t    if (typeof window !== 'undefined') {\n\t        dpr = Math.max(window.devicePixelRatio || 1, 1);\n\t    }\n\t    /**\n\t     * config默认配置项\n\t     * @exports zrender/config\n\t     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t     */\n\t    var config = {\n\t        /**\n\t         * debug日志选项：catchBrushException为true下有效\n\t         * 0 : 不生成debug数据，发布用\n\t         * 1 : 异常抛出，调试用\n\t         * 2 : 控制台输出，调试用\n\t         */\n\t        debugMode: 0,\n\t\n\t        // retina 屏幕优化\n\t        devicePixelRatio: dpr\n\t    };\n\t    module.exports = config;\n\t\n\t\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Mixin for drawing text in a element bounding rect\n\t * @module zrender/mixin/RectText\n\t */\n\t\n\t\n\t\n\t    var textContain = __webpack_require__(24);\n\t    var BoundingRect = __webpack_require__(25);\n\t\n\t    var tmpRect = new BoundingRect();\n\t\n\t    var RectText = function () {};\n\t\n\t    function parsePercent(value, maxValue) {\n\t        if (typeof value === 'string') {\n\t            if (value.lastIndexOf('%') >= 0) {\n\t                return parseFloat(value) / 100 * maxValue;\n\t            }\n\t            return parseFloat(value);\n\t        }\n\t        return value;\n\t    }\n\t\n\t    function setTransform(ctx, m) {\n\t        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\t    }\n\t\n\t    RectText.prototype = {\n\t\n\t        constructor: RectText,\n\t\n\t        /**\n\t         * Draw text in a rect with specified position.\n\t         * @param  {CanvasRenderingContext} ctx\n\t         * @param  {Object} rect Displayable rect\n\t         * @return {Object} textRect Alternative precalculated text bounding rect\n\t         */\n\t        drawRectText: function (ctx, rect, textRect) {\n\t            var style = this.style;\n\t            var text = style.text;\n\t            // Convert to string\n\t            text != null && (text += '');\n\t            if (!text) {\n\t                return;\n\t            }\n\t            var x;\n\t            var y;\n\t            var textPosition = style.textPosition;\n\t            var distance = style.textDistance;\n\t            var align = style.textAlign;\n\t            var font = style.textFont || style.font;\n\t            var baseline = style.textBaseline;\n\t            var verticalAlign = style.textVerticalAlign;\n\t\n\t            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\t\n\t            // Transform rect to view space\n\t            var transform = this.transform;\n\t            var invTransform = this.invTransform;\n\t            if (transform) {\n\t                tmpRect.copy(rect);\n\t                tmpRect.applyTransform(transform);\n\t                rect = tmpRect;\n\t                // Transform back\n\t                setTransform(ctx, invTransform);\n\t            }\n\t\n\t            // Text position represented by coord\n\t            if (textPosition instanceof Array) {\n\t                // Percent\n\t                x = rect.x + parsePercent(textPosition[0], rect.width);\n\t                y = rect.y + parsePercent(textPosition[1], rect.height);\n\t                align = align || 'left';\n\t                baseline = baseline || 'top';\n\t            }\n\t            else {\n\t                var res = textContain.adjustTextPositionOnRect(\n\t                    textPosition, rect, textRect, distance\n\t                );\n\t                x = res.x;\n\t                y = res.y;\n\t                // Default align and baseline when has textPosition\n\t                align = align || res.textAlign;\n\t                baseline = baseline || res.textBaseline;\n\t            }\n\t\n\t            ctx.textAlign = align;\n\t            if (verticalAlign) {\n\t                switch (verticalAlign) {\n\t                    case 'middle':\n\t                        y -= textRect.height / 2;\n\t                        break;\n\t                    case 'bottom':\n\t                        y -= textRect.height;\n\t                        break;\n\t                    // 'top'\n\t                }\n\t                // Ignore baseline\n\t                ctx.textBaseline = 'top';\n\t            }\n\t            else {\n\t                ctx.textBaseline = baseline;\n\t            }\n\t\n\t            var textFill = style.textFill;\n\t            var textStroke = style.textStroke;\n\t            textFill && (ctx.fillStyle = textFill);\n\t            textStroke && (ctx.strokeStyle = textStroke);\n\t            ctx.font = font;\n\t\n\t            // Text shadow\n\t            ctx.shadowColor = style.textShadowColor;\n\t            ctx.shadowBlur = style.textShadowBlur;\n\t            ctx.shadowOffsetX = style.textShadowOffsetX;\n\t            ctx.shadowOffsetY = style.textShadowOffsetY;\n\t\n\t            var textLines = text.split('\\n');\n\t            for (var i = 0; i < textLines.length; i++) {\n\t                textFill && ctx.fillText(textLines[i], x, y);\n\t                textStroke && ctx.strokeText(textLines[i], x, y);\n\t                y += textRect.lineHeight;\n\t            }\n\t\n\t            // Transform again\n\t            transform && setTransform(ctx, transform);\n\t        }\n\t    };\n\t\n\t    module.exports = RectText;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var textWidthCache = {};\n\t    var textWidthCacheCounter = 0;\n\t    var TEXT_CACHE_MAX = 5000;\n\t\n\t    var util = __webpack_require__(4);\n\t    var BoundingRect = __webpack_require__(25);\n\t\n\t    function getTextWidth(text, textFont) {\n\t        var key = text + ':' + textFont;\n\t        if (textWidthCache[key]) {\n\t            return textWidthCache[key];\n\t        }\n\t\n\t        var textLines = (text + '').split('\\n');\n\t        var width = 0;\n\t\n\t        for (var i = 0, l = textLines.length; i < l; i++) {\n\t            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n\t            width =  Math.max(textContain.measureText(textLines[i], textFont).width, width);\n\t        }\n\t\n\t        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n\t            textWidthCacheCounter = 0;\n\t            textWidthCache = {};\n\t        }\n\t        textWidthCacheCounter++;\n\t        textWidthCache[key] = width;\n\t\n\t        return width;\n\t    }\n\t\n\t    function getTextRect(text, textFont, textAlign, textBaseline) {\n\t        var textLineLen = ((text || '') + '').split('\\n').length;\n\t\n\t        var width = getTextWidth(text, textFont);\n\t        // FIXME 高度计算比较粗暴\n\t        var lineHeight = getTextWidth('国', textFont);\n\t        var height = textLineLen * lineHeight;\n\t\n\t        var rect = new BoundingRect(0, 0, width, height);\n\t        // Text has a special line height property\n\t        rect.lineHeight = lineHeight;\n\t\n\t        switch (textBaseline) {\n\t            case 'bottom':\n\t            case 'alphabetic':\n\t                rect.y -= lineHeight;\n\t                break;\n\t            case 'middle':\n\t                rect.y -= lineHeight / 2;\n\t                break;\n\t            // case 'hanging':\n\t            // case 'top':\n\t        }\n\t\n\t        // FIXME Right to left language\n\t        switch (textAlign) {\n\t            case 'end':\n\t            case 'right':\n\t                rect.x -= rect.width;\n\t                break;\n\t            case 'center':\n\t                rect.x -= rect.width / 2;\n\t                break;\n\t            // case 'start':\n\t            // case 'left':\n\t        }\n\t\n\t        return rect;\n\t    }\n\t\n\t    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\t\n\t        var x = rect.x;\n\t        var y = rect.y;\n\t\n\t        var height = rect.height;\n\t        var width = rect.width;\n\t\n\t        var textHeight = textRect.height;\n\t\n\t        var halfHeight = height / 2 - textHeight / 2;\n\t\n\t        var textAlign = 'left';\n\t\n\t        switch (textPosition) {\n\t            case 'left':\n\t                x -= distance;\n\t                y += halfHeight;\n\t                textAlign = 'right';\n\t                break;\n\t            case 'right':\n\t                x += distance + width;\n\t                y += halfHeight;\n\t                textAlign = 'left';\n\t                break;\n\t            case 'top':\n\t                x += width / 2;\n\t                y -= distance + textHeight;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'bottom':\n\t                x += width / 2;\n\t                y += height + distance;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'inside':\n\t                x += width / 2;\n\t                y += halfHeight;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'insideLeft':\n\t                x += distance;\n\t                y += halfHeight;\n\t                textAlign = 'left';\n\t                break;\n\t            case 'insideRight':\n\t                x += width - distance;\n\t                y += halfHeight;\n\t                textAlign = 'right';\n\t                break;\n\t            case 'insideTop':\n\t                x += width / 2;\n\t                y += distance;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'insideBottom':\n\t                x += width / 2;\n\t                y += height - textHeight - distance;\n\t                textAlign = 'center';\n\t                break;\n\t            case 'insideTopLeft':\n\t                x += distance;\n\t                y += distance;\n\t                textAlign = 'left';\n\t                break;\n\t            case 'insideTopRight':\n\t                x += width - distance;\n\t                y += distance;\n\t                textAlign = 'right';\n\t                break;\n\t            case 'insideBottomLeft':\n\t                x += distance;\n\t                y += height - textHeight - distance;\n\t                break;\n\t            case 'insideBottomRight':\n\t                x += width - distance;\n\t                y += height - textHeight - distance;\n\t                textAlign = 'right';\n\t                break;\n\t        }\n\t\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            textAlign: textAlign,\n\t            textBaseline: 'top'\n\t        };\n\t    }\n\t\n\t    /**\n\t     * Show ellipsis if overflow.\n\t     *\n\t     * @param  {string} text\n\t     * @param  {string} textFont\n\t     * @param  {string} containerWidth\n\t     * @param  {Object} [options]\n\t     * @param  {number} [options.ellipsis='...']\n\t     * @param  {number} [options.maxIterations=3]\n\t     * @param  {number} [options.minCharacters=3]\n\t     * @return {string}\n\t     */\n\t    function textEllipsis(text, textFont, containerWidth, options) {\n\t        if (!containerWidth) {\n\t            return '';\n\t        }\n\t\n\t        options = util.defaults({\n\t            ellipsis: '...',\n\t            minCharacters: 3,\n\t            maxIterations: 3,\n\t            cnCharWidth: getTextWidth('国', textFont),\n\t            // FIXME\n\t            // 未考虑非等宽字体\n\t            ascCharWidth: getTextWidth('a', textFont)\n\t        }, options, true);\n\t\n\t        containerWidth -= getTextWidth(options.ellipsis);\n\t\n\t        var textLines = (text + '').split('\\n');\n\t\n\t        for (var i = 0, len = textLines.length; i < len; i++) {\n\t            textLines[i] = textLineTruncate(\n\t                textLines[i], textFont, containerWidth, options\n\t            );\n\t        }\n\t\n\t        return textLines.join('\\n');\n\t    }\n\t\n\t    function textLineTruncate(text, textFont, containerWidth, options) {\n\t        // FIXME\n\t        // 粗糙得写的，尚未考虑性能和各种语言、字体的效果。\n\t        for (var i = 0;; i++) {\n\t            var lineWidth = getTextWidth(text, textFont);\n\t\n\t            if (lineWidth < containerWidth || i >= options.maxIterations) {\n\t                text += options.ellipsis;\n\t                break;\n\t            }\n\t\n\t            var subLength = i === 0\n\t                ? estimateLength(text, containerWidth, options)\n\t                : Math.floor(text.length * containerWidth / lineWidth);\n\t\n\t            if (subLength < options.minCharacters) {\n\t                text = '';\n\t                break;\n\t            }\n\t\n\t            text = text.substr(0, subLength);\n\t        }\n\t\n\t        return text;\n\t    }\n\t\n\t    function estimateLength(text, containerWidth, options) {\n\t        var width = 0;\n\t        var i = 0;\n\t        for (var len = text.length; i < len && width < containerWidth; i++) {\n\t            var charCode = text.charCodeAt(i);\n\t            width += (0 <= charCode && charCode <= 127)\n\t                ? options.ascCharWidth : options.cnCharWidth;\n\t        }\n\t        return i;\n\t    }\n\t\n\t    var textContain = {\n\t\n\t        getWidth: getTextWidth,\n\t\n\t        getBoundingRect: getTextRect,\n\t\n\t        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\t\n\t        ellipsis: textEllipsis,\n\t\n\t        measureText: function (text, textFont) {\n\t            var ctx = util.getContext();\n\t            ctx.font = textFont;\n\t            return ctx.measureText(text);\n\t        }\n\t    };\n\t\n\t    module.exports = textContain;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module echarts/core/BoundingRect\n\t */\n\t\n\t\n\t    var vec2 = __webpack_require__(15);\n\t    var matrix = __webpack_require__(14);\n\t\n\t    var v2ApplyTransform = vec2.applyTransform;\n\t    var mathMin = Math.min;\n\t    var mathAbs = Math.abs;\n\t    var mathMax = Math.max;\n\t    /**\n\t     * @alias module:echarts/core/BoundingRect\n\t     */\n\t    function BoundingRect(x, y, width, height) {\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.x = x;\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.y = y;\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.width = width;\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.height = height;\n\t    }\n\t\n\t    BoundingRect.prototype = {\n\t\n\t        constructor: BoundingRect,\n\t\n\t        /**\n\t         * @param {module:echarts/core/BoundingRect} other\n\t         */\n\t        union: function (other) {\n\t            var x = mathMin(other.x, this.x);\n\t            var y = mathMin(other.y, this.y);\n\t\n\t            this.width = mathMax(\n\t                    other.x + other.width,\n\t                    this.x + this.width\n\t                ) - x;\n\t            this.height = mathMax(\n\t                    other.y + other.height,\n\t                    this.y + this.height\n\t                ) - y;\n\t            this.x = x;\n\t            this.y = y;\n\t        },\n\t\n\t        /**\n\t         * @param {Array.<number>} m\n\t         * @methods\n\t         */\n\t        applyTransform: (function () {\n\t            var min = [];\n\t            var max = [];\n\t            return function (m) {\n\t                // In case usage like this\n\t                // el.getBoundingRect().applyTransform(el.transform)\n\t                // And element has no transform\n\t                if (!m) {\n\t                    return;\n\t                }\n\t                min[0] = this.x;\n\t                min[1] = this.y;\n\t                max[0] = this.x + this.width;\n\t                max[1] = this.y + this.height;\n\t\n\t                v2ApplyTransform(min, min, m);\n\t                v2ApplyTransform(max, max, m);\n\t\n\t                this.x = mathMin(min[0], max[0]);\n\t                this.y = mathMin(min[1], max[1]);\n\t                this.width = mathAbs(max[0] - min[0]);\n\t                this.height = mathAbs(max[1] - min[1]);\n\t            };\n\t        })(),\n\t\n\t        /**\n\t         * Calculate matrix of transforming from self to target rect\n\t         * @param  {module:zrender/core/BoundingRect} b\n\t         * @return {Array.<number>}\n\t         */\n\t        calculateTransform: function (b) {\n\t            var a = this;\n\t            var sx = b.width / a.width;\n\t            var sy = b.height / a.height;\n\t\n\t            var m = matrix.create();\n\t\n\t            // 矩阵右乘\n\t            matrix.translate(m, m, [-a.x, -a.y]);\n\t            matrix.scale(m, m, [sx, sy]);\n\t            matrix.translate(m, m, [b.x, b.y]);\n\t\n\t            return m;\n\t        },\n\t\n\t        /**\n\t         * @param {(module:echarts/core/BoundingRect|Object)} b\n\t         * @return {boolean}\n\t         */\n\t        intersect: function (b) {\n\t            var a = this;\n\t            var ax0 = a.x;\n\t            var ax1 = a.x + a.width;\n\t            var ay0 = a.y;\n\t            var ay1 = a.y + a.height;\n\t\n\t            var bx0 = b.x;\n\t            var bx1 = b.x + b.width;\n\t            var by0 = b.y;\n\t            var by1 = b.y + b.height;\n\t\n\t            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n\t        },\n\t\n\t        contain: function (x, y) {\n\t            var rect = this;\n\t            return x >= rect.x\n\t                && x <= (rect.x + rect.width)\n\t                && y >= rect.y\n\t                && y <= (rect.y + rect.height);\n\t        },\n\t\n\t        /**\n\t         * @return {module:echarts/core/BoundingRect}\n\t         */\n\t        clone: function () {\n\t            return new BoundingRect(this.x, this.y, this.width, this.height);\n\t        },\n\t\n\t        /**\n\t         * Copy from another rect\n\t         */\n\t        copy: function (other) {\n\t            this.x = other.x;\n\t            this.y = other.y;\n\t            this.width = other.width;\n\t            this.height = other.height;\n\t        }\n\t    };\n\t\n\t    module.exports = BoundingRect;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n\t * 可以用于 isInsidePath 判断以及获取boundingRect\n\t *\n\t * @module zrender/core/PathProxy\n\t * @author Yi Shen (http://www.github.com/pissang)\n\t */\n\t\n\t // TODO getTotalLength, getPointAtLength\n\t\n\t\n\t    var curve = __webpack_require__(27);\n\t    var vec2 = __webpack_require__(15);\n\t    var bbox = __webpack_require__(28);\n\t    var BoundingRect = __webpack_require__(25);\n\t\n\t    var CMD = {\n\t        M: 1,\n\t        L: 2,\n\t        C: 3,\n\t        Q: 4,\n\t        A: 5,\n\t        Z: 6,\n\t        // Rect\n\t        R: 7\n\t    };\n\t\n\t    var min = [];\n\t    var max = [];\n\t    var min2 = [];\n\t    var max2 = [];\n\t    var mathMin = Math.min;\n\t    var mathMax = Math.max;\n\t    var mathCos = Math.cos;\n\t    var mathSin = Math.sin;\n\t    var mathSqrt = Math.sqrt;\n\t\n\t    var hasTypedArray = typeof Float32Array != 'undefined';\n\t\n\t    /**\n\t     * @alias module:zrender/core/PathProxy\n\t     * @constructor\n\t     */\n\t    var PathProxy = function () {\n\t\n\t        /**\n\t         * Path data. Stored as flat array\n\t         * @type {Array.<Object>}\n\t         */\n\t        this.data = [];\n\t\n\t        this._len = 0;\n\t\n\t        this._ctx = null;\n\t\n\t        this._xi = 0;\n\t        this._yi = 0;\n\t\n\t        this._x0 = 0;\n\t        this._y0 = 0;\n\t    };\n\t\n\t    /**\n\t     * 快速计算Path包围盒（并不是最小包围盒）\n\t     * @return {Object}\n\t     */\n\t    PathProxy.prototype = {\n\t\n\t        constructor: PathProxy,\n\t\n\t        _lineDash: null,\n\t\n\t        _dashOffset: 0,\n\t\n\t        _dashIdx: 0,\n\t\n\t        _dashSum: 0,\n\t\n\t        getContext: function () {\n\t            return this._ctx;\n\t        },\n\t\n\t        /**\n\t         * @param  {CanvasRenderingContext2D} ctx\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        beginPath: function (ctx) {\n\t            this._ctx = ctx;\n\t\n\t            ctx && ctx.beginPath();\n\t\n\t            // Reset\n\t            this._len = 0;\n\t\n\t            if (this._lineDash) {\n\t                this._lineDash = null;\n\t\n\t                this._dashOffset = 0;\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} x\n\t         * @param  {number} y\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        moveTo: function (x, y) {\n\t            this.addData(CMD.M, x, y);\n\t            this._ctx && this._ctx.moveTo(x, y);\n\t\n\t            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n\t            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n\t            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n\t            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\t            this._x0 = x;\n\t            this._y0 = y;\n\t\n\t            this._xi = x;\n\t            this._yi = y;\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} x\n\t         * @param  {number} y\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        lineTo: function (x, y) {\n\t            this.addData(CMD.L, x, y);\n\t            if (this._ctx) {\n\t                this._needsDash() ? this._dashedLineTo(x, y)\n\t                    : this._ctx.lineTo(x, y);\n\t            }\n\t            this._xi = x;\n\t            this._yi = y;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} x1\n\t         * @param  {number} y1\n\t         * @param  {number} x2\n\t         * @param  {number} y2\n\t         * @param  {number} x3\n\t         * @param  {number} y3\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n\t            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\t            if (this._ctx) {\n\t                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n\t                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n\t            }\n\t            this._xi = x3;\n\t            this._yi = y3;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} x1\n\t         * @param  {number} y1\n\t         * @param  {number} x2\n\t         * @param  {number} y2\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        quadraticCurveTo: function (x1, y1, x2, y2) {\n\t            this.addData(CMD.Q, x1, y1, x2, y2);\n\t            if (this._ctx) {\n\t                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n\t                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n\t            }\n\t            this._xi = x2;\n\t            this._yi = y2;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @param  {number} cx\n\t         * @param  {number} cy\n\t         * @param  {number} r\n\t         * @param  {number} startAngle\n\t         * @param  {number} endAngle\n\t         * @param  {boolean} anticlockwise\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n\t            this.addData(\n\t                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n\t            );\n\t            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\t\n\t            this._xi = mathCos(endAngle) * r + cx;\n\t            this._xi = mathSin(endAngle) * r + cx;\n\t            return this;\n\t        },\n\t\n\t        // TODO\n\t        arcTo: function (x1, y1, x2, y2, radius) {\n\t            if (this._ctx) {\n\t                this._ctx.arcTo(x1, y1, x2, y2, radius);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        // TODO\n\t        rect: function (x, y, w, h) {\n\t            this._ctx && this._ctx.rect(x, y, w, h);\n\t            this.addData(CMD.R, x, y, w, h);\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        closePath: function () {\n\t            this.addData(CMD.Z);\n\t\n\t            var ctx = this._ctx;\n\t            var x0 = this._x0;\n\t            var y0 = this._y0;\n\t            if (ctx) {\n\t                this._needsDash() && this._dashedLineTo(x0, y0);\n\t                ctx.closePath();\n\t            }\n\t\n\t            this._xi = x0;\n\t            this._yi = y0;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n\t         * stroke 同样\n\t         * @param {CanvasRenderingContext2D} ctx\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        fill: function (ctx) {\n\t            ctx && ctx.fill();\n\t            this.toStatic();\n\t        },\n\t\n\t        /**\n\t         * @param {CanvasRenderingContext2D} ctx\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        stroke: function (ctx) {\n\t            ctx && ctx.stroke();\n\t            this.toStatic();\n\t        },\n\t\n\t        /**\n\t         * 必须在其它绘制命令前调用\n\t         * Must be invoked before all other path drawing methods\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        setLineDash: function (lineDash) {\n\t            if (lineDash instanceof Array) {\n\t                this._lineDash = lineDash;\n\t\n\t                this._dashIdx = 0;\n\t\n\t                var lineDashSum = 0;\n\t                for (var i = 0; i < lineDash.length; i++) {\n\t                    lineDashSum += lineDash[i];\n\t                }\n\t                this._dashSum = lineDashSum;\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 必须在其它绘制命令前调用\n\t         * Must be invoked before all other path drawing methods\n\t         * @return {module:zrender/core/PathProxy}\n\t         */\n\t        setLineDashOffset: function (offset) {\n\t            this._dashOffset = offset;\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         *\n\t         * @return {boolean}\n\t         */\n\t        len: function () {\n\t            return this._len;\n\t        },\n\t\n\t        /**\n\t         * 直接设置 Path 数据\n\t         */\n\t        setData: function (data) {\n\t\n\t            var len = data.length;\n\t\n\t            if (! (this.data && this.data.length == len) && hasTypedArray) {\n\t                this.data = new Float32Array(len);\n\t            }\n\t\n\t            for (var i = 0; i < len; i++) {\n\t                this.data[i] = data[i];\n\t            }\n\t\n\t            this._len = len;\n\t        },\n\t\n\t        /**\n\t         * 添加子路径\n\t         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n\t         */\n\t        appendPath: function (path) {\n\t            if (!(path instanceof Array)) {\n\t                path = [path];\n\t            }\n\t            var len = path.length;\n\t            var appendSize = 0;\n\t            var offset = this._len;\n\t            for (var i = 0; i < len; i++) {\n\t                appendSize += path[i].len();\n\t            }\n\t            if (hasTypedArray && (this.data instanceof Float32Array)) {\n\t                this.data = new Float32Array(offset + appendSize);\n\t            }\n\t            for (var i = 0; i < len; i++) {\n\t                var appendPathData = path[i].data;\n\t                for (var k = 0; k < appendPathData.length; k++) {\n\t                    this.data[offset++] = appendPathData[k];\n\t                }\n\t            }\n\t            this._len = offset;\n\t        },\n\t\n\t        /**\n\t         * 填充 Path 数据。\n\t         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n\t         */\n\t        addData: function (cmd) {\n\t            var data = this.data;\n\t            if (this._len + arguments.length > data.length) {\n\t                // 因为之前的数组已经转换成静态的 Float32Array\n\t                // 所以不够用时需要扩展一个新的动态数组\n\t                this._expandData();\n\t                data = this.data;\n\t            }\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                data[this._len++] = arguments[i];\n\t            }\n\t\n\t            this._prevCmd = cmd;\n\t        },\n\t\n\t        _expandData: function () {\n\t            // Only if data is Float32Array\n\t            if (!(this.data instanceof Array)) {\n\t                var newData = [];\n\t                for (var i = 0; i < this._len; i++) {\n\t                    newData[i] = this.data[i];\n\t                }\n\t                this.data = newData;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * If needs js implemented dashed line\n\t         * @return {boolean}\n\t         * @private\n\t         */\n\t        _needsDash: function () {\n\t            return this._lineDash;\n\t        },\n\t\n\t        _dashedLineTo: function (x1, y1) {\n\t            var dashSum = this._dashSum;\n\t            var offset = this._dashOffset;\n\t            var lineDash = this._lineDash;\n\t            var ctx = this._ctx;\n\t\n\t            var x0 = this._xi;\n\t            var y0 = this._yi;\n\t            var dx = x1 - x0;\n\t            var dy = y1 - y0;\n\t            var dist = mathSqrt(dx * dx + dy * dy);\n\t            var x = x0;\n\t            var y = y0;\n\t            var dash;\n\t            var nDash = lineDash.length;\n\t            var idx;\n\t            dx /= dist;\n\t            dy /= dist;\n\t\n\t            if (offset < 0) {\n\t                // Convert to positive offset\n\t                offset = dashSum + offset;\n\t            }\n\t            offset %= dashSum;\n\t            x -= offset * dx;\n\t            y -= offset * dy;\n\t\n\t            while ((dx >= 0 && x <= x1) || (dx < 0 && x > x1)) {\n\t                idx = this._dashIdx;\n\t                dash = lineDash[idx];\n\t                x += dx * dash;\n\t                y += dy * dash;\n\t                this._dashIdx = (idx + 1) % nDash;\n\t                // Skip positive offset\n\t                if ((dx > 0 && x < x0) || (dx < 0 && x > x0)) {\n\t                    continue;\n\t                }\n\t                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n\t                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n\t                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n\t                );\n\t            }\n\t            // Offset for next lineTo\n\t            dx = x - x1;\n\t            dy = y - y1;\n\t            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n\t        },\n\t\n\t        // Not accurate dashed line to\n\t        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n\t            var dashSum = this._dashSum;\n\t            var offset = this._dashOffset;\n\t            var lineDash = this._lineDash;\n\t            var ctx = this._ctx;\n\t\n\t            var x0 = this._xi;\n\t            var y0 = this._yi;\n\t            var t;\n\t            var dx;\n\t            var dy;\n\t            var cubicAt = curve.cubicAt;\n\t            var bezierLen = 0;\n\t            var idx = this._dashIdx;\n\t            var nDash = lineDash.length;\n\t\n\t            var x;\n\t            var y;\n\t\n\t            var tmpLen = 0;\n\t\n\t            if (offset < 0) {\n\t                // Convert to positive offset\n\t                offset = dashSum + offset;\n\t            }\n\t            offset %= dashSum;\n\t            // Bezier approx length\n\t            for (t = 0; t < 1; t += 0.1) {\n\t                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n\t                    - cubicAt(x0, x1, x2, x3, t);\n\t                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n\t                    - cubicAt(y0, y1, y2, y3, t);\n\t                bezierLen += mathSqrt(dx * dx + dy * dy);\n\t            }\n\t\n\t            // Find idx after add offset\n\t            for (; idx < nDash; idx++) {\n\t                tmpLen += lineDash[idx];\n\t                if (tmpLen > offset) {\n\t                    break;\n\t                }\n\t            }\n\t            t = (tmpLen - offset) / bezierLen;\n\t\n\t            while (t <= 1) {\n\t\n\t                x = cubicAt(x0, x1, x2, x3, t);\n\t                y = cubicAt(y0, y1, y2, y3, t);\n\t\n\t                // Use line to approximate dashed bezier\n\t                // Bad result if dash is long\n\t                idx % 2 ? ctx.moveTo(x, y)\n\t                    : ctx.lineTo(x, y);\n\t\n\t                t += lineDash[idx] / bezierLen;\n\t\n\t                idx = (idx + 1) % nDash;\n\t            }\n\t\n\t            // Finish the last segment and calculate the new offset\n\t            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n\t            dx = x3 - x;\n\t            dy = y3 - y;\n\t            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n\t        },\n\t\n\t        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n\t            // Convert quadratic to cubic using degree elevation\n\t            var x3 = x2;\n\t            var y3 = y2;\n\t            x2 = (x2 + 2 * x1) / 3;\n\t            y2 = (y2 + 2 * y1) / 3;\n\t            x1 = (this._xi + 2 * x1) / 3;\n\t            y1 = (this._yi + 2 * y1) / 3;\n\t\n\t            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n\t        },\n\t\n\t        /**\n\t         * 转成静态的 Float32Array 减少堆内存占用\n\t         * Convert dynamic array to static Float32Array\n\t         */\n\t        toStatic: function () {\n\t            var data = this.data;\n\t            if (data instanceof Array) {\n\t                data.length = this._len;\n\t                if (hasTypedArray) {\n\t                    this.data = new Float32Array(data);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @return {module:zrender/core/BoundingRect}\n\t         */\n\t        getBoundingRect: function () {\n\t            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n\t            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\t\n\t            var data = this.data;\n\t            var xi = 0;\n\t            var yi = 0;\n\t            var x0 = 0;\n\t            var y0 = 0;\n\t\n\t            for (var i = 0; i < data.length;) {\n\t                var cmd = data[i++];\n\t\n\t                if (i == 1) {\n\t                    // 如果第一个命令是 L, C, Q\n\t                    // 则 previous point 同绘制命令的第一个 point\n\t                    //\n\t                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n\t                    xi = data[i];\n\t                    yi = data[i + 1];\n\t\n\t                    x0 = xi;\n\t                    y0 = yi;\n\t                }\n\t\n\t                switch (cmd) {\n\t                    case CMD.M:\n\t                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n\t                        // 在 closePath 的时候使用\n\t                        x0 = data[i++];\n\t                        y0 = data[i++];\n\t                        xi = x0;\n\t                        yi = y0;\n\t                        min2[0] = x0;\n\t                        min2[1] = y0;\n\t                        max2[0] = x0;\n\t                        max2[1] = y0;\n\t                        break;\n\t                    case CMD.L:\n\t                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n\t                        xi = data[i++];\n\t                        yi = data[i++];\n\t                        break;\n\t                    case CMD.C:\n\t                        bbox.fromCubic(\n\t                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n\t                            min2, max2\n\t                        );\n\t                        xi = data[i++];\n\t                        yi = data[i++];\n\t                        break;\n\t                    case CMD.Q:\n\t                        bbox.fromQuadratic(\n\t                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n\t                            min2, max2\n\t                        );\n\t                        xi = data[i++];\n\t                        yi = data[i++];\n\t                        break;\n\t                    case CMD.A:\n\t                        // TODO Arc 判断的开销比较大\n\t                        var cx = data[i++];\n\t                        var cy = data[i++];\n\t                        var rx = data[i++];\n\t                        var ry = data[i++];\n\t                        var startAngle = data[i++];\n\t                        var endAngle = data[i++] + startAngle;\n\t                        // TODO Arc 旋转\n\t                        var psi = data[i++];\n\t                        var anticlockwise = 1 - data[i++];\n\t\n\t                        if (i == 1) {\n\t                            // 直接使用 arc 命令\n\t                            // 第一个命令起点还未定义\n\t                            x0 = mathCos(startAngle) * rx + cx;\n\t                            y0 = mathSin(startAngle) * ry + cy;\n\t                        }\n\t\n\t                        bbox.fromArc(\n\t                            cx, cy, rx, ry, startAngle, endAngle,\n\t                            anticlockwise, min2, max2\n\t                        );\n\t\n\t                        xi = mathCos(endAngle) * rx + cx;\n\t                        yi = mathSin(endAngle) * ry + cy;\n\t                        break;\n\t                    case CMD.R:\n\t                        x0 = xi = data[i++];\n\t                        y0 = yi = data[i++];\n\t                        var width = data[i++];\n\t                        var height = data[i++];\n\t                        // Use fromLine\n\t                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n\t                        break;\n\t                    case CMD.Z:\n\t                        xi = x0;\n\t                        yi = y0;\n\t                        break;\n\t                }\n\t\n\t                // Union\n\t                vec2.min(min, min, min2);\n\t                vec2.max(max, max, max2);\n\t            }\n\t\n\t            // No data\n\t            if (i === 0) {\n\t                min[0] = min[1] = max[0] = max[1] = 0;\n\t            }\n\t\n\t            return new BoundingRect(\n\t                min[0], min[1], max[0] - min[0], max[1] - min[1]\n\t            );\n\t        },\n\t\n\t        /**\n\t         * Rebuild path from current data\n\t         * Rebuild path will not consider javascript implemented line dash.\n\t         * @param {CanvasRenderingContext} ctx\n\t         */\n\t        rebuildPath: function (ctx) {\n\t            var d = this.data;\n\t            for (var i = 0; i < this._len;) {\n\t                var cmd = d[i++];\n\t                switch (cmd) {\n\t                    case CMD.M:\n\t                        ctx.moveTo(d[i++], d[i++]);\n\t                        break;\n\t                    case CMD.L:\n\t                        ctx.lineTo(d[i++], d[i++]);\n\t                        break;\n\t                    case CMD.C:\n\t                        ctx.bezierCurveTo(\n\t                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n\t                        );\n\t                        break;\n\t                    case CMD.Q:\n\t                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n\t                        break;\n\t                    case CMD.A:\n\t                        var cx = d[i++];\n\t                        var cy = d[i++];\n\t                        var rx = d[i++];\n\t                        var ry = d[i++];\n\t                        var theta = d[i++];\n\t                        var dTheta = d[i++];\n\t                        var psi = d[i++];\n\t                        var fs = d[i++];\n\t                        var r = (rx > ry) ? rx : ry;\n\t                        var scaleX = (rx > ry) ? 1 : rx / ry;\n\t                        var scaleY = (rx > ry) ? ry / rx : 1;\n\t                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n\t                        if (isEllipse) {\n\t                            ctx.translate(cx, cy);\n\t                            ctx.rotate(psi);\n\t                            ctx.scale(scaleX, scaleY);\n\t                            ctx.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n\t                            ctx.scale(1 / scaleX, 1 / scaleY);\n\t                            ctx.rotate(-psi);\n\t                            ctx.translate(-cx, -cy);\n\t                        }\n\t                        else {\n\t                            ctx.arc(cx, cy, r, theta, theta + dTheta, 1 - fs);\n\t                        }\n\t                        break;\n\t                    case CMD.R:\n\t                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n\t                        break;\n\t                    case CMD.Z:\n\t                        ctx.closePath();\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    PathProxy.CMD = CMD;\n\t\n\t    module.exports = PathProxy;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 曲线辅助模块\n\t * @module zrender/core/curve\n\t * @author pissang(https://www.github.com/pissang)\n\t */\n\t\n\t\n\t    var vec2 = __webpack_require__(15);\n\t    var v2Create = vec2.create;\n\t    var v2DistSquare = vec2.distSquare;\n\t    var mathPow = Math.pow;\n\t    var mathSqrt = Math.sqrt;\n\t\n\t    var EPSILON = 1e-4;\n\t\n\t    var THREE_SQRT = mathSqrt(3);\n\t    var ONE_THIRD = 1 / 3;\n\t\n\t    // 临时变量\n\t    var _v0 = v2Create();\n\t    var _v1 = v2Create();\n\t    var _v2 = v2Create();\n\t    // var _v3 = vec2.create();\n\t\n\t    function isAroundZero(val) {\n\t        return val > -EPSILON && val < EPSILON;\n\t    }\n\t    function isNotAroundZero(val) {\n\t        return val > EPSILON || val < -EPSILON;\n\t    }\n\t    /**\n\t     * 计算三次贝塞尔值\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} t\n\t     * @return {number}\n\t     */\n\t    function cubicAt(p0, p1, p2, p3, t) {\n\t        var onet = 1 - t;\n\t        return onet * onet * (onet * p0 + 3 * t * p1)\n\t             + t * t * (t * p3 + 3 * onet * p2);\n\t    }\n\t\n\t    /**\n\t     * 计算三次贝塞尔导数值\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} t\n\t     * @return {number}\n\t     */\n\t    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n\t        var onet = 1 - t;\n\t        return 3 * (\n\t            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n\t            + (p3 - p2) * t * t\n\t        );\n\t    }\n\t\n\t    /**\n\t     * 计算三次贝塞尔方程根，使用盛金公式\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} val\n\t     * @param  {Array.<number>} roots\n\t     * @return {number} 有效根数目\n\t     */\n\t    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n\t        // Evaluate roots of cubic functions\n\t        var a = p3 + 3 * (p1 - p2) - p0;\n\t        var b = 3 * (p2 - p1 * 2 + p0);\n\t        var c = 3 * (p1  - p0);\n\t        var d = p0 - val;\n\t\n\t        var A = b * b - 3 * a * c;\n\t        var B = b * c - 9 * a * d;\n\t        var C = c * c - 3 * b * d;\n\t\n\t        var n = 0;\n\t\n\t        if (isAroundZero(A) && isAroundZero(B)) {\n\t            if (isAroundZero(b)) {\n\t                roots[0] = 0;\n\t            }\n\t            else {\n\t                var t1 = -c / b;  //t1, t2, t3, b is not zero\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            var disc = B * B - 4 * A * C;\n\t\n\t            if (isAroundZero(disc)) {\n\t                var K = B / A;\n\t                var t1 = -b / a + K;  // t1, a is not zero\n\t                var t2 = -K / 2;  // t2, t3\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t                if (t2 >= 0 && t2 <= 1) {\n\t                    roots[n++] = t2;\n\t                }\n\t            }\n\t            else if (disc > 0) {\n\t                var discSqrt = mathSqrt(disc);\n\t                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n\t                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\t                if (Y1 < 0) {\n\t                    Y1 = -mathPow(-Y1, ONE_THIRD);\n\t                }\n\t                else {\n\t                    Y1 = mathPow(Y1, ONE_THIRD);\n\t                }\n\t                if (Y2 < 0) {\n\t                    Y2 = -mathPow(-Y2, ONE_THIRD);\n\t                }\n\t                else {\n\t                    Y2 = mathPow(Y2, ONE_THIRD);\n\t                }\n\t                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t            }\n\t            else {\n\t                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n\t                var theta = Math.acos(T) / 3;\n\t                var ASqrt = mathSqrt(A);\n\t                var tmp = Math.cos(theta);\n\t\n\t                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n\t                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n\t                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t                if (t2 >= 0 && t2 <= 1) {\n\t                    roots[n++] = t2;\n\t                }\n\t                if (t3 >= 0 && t3 <= 1) {\n\t                    roots[n++] = t3;\n\t                }\n\t            }\n\t        }\n\t        return n;\n\t    }\n\t\n\t    /**\n\t     * 计算三次贝塞尔方程极限值的位置\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {Array.<number>} extrema\n\t     * @return {number} 有效数目\n\t     */\n\t    function cubicExtrema(p0, p1, p2, p3, extrema) {\n\t        var b = 6 * p2 - 12 * p1 + 6 * p0;\n\t        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n\t        var c = 3 * p1 - 3 * p0;\n\t\n\t        var n = 0;\n\t        if (isAroundZero(a)) {\n\t            if (isNotAroundZero(b)) {\n\t                var t1 = -c / b;\n\t                if (t1 >= 0 && t1 <=1) {\n\t                    extrema[n++] = t1;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            var disc = b * b - 4 * a * c;\n\t            if (isAroundZero(disc)) {\n\t                extrema[0] = -b / (2 * a);\n\t            }\n\t            else if (disc > 0) {\n\t                var discSqrt = mathSqrt(disc);\n\t                var t1 = (-b + discSqrt) / (2 * a);\n\t                var t2 = (-b - discSqrt) / (2 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    extrema[n++] = t1;\n\t                }\n\t                if (t2 >= 0 && t2 <= 1) {\n\t                    extrema[n++] = t2;\n\t                }\n\t            }\n\t        }\n\t        return n;\n\t    }\n\t\n\t    /**\n\t     * 细分三次贝塞尔曲线\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} p3\n\t     * @param  {number} t\n\t     * @param  {Array.<number>} out\n\t     */\n\t    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n\t        var p01 = (p1 - p0) * t + p0;\n\t        var p12 = (p2 - p1) * t + p1;\n\t        var p23 = (p3 - p2) * t + p2;\n\t\n\t        var p012 = (p12 - p01) * t + p01;\n\t        var p123 = (p23 - p12) * t + p12;\n\t\n\t        var p0123 = (p123 - p012) * t + p012;\n\t        // Seg0\n\t        out[0] = p0;\n\t        out[1] = p01;\n\t        out[2] = p012;\n\t        out[3] = p0123;\n\t        // Seg1\n\t        out[4] = p0123;\n\t        out[5] = p123;\n\t        out[6] = p23;\n\t        out[7] = p3;\n\t    }\n\t\n\t    /**\n\t     * 投射点到三次贝塞尔曲线上，返回投射距离。\n\t     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {number} x2\n\t     * @param {number} y2\n\t     * @param {number} x3\n\t     * @param {number} y3\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {Array.<number>} [out] 投射点\n\t     * @return {number}\n\t     */\n\t    function cubicProjectPoint(\n\t        x0, y0, x1, y1, x2, y2, x3, y3,\n\t        x, y, out\n\t    ) {\n\t        // http://pomax.github.io/bezierinfo/#projections\n\t        var t;\n\t        var interval = 0.005;\n\t        var d = Infinity;\n\t        var prev;\n\t        var next;\n\t        var d1;\n\t        var d2;\n\t\n\t        _v0[0] = x;\n\t        _v0[1] = y;\n\t\n\t        // 先粗略估计一下可能的最小距离的 t 值\n\t        // PENDING\n\t        for (var _t = 0; _t < 1; _t += 0.05) {\n\t            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n\t            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n\t            d1 = v2DistSquare(_v0, _v1);\n\t            if (d1 < d) {\n\t                t = _t;\n\t                d = d1;\n\t            }\n\t        }\n\t        d = Infinity;\n\t\n\t        // At most 32 iteration\n\t        for (var i = 0; i < 32; i++) {\n\t            if (interval < EPSILON) {\n\t                break;\n\t            }\n\t            prev = t - interval;\n\t            next = t + interval;\n\t            // t - interval\n\t            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n\t            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\t\n\t            d1 = v2DistSquare(_v1, _v0);\n\t\n\t            if (prev >= 0 && d1 < d) {\n\t                t = prev;\n\t                d = d1;\n\t            }\n\t            else {\n\t                // t + interval\n\t                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n\t                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n\t                d2 = v2DistSquare(_v2, _v0);\n\t\n\t                if (next <= 1 && d2 < d) {\n\t                    t = next;\n\t                    d = d2;\n\t                }\n\t                else {\n\t                    interval *= 0.5;\n\t                }\n\t            }\n\t        }\n\t        // t\n\t        if (out) {\n\t            out[0] = cubicAt(x0, x1, x2, x3, t);\n\t            out[1] = cubicAt(y0, y1, y2, y3, t);\n\t        }\n\t        // console.log(interval, i);\n\t        return mathSqrt(d);\n\t    }\n\t\n\t    /**\n\t     * 计算二次方贝塞尔值\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} t\n\t     * @return {number}\n\t     */\n\t    function quadraticAt(p0, p1, p2, t) {\n\t        var onet = 1 - t;\n\t        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n\t    }\n\t\n\t    /**\n\t     * 计算二次方贝塞尔导数值\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} t\n\t     * @return {number}\n\t     */\n\t    function quadraticDerivativeAt(p0, p1, p2, t) {\n\t        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n\t    }\n\t\n\t    /**\n\t     * 计算二次方贝塞尔方程根\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} t\n\t     * @param  {Array.<number>} roots\n\t     * @return {number} 有效根数目\n\t     */\n\t    function quadraticRootAt(p0, p1, p2, val, roots) {\n\t        var a = p0 - 2 * p1 + p2;\n\t        var b = 2 * (p1 - p0);\n\t        var c = p0 - val;\n\t\n\t        var n = 0;\n\t        if (isAroundZero(a)) {\n\t            if (isNotAroundZero(b)) {\n\t                var t1 = -c / b;\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            var disc = b * b - 4 * a * c;\n\t            if (isAroundZero(disc)) {\n\t                var t1 = -b / (2 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t            }\n\t            else if (disc > 0) {\n\t                var discSqrt = mathSqrt(disc);\n\t                var t1 = (-b + discSqrt) / (2 * a);\n\t                var t2 = (-b - discSqrt) / (2 * a);\n\t                if (t1 >= 0 && t1 <= 1) {\n\t                    roots[n++] = t1;\n\t                }\n\t                if (t2 >= 0 && t2 <= 1) {\n\t                    roots[n++] = t2;\n\t                }\n\t            }\n\t        }\n\t        return n;\n\t    }\n\t\n\t    /**\n\t     * 计算二次贝塞尔方程极限值\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @return {number}\n\t     */\n\t    function quadraticExtremum(p0, p1, p2) {\n\t        var divider = p0 + p2 - 2 * p1;\n\t        if (divider === 0) {\n\t            // p1 is center of p0 and p2\n\t            return 0.5;\n\t        }\n\t        else {\n\t            return (p0 - p1) / divider;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 细分二次贝塞尔曲线\n\t     * @memberOf module:zrender/core/curve\n\t     * @param  {number} p0\n\t     * @param  {number} p1\n\t     * @param  {number} p2\n\t     * @param  {number} t\n\t     * @param  {Array.<number>} out\n\t     */\n\t    function quadraticSubdivide(p0, p1, p2, t, out) {\n\t        var p01 = (p1 - p0) * t + p0;\n\t        var p12 = (p2 - p1) * t + p1;\n\t        var p012 = (p12 - p01) * t + p01;\n\t\n\t        // Seg0\n\t        out[0] = p0;\n\t        out[1] = p01;\n\t        out[2] = p012;\n\t\n\t        // Seg1\n\t        out[3] = p012;\n\t        out[4] = p12;\n\t        out[5] = p2;\n\t    }\n\t\n\t    /**\n\t     * 投射点到二次贝塞尔曲线上，返回投射距离。\n\t     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {number} x2\n\t     * @param {number} y2\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {Array.<number>} out 投射点\n\t     * @return {number}\n\t     */\n\t    function quadraticProjectPoint(\n\t        x0, y0, x1, y1, x2, y2,\n\t        x, y, out\n\t    ) {\n\t        // http://pomax.github.io/bezierinfo/#projections\n\t        var t;\n\t        var interval = 0.005;\n\t        var d = Infinity;\n\t\n\t        _v0[0] = x;\n\t        _v0[1] = y;\n\t\n\t        // 先粗略估计一下可能的最小距离的 t 值\n\t        // PENDING\n\t        for (var _t = 0; _t < 1; _t += 0.05) {\n\t            _v1[0] = quadraticAt(x0, x1, x2, _t);\n\t            _v1[1] = quadraticAt(y0, y1, y2, _t);\n\t            var d1 = v2DistSquare(_v0, _v1);\n\t            if (d1 < d) {\n\t                t = _t;\n\t                d = d1;\n\t            }\n\t        }\n\t        d = Infinity;\n\t\n\t        // At most 32 iteration\n\t        for (var i = 0; i < 32; i++) {\n\t            if (interval < EPSILON) {\n\t                break;\n\t            }\n\t            var prev = t - interval;\n\t            var next = t + interval;\n\t            // t - interval\n\t            _v1[0] = quadraticAt(x0, x1, x2, prev);\n\t            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\t\n\t            var d1 = v2DistSquare(_v1, _v0);\n\t\n\t            if (prev >= 0 && d1 < d) {\n\t                t = prev;\n\t                d = d1;\n\t            }\n\t            else {\n\t                // t + interval\n\t                _v2[0] = quadraticAt(x0, x1, x2, next);\n\t                _v2[1] = quadraticAt(y0, y1, y2, next);\n\t                var d2 = v2DistSquare(_v2, _v0);\n\t                if (next <= 1 && d2 < d) {\n\t                    t = next;\n\t                    d = d2;\n\t                }\n\t                else {\n\t                    interval *= 0.5;\n\t                }\n\t            }\n\t        }\n\t        // t\n\t        if (out) {\n\t            out[0] = quadraticAt(x0, x1, x2, t);\n\t            out[1] = quadraticAt(y0, y1, y2, t);\n\t        }\n\t        // console.log(interval, i);\n\t        return mathSqrt(d);\n\t    }\n\t\n\t    module.exports = {\n\t\n\t        cubicAt: cubicAt,\n\t\n\t        cubicDerivativeAt: cubicDerivativeAt,\n\t\n\t        cubicRootAt: cubicRootAt,\n\t\n\t        cubicExtrema: cubicExtrema,\n\t\n\t        cubicSubdivide: cubicSubdivide,\n\t\n\t        cubicProjectPoint: cubicProjectPoint,\n\t\n\t        quadraticAt: quadraticAt,\n\t\n\t        quadraticDerivativeAt: quadraticDerivativeAt,\n\t\n\t        quadraticRootAt: quadraticRootAt,\n\t\n\t        quadraticExtremum: quadraticExtremum,\n\t\n\t        quadraticSubdivide: quadraticSubdivide,\n\t\n\t        quadraticProjectPoint: quadraticProjectPoint\n\t    };\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author Yi Shen(https://github.com/pissang)\n\t */\n\t\n\t\n\t    var vec2 = __webpack_require__(15);\n\t    var curve = __webpack_require__(27);\n\t\n\t    var bbox = {};\n\t    var mathMin = Math.min;\n\t    var mathMax = Math.max;\n\t    var mathSin = Math.sin;\n\t    var mathCos = Math.cos;\n\t\n\t    var start = vec2.create();\n\t    var end = vec2.create();\n\t    var extremity = vec2.create();\n\t\n\t    var PI2 = Math.PI * 2;\n\t    /**\n\t     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n\t     * @module zrender/core/bbox\n\t     * @param {Array<Object>} points 顶点数组\n\t     * @param {number} min\n\t     * @param {number} max\n\t     */\n\t    bbox.fromPoints = function(points, min, max) {\n\t        if (points.length === 0) {\n\t            return;\n\t        }\n\t        var p = points[0];\n\t        var left = p[0];\n\t        var right = p[0];\n\t        var top = p[1];\n\t        var bottom = p[1];\n\t        var i;\n\t\n\t        for (i = 1; i < points.length; i++) {\n\t            p = points[i];\n\t            left = mathMin(left, p[0]);\n\t            right = mathMax(right, p[0]);\n\t            top = mathMin(top, p[1]);\n\t            bottom = mathMax(bottom, p[1]);\n\t        }\n\t\n\t        min[0] = left;\n\t        min[1] = top;\n\t        max[0] = right;\n\t        max[1] = bottom;\n\t    };\n\t\n\t    /**\n\t     * @memberOf module:zrender/core/bbox\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {Array.<number>} min\n\t     * @param {Array.<number>} max\n\t     */\n\t    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n\t        min[0] = mathMin(x0, x1);\n\t        min[1] = mathMin(y0, y1);\n\t        max[0] = mathMax(x0, x1);\n\t        max[1] = mathMax(y0, y1);\n\t    };\n\t\n\t    /**\n\t     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n\t     * @memberOf module:zrender/core/bbox\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {number} x2\n\t     * @param {number} y2\n\t     * @param {number} x3\n\t     * @param {number} y3\n\t     * @param {Array.<number>} min\n\t     * @param {Array.<number>} max\n\t     */\n\t    bbox.fromCubic = function(\n\t        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n\t    ) {\n\t        var xDim = [];\n\t        var yDim = [];\n\t        var cubicExtrema = curve.cubicExtrema;\n\t        var cubicAt = curve.cubicAt;\n\t        var left, right, top, bottom;\n\t        var i;\n\t        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n\t\n\t        for (i = 0; i < n; i++) {\n\t            xDim[i] = cubicAt(x0, x1, x2, x3, xDim[i]);\n\t        }\n\t        n = cubicExtrema(y0, y1, y2, y3, yDim);\n\t        for (i = 0; i < n; i++) {\n\t            yDim[i] = cubicAt(y0, y1, y2, y3, yDim[i]);\n\t        }\n\t\n\t        xDim.push(x0, x3);\n\t        yDim.push(y0, y3);\n\t\n\t        left = mathMin.apply(null, xDim);\n\t        right = mathMax.apply(null, xDim);\n\t        top = mathMin.apply(null, yDim);\n\t        bottom = mathMax.apply(null, yDim);\n\t\n\t        min[0] = left;\n\t        min[1] = top;\n\t        max[0] = right;\n\t        max[1] = bottom;\n\t    };\n\t\n\t    /**\n\t     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n\t     * @memberOf module:zrender/core/bbox\n\t     * @param {number} x0\n\t     * @param {number} y0\n\t     * @param {number} x1\n\t     * @param {number} y1\n\t     * @param {number} x2\n\t     * @param {number} y2\n\t     * @param {Array.<number>} min\n\t     * @param {Array.<number>} max\n\t     */\n\t    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n\t        var quadraticExtremum = curve.quadraticExtremum;\n\t        var quadraticAt = curve.quadraticAt;\n\t        // Find extremities, where derivative in x dim or y dim is zero\n\t        var tx =\n\t            mathMax(\n\t                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n\t            );\n\t        var ty =\n\t            mathMax(\n\t                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n\t            );\n\t\n\t        var x = quadraticAt(x0, x1, x2, tx);\n\t        var y = quadraticAt(y0, y1, y2, ty);\n\t\n\t        min[0] = mathMin(x0, x2, x);\n\t        min[1] = mathMin(y0, y2, y);\n\t        max[0] = mathMax(x0, x2, x);\n\t        max[1] = mathMax(y0, y2, y);\n\t    };\n\t\n\t    /**\n\t     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n\t     * @method\n\t     * @memberOf module:zrender/core/bbox\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {number} rx\n\t     * @param {number} ry\n\t     * @param {number} startAngle\n\t     * @param {number} endAngle\n\t     * @param {number} anticlockwise\n\t     * @param {Array.<number>} min\n\t     * @param {Array.<number>} max\n\t     */\n\t    bbox.fromArc = function (\n\t        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n\t    ) {\n\t        var vec2Min = vec2.min;\n\t        var vec2Max = vec2.max;\n\t\n\t        var diff = Math.abs(startAngle - endAngle);\n\t\n\t\n\t        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n\t            // Is a circle\n\t            min[0] = x - rx;\n\t            min[1] = y - ry;\n\t            max[0] = x + rx;\n\t            max[1] = y + ry;\n\t            return;\n\t        }\n\t\n\t        start[0] = mathCos(startAngle) * rx + x;\n\t        start[1] = mathSin(startAngle) * ry + y;\n\t\n\t        end[0] = mathCos(endAngle) * rx + x;\n\t        end[1] = mathSin(endAngle) * ry + y;\n\t\n\t        vec2Min(min, start, end);\n\t        vec2Max(max, start, end);\n\t\n\t        // Thresh to [0, Math.PI * 2]\n\t        startAngle = startAngle % (PI2);\n\t        if (startAngle < 0) {\n\t            startAngle = startAngle + PI2;\n\t        }\n\t        endAngle = endAngle % (PI2);\n\t        if (endAngle < 0) {\n\t            endAngle = endAngle + PI2;\n\t        }\n\t\n\t        if (startAngle > endAngle && !anticlockwise) {\n\t            endAngle += PI2;\n\t        }\n\t        else if (startAngle < endAngle && anticlockwise) {\n\t            startAngle += PI2;\n\t        }\n\t        if (anticlockwise) {\n\t            var tmp = endAngle;\n\t            endAngle = startAngle;\n\t            startAngle = tmp;\n\t        }\n\t\n\t        // var number = 0;\n\t        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\t        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n\t            if (angle > startAngle) {\n\t                extremity[0] = mathCos(angle) * rx + x;\n\t                extremity[1] = mathSin(angle) * ry + y;\n\t\n\t                vec2Min(min, extremity, min);\n\t                vec2Max(max, extremity, max);\n\t            }\n\t        }\n\t    };\n\t\n\t    module.exports = bbox;\n\t\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var CMD = __webpack_require__(26).CMD;\n\t    var line = __webpack_require__(30);\n\t    var cubic = __webpack_require__(31);\n\t    var quadratic = __webpack_require__(32);\n\t    var arc = __webpack_require__(33);\n\t    var normalizeRadian = __webpack_require__(34).normalizeRadian;\n\t    var curve = __webpack_require__(27);\n\t\n\t    var windingLine = __webpack_require__(35);\n\t\n\t    var containStroke = line.containStroke;\n\t\n\t    var PI2 = Math.PI * 2;\n\t\n\t    var EPSILON = 1e-4;\n\t\n\t    function isAroundEqual(a, b) {\n\t        return Math.abs(a - b) < EPSILON;\n\t    }\n\t\n\t    // 临时数组\n\t    var roots = [-1, -1, -1];\n\t    var extrema = [-1, -1];\n\t\n\t    function swapExtrema() {\n\t        var tmp = extrema[0];\n\t        extrema[0] = extrema[1];\n\t        extrema[1] = tmp;\n\t    }\n\t\n\t    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n\t        // Quick reject\n\t        if (\n\t            (y > y0 && y > y1 && y > y2 && y > y3)\n\t            || (y < y0 && y < y1 && y < y2 && y < y3)\n\t        ) {\n\t            return 0;\n\t        }\n\t        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\t        if (nRoots === 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            var w = 0;\n\t            var nExtrema = -1;\n\t            var y0_, y1_;\n\t            for (var i = 0; i < nRoots; i++) {\n\t                var t = roots[i];\n\t                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\t                if (x_ < x) { // Quick reject\n\t                    continue;\n\t                }\n\t                if (nExtrema < 0) {\n\t                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\t                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n\t                        swapExtrema();\n\t                    }\n\t                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\t                    if (nExtrema > 1) {\n\t                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n\t                    }\n\t                }\n\t                if (nExtrema == 2) {\n\t                    // 分成三段单调函数\n\t                    if (t < extrema[0]) {\n\t                        w += y0_ < y0 ? 1 : -1;\n\t                    }\n\t                    else if (t < extrema[1]) {\n\t                        w += y1_ < y0_ ? 1 : -1;\n\t                    }\n\t                    else {\n\t                        w += y3 < y1_ ? 1 : -1;\n\t                    }\n\t                }\n\t                else {\n\t                    // 分成两段单调函数\n\t                    if (t < extrema[0]) {\n\t                        w += y0_ < y0 ? 1 : -1;\n\t                    }\n\t                    else {\n\t                        w += y3 < y0_ ? 1 : -1;\n\t                    }\n\t                }\n\t            }\n\t            return w;\n\t        }\n\t    }\n\t\n\t    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n\t        // Quick reject\n\t        if (\n\t            (y > y0 && y > y1 && y > y2)\n\t            || (y < y0 && y < y1 && y < y2)\n\t        ) {\n\t            return 0;\n\t        }\n\t        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\t        if (nRoots === 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            var t = curve.quadraticExtremum(y0, y1, y2);\n\t            if (t >=0 && t <= 1) {\n\t                var w = 0;\n\t                var y_ = curve.quadraticAt(y0, y1, y2, t);\n\t                for (var i = 0; i < nRoots; i++) {\n\t                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\t                    if (x_ > x) {\n\t                        continue;\n\t                    }\n\t                    if (roots[i] < t) {\n\t                        w += y_ < y0 ? 1 : -1;\n\t                    }\n\t                    else {\n\t                        w += y2 < y_ ? 1 : -1;\n\t                    }\n\t                }\n\t                return w;\n\t            }\n\t            else {\n\t                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\t                if (x_ > x) {\n\t                    return 0;\n\t                }\n\t                return y2 < y0 ? 1 : -1;\n\t            }\n\t        }\n\t    }\n\t\n\t    // TODO\n\t    // Arc 旋转\n\t    function windingArc(\n\t        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n\t    ) {\n\t        y -= cy;\n\t        if (y > r || y < -r) {\n\t            return 0;\n\t        }\n\t        var tmp = Math.sqrt(r * r - y * y);\n\t        roots[0] = -tmp;\n\t        roots[1] = tmp;\n\t\n\t        var diff = Math.abs(startAngle - endAngle);\n\t        if (diff < 1e-4) {\n\t            return 0;\n\t        }\n\t        if (diff % PI2 < 1e-4) {\n\t            // Is a circle\n\t            startAngle = 0;\n\t            endAngle = PI2;\n\t            var dir = anticlockwise ? 1 : -1;\n\t            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n\t                return dir;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t\n\t        if (anticlockwise) {\n\t            var tmp = startAngle;\n\t            startAngle = normalizeRadian(endAngle);\n\t            endAngle = normalizeRadian(tmp);\n\t        }\n\t        else {\n\t            startAngle = normalizeRadian(startAngle);\n\t            endAngle = normalizeRadian(endAngle);\n\t        }\n\t        if (startAngle > endAngle) {\n\t            endAngle += PI2;\n\t        }\n\t\n\t        var w = 0;\n\t        for (var i = 0; i < 2; i++) {\n\t            var x_ = roots[i];\n\t            if (x_ + cx > x) {\n\t                var angle = Math.atan2(y, x_);\n\t                var dir = anticlockwise ? 1 : -1;\n\t                if (angle < 0) {\n\t                    angle = PI2 + angle;\n\t                }\n\t                if (\n\t                    (angle >= startAngle && angle <= endAngle)\n\t                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n\t                ) {\n\t                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n\t                        dir = -dir;\n\t                    }\n\t                    w += dir;\n\t                }\n\t            }\n\t        }\n\t        return w;\n\t    }\n\t\n\t    function containPath(data, lineWidth, isStroke, x, y) {\n\t        var w = 0;\n\t        var xi = 0;\n\t        var yi = 0;\n\t        var x0 = 0;\n\t        var y0 = 0;\n\t\n\t        for (var i = 0; i < data.length;) {\n\t            var cmd = data[i++];\n\t            // Begin a new subpath\n\t            if (cmd === CMD.M && i > 1) {\n\t                // Close previous subpath\n\t                if (!isStroke) {\n\t                    w += windingLine(xi, yi, x0, y0, x, y);\n\t                }\n\t                // 如果被任何一个 subpath 包含\n\t                if (w !== 0) {\n\t                    return true;\n\t                }\n\t            }\n\t\n\t            if (i == 1) {\n\t                // 如果第一个命令是 L, C, Q\n\t                // 则 previous point 同绘制命令的第一个 point\n\t                //\n\t                // 第一个命令为 Arc 的情况下会在后面特殊处理\n\t                xi = data[i];\n\t                yi = data[i + 1];\n\t\n\t                x0 = xi;\n\t                y0 = yi;\n\t            }\n\t\n\t            switch (cmd) {\n\t                case CMD.M:\n\t                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n\t                    // 在 closePath 的时候使用\n\t                    x0 = data[i++];\n\t                    y0 = data[i++];\n\t                    xi = x0;\n\t                    yi = y0;\n\t                    break;\n\t                case CMD.L:\n\t                    if (isStroke) {\n\t                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n\t                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n\t                    }\n\t                    xi = data[i++];\n\t                    yi = data[i++];\n\t                    break;\n\t                case CMD.C:\n\t                    if (isStroke) {\n\t                        if (cubic.containStroke(xi, yi,\n\t                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n\t                            lineWidth, x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        w += windingCubic(\n\t                            xi, yi,\n\t                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n\t                            x, y\n\t                        ) || 0;\n\t                    }\n\t                    xi = data[i++];\n\t                    yi = data[i++];\n\t                    break;\n\t                case CMD.Q:\n\t                    if (isStroke) {\n\t                        if (quadratic.containStroke(xi, yi,\n\t                            data[i++], data[i++], data[i], data[i + 1],\n\t                            lineWidth, x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        w += windingQuadratic(\n\t                            xi, yi,\n\t                            data[i++], data[i++], data[i], data[i + 1],\n\t                            x, y\n\t                        ) || 0;\n\t                    }\n\t                    xi = data[i++];\n\t                    yi = data[i++];\n\t                    break;\n\t                case CMD.A:\n\t                    // TODO Arc 判断的开销比较大\n\t                    var cx = data[i++];\n\t                    var cy = data[i++];\n\t                    var rx = data[i++];\n\t                    var ry = data[i++];\n\t                    var theta = data[i++];\n\t                    var dTheta = data[i++];\n\t                    // TODO Arc 旋转\n\t                    var psi = data[i++];\n\t                    var anticlockwise = 1 - data[i++];\n\t                    var x1 = Math.cos(theta) * rx + cx;\n\t                    var y1 = Math.sin(theta) * ry + cy;\n\t                    // 不是直接使用 arc 命令\n\t                    if (i > 1) {\n\t                        w += windingLine(xi, yi, x1, y1, x, y);\n\t                    }\n\t                    else {\n\t                        // 第一个命令起点还未定义\n\t                        x0 = x1;\n\t                        y0 = y1;\n\t                    }\n\t                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\t                    var _x = (x - cx) * ry / rx + cx;\n\t                    if (isStroke) {\n\t                        if (arc.containStroke(\n\t                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n\t                            lineWidth, _x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        w += windingArc(\n\t                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n\t                            _x, y\n\t                        );\n\t                    }\n\t                    xi = Math.cos(theta + dTheta) * rx + cx;\n\t                    yi = Math.sin(theta + dTheta) * ry + cy;\n\t                    break;\n\t                case CMD.R:\n\t                    x0 = xi = data[i++];\n\t                    y0 = yi = data[i++];\n\t                    var width = data[i++];\n\t                    var height = data[i++];\n\t                    var x1 = x0 + width;\n\t                    var y1 = y0 + height;\n\t                    if (isStroke) {\n\t                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n\t                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n\t                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n\t                          || containStroke(x0, y1, x1, y1, lineWidth, x, y)\n\t                        ) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        // FIXME Clockwise ?\n\t                        w += windingLine(x1, y0, x1, y1, x, y);\n\t                        w += windingLine(x0, y1, x0, y0, x, y);\n\t                    }\n\t                    break;\n\t                case CMD.Z:\n\t                    if (isStroke) {\n\t                        if (containStroke(\n\t                            xi, yi, x0, y0, lineWidth, x, y\n\t                        )) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    else {\n\t                        // Close a subpath\n\t                        w += windingLine(xi, yi, x0, y0, x, y);\n\t                        // 如果被任何一个 subpath 包含\n\t                        if (w !== 0) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    xi = x0;\n\t                    yi = y0;\n\t                    break;\n\t            }\n\t        }\n\t        if (!isStroke && !isAroundEqual(yi, y0)) {\n\t            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n\t        }\n\t        return w !== 0;\n\t    }\n\t\n\t    module.exports = {\n\t        contain: function (pathData, x, y) {\n\t            return containPath(pathData, 0, false, x, y);\n\t        },\n\t\n\t        containStroke: function (pathData, lineWidth, x, y) {\n\t            return containPath(pathData, lineWidth, true, x, y);\n\t        }\n\t    };\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t\n\t    module.exports = {\n\t        /**\n\t         * 线段包含判断\n\t         * @param  {number}  x0\n\t         * @param  {number}  y0\n\t         * @param  {number}  x1\n\t         * @param  {number}  y1\n\t         * @param  {number}  lineWidth\n\t         * @param  {number}  x\n\t         * @param  {number}  y\n\t         * @return {boolean}\n\t         */\n\t        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n\t            if (lineWidth === 0) {\n\t                return false;\n\t            }\n\t            var _l = lineWidth;\n\t            var _a = 0;\n\t            var _b = x0;\n\t            // Quick reject\n\t            if (\n\t                (y > y0 + _l && y > y1 + _l)\n\t                || (y < y0 - _l && y < y1 - _l)\n\t                || (x > x0 + _l && x > x1 + _l)\n\t                || (x < x0 - _l && x < x1 - _l)\n\t            ) {\n\t                return false;\n\t            }\n\t\n\t            if (x0 !== x1) {\n\t                _a = (y0 - y1) / (x0 - x1);\n\t                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n\t            }\n\t            else {\n\t                return Math.abs(x - x0) <= _l / 2;\n\t            }\n\t            var tmp = _a * x - y + _b;\n\t            var _s = tmp * tmp / (_a * _a + 1);\n\t            return _s <= _l / 2 * _l / 2;\n\t        }\n\t    };\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var curve = __webpack_require__(27);\n\t\n\t    module.exports = {\n\t        /**\n\t         * 三次贝塞尔曲线描边包含判断\n\t         * @param  {number}  x0\n\t         * @param  {number}  y0\n\t         * @param  {number}  x1\n\t         * @param  {number}  y1\n\t         * @param  {number}  x2\n\t         * @param  {number}  y2\n\t         * @param  {number}  x3\n\t         * @param  {number}  y3\n\t         * @param  {number}  lineWidth\n\t         * @param  {number}  x\n\t         * @param  {number}  y\n\t         * @return {boolean}\n\t         */\n\t        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n\t            if (lineWidth === 0) {\n\t                return false;\n\t            }\n\t            var _l = lineWidth;\n\t            // Quick reject\n\t            if (\n\t                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n\t                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n\t                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n\t                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n\t            ) {\n\t                return false;\n\t            }\n\t            var d = curve.cubicProjectPoint(\n\t                x0, y0, x1, y1, x2, y2, x3, y3,\n\t                x, y, null\n\t            );\n\t            return d <= _l / 2;\n\t        }\n\t    };\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var curve = __webpack_require__(27);\n\t\n\t    module.exports = {\n\t        /**\n\t         * 二次贝塞尔曲线描边包含判断\n\t         * @param  {number}  x0\n\t         * @param  {number}  y0\n\t         * @param  {number}  x1\n\t         * @param  {number}  y1\n\t         * @param  {number}  x2\n\t         * @param  {number}  y2\n\t         * @param  {number}  lineWidth\n\t         * @param  {number}  x\n\t         * @param  {number}  y\n\t         * @return {boolean}\n\t         */\n\t        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n\t            if (lineWidth === 0) {\n\t                return false;\n\t            }\n\t            var _l = lineWidth;\n\t            // Quick reject\n\t            if (\n\t                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n\t                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n\t                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n\t                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n\t            ) {\n\t                return false;\n\t            }\n\t            var d = curve.quadraticProjectPoint(\n\t                x0, y0, x1, y1, x2, y2,\n\t                x, y, null\n\t            );\n\t            return d <= _l / 2;\n\t        }\n\t    };\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var normalizeRadian = __webpack_require__(34).normalizeRadian;\n\t    var PI2 = Math.PI * 2;\n\t\n\t    module.exports = {\n\t        /**\n\t         * 圆弧描边包含判断\n\t         * @param  {number}  cx\n\t         * @param  {number}  cy\n\t         * @param  {number}  r\n\t         * @param  {number}  startAngle\n\t         * @param  {number}  endAngle\n\t         * @param  {boolean}  anticlockwise\n\t         * @param  {number} lineWidth\n\t         * @param  {number}  x\n\t         * @param  {number}  y\n\t         * @return {Boolean}\n\t         */\n\t        containStroke: function (\n\t            cx, cy, r, startAngle, endAngle, anticlockwise,\n\t            lineWidth, x, y\n\t        ) {\n\t\n\t            if (lineWidth === 0) {\n\t                return false;\n\t            }\n\t            var _l = lineWidth;\n\t\n\t            x -= cx;\n\t            y -= cy;\n\t            var d = Math.sqrt(x * x + y * y);\n\t\n\t            if ((d - _l > r) || (d + _l < r)) {\n\t                return false;\n\t            }\n\t            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n\t                // Is a circle\n\t                return true;\n\t            }\n\t            if (anticlockwise) {\n\t                var tmp = startAngle;\n\t                startAngle = normalizeRadian(endAngle);\n\t                endAngle = normalizeRadian(tmp);\n\t            } else {\n\t                startAngle = normalizeRadian(startAngle);\n\t                endAngle = normalizeRadian(endAngle);\n\t            }\n\t            if (startAngle > endAngle) {\n\t                endAngle += PI2;\n\t            }\n\t\n\t            var angle = Math.atan2(y, x);\n\t            if (angle < 0) {\n\t                angle += PI2;\n\t            }\n\t            return (angle >= startAngle && angle <= endAngle)\n\t                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n\t        }\n\t    };\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    var PI2 = Math.PI * 2;\n\t    module.exports = {\n\t        normalizeRadian: function(angle) {\n\t            angle %= PI2;\n\t            if (angle < 0) {\n\t                angle += PI2;\n\t            }\n\t            return angle;\n\t        }\n\t    };\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t\n\t    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n\t        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n\t            return 0;\n\t        }\n\t        if (y1 === y0) {\n\t            return 0;\n\t        }\n\t        var dir = y1 < y0 ? 1 : -1;\n\t        var t = (y - y0) / (y1 - y0);\n\t        var x_ = t * (x1 - x0) + x0;\n\t\n\t        return x_ > x ? dir : 0;\n\t    };\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var CMD = __webpack_require__(26).CMD;\n\t    var vec2 = __webpack_require__(15);\n\t    var v2ApplyTransform = vec2.applyTransform;\n\t\n\t    var points = [[], [], []];\n\t    var mathSqrt = Math.sqrt;\n\t    var mathAtan2 = Math.atan2;\n\t    function transformPath(path, m) {\n\t        var data = path.data;\n\t        var cmd;\n\t        var nPoint;\n\t        var i;\n\t        var j;\n\t        var k;\n\t        var p;\n\t\n\t        var M = CMD.M;\n\t        var C = CMD.C;\n\t        var L = CMD.L;\n\t        var R = CMD.R;\n\t        var A = CMD.A;\n\t        var Q = CMD.Q;\n\t\n\t        for (i = 0, j = 0; i < data.length;) {\n\t            cmd = data[i++];\n\t            j = i;\n\t            nPoint = 0;\n\t\n\t            switch (cmd) {\n\t                case M:\n\t                    nPoint = 1;\n\t                    break;\n\t                case L:\n\t                    nPoint = 1;\n\t                    break;\n\t                case C:\n\t                    nPoint = 3;\n\t                    break;\n\t                case Q:\n\t                    nPoint = 2;\n\t                    break;\n\t                case A:\n\t                    var x = m[4];\n\t                    var y = m[5];\n\t                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n\t                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n\t                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n\t                    // cx\n\t                    data[i++] += x;\n\t                    // cy\n\t                    data[i++] += y;\n\t                    // Scale rx and ry\n\t                    // FIXME Assume psi is 0 here\n\t                    data[i++] *= sx;\n\t                    data[i++] *= sy;\n\t\n\t                    // Start angle\n\t                    data[i++] += angle;\n\t                    // end angle\n\t                    data[i++] += angle;\n\t                    // FIXME psi\n\t                    i += 2;\n\t                    j = i;\n\t                    break;\n\t                case R:\n\t                    // x0, y0\n\t                    p[0] = data[i++];\n\t                    p[1] = data[i++];\n\t                    v2ApplyTransform(p, p, m);\n\t                    data[j++] = p[0];\n\t                    data[j++] = p[1];\n\t                    // x1, y1\n\t                    p[0] += data[i++];\n\t                    p[1] += data[i++];\n\t                    v2ApplyTransform(p, p, m);\n\t                    data[j++] = p[0];\n\t                    data[j++] = p[1];\n\t            }\n\t\n\t            for (k = 0; k < nPoint; k++) {\n\t                var p = points[k];\n\t                p[0] = data[i++];\n\t                p[1] = data[i++];\n\t\n\t                v2ApplyTransform(p, p, m);\n\t                // Write back\n\t                data[j++] = p[0];\n\t                data[j++] = p[1];\n\t            }\n\t        }\n\t    }\n\t\n\t    module.exports = transformPath;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n\t * @module zrender/graphic/Group\n\t * @example\n\t *     var Group = require('zrender/lib/container/Group');\n\t *     var Circle = require('zrender/lib/graphic/shape/Circle');\n\t *     var g = new Group();\n\t *     g.position[0] = 100;\n\t *     g.position[1] = 100;\n\t *     g.add(new Circle({\n\t *         style: {\n\t *             x: 100,\n\t *             y: 100,\n\t *             r: 20,\n\t *         }\n\t *     }));\n\t *     zr.add(g);\n\t */\n\t\n\t\n\t    var zrUtil = __webpack_require__(4);\n\t    var Element = __webpack_require__(10);\n\t    var BoundingRect = __webpack_require__(25);\n\t\n\t    /**\n\t     * @alias module:zrender/graphic/Group\n\t     * @constructor\n\t     * @extends module:zrender/mixin/Transformable\n\t     * @extends module:zrender/mixin/Eventful\n\t     */\n\t    var Group = function (opts) {\n\t\n\t        opts = opts || {};\n\t\n\t        Element.call(this, opts);\n\t\n\t        for (var key in opts) {\n\t            this[key] = opts[key];\n\t        }\n\t\n\t        this._children = [];\n\t\n\t        this.__storage = null;\n\t\n\t        this.__dirty = true;\n\t    };\n\t\n\t    Group.prototype = {\n\t\n\t        constructor: Group,\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        type: 'group',\n\t\n\t        /**\n\t         * @return {Array.<module:zrender/Element>}\n\t         */\n\t        children: function () {\n\t            return this._children.slice();\n\t        },\n\t\n\t        /**\n\t         * 获取指定 index 的儿子节点\n\t         * @param  {number} idx\n\t         * @return {module:zrender/Element}\n\t         */\n\t        childAt: function (idx) {\n\t            return this._children[idx];\n\t        },\n\t\n\t        /**\n\t         * 获取指定名字的儿子节点\n\t         * @param  {string} name\n\t         * @return {module:zrender/Element}\n\t         */\n\t        childOfName: function (name) {\n\t            var children = this._children;\n\t            for (var i = 0; i < children.length; i++) {\n\t                if (children[i].name === name) {\n\t                    return children[i];\n\t                }\n\t             }\n\t        },\n\t\n\t        /**\n\t         * @return {number}\n\t         */\n\t        childCount: function () {\n\t            return this._children.length;\n\t        },\n\t\n\t        /**\n\t         * 添加子节点到最后\n\t         * @param {module:zrender/Element} child\n\t         */\n\t        add: function (child) {\n\t            if (child && child !== this && child.parent !== this) {\n\t\n\t                this._children.push(child);\n\t\n\t                this._doAdd(child);\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 添加子节点在 nextSibling 之前\n\t         * @param {module:zrender/Element} child\n\t         * @param {module:zrender/Element} nextSibling\n\t         */\n\t        addBefore: function (child, nextSibling) {\n\t            if (child && child !== this && child.parent !== this\n\t                && nextSibling && nextSibling.parent === this) {\n\t\n\t                var children = this._children;\n\t                var idx = children.indexOf(nextSibling);\n\t\n\t                if (idx >= 0) {\n\t                    children.splice(idx, 0, child);\n\t                    this._doAdd(child);\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        _doAdd: function (child) {\n\t            if (child.parent) {\n\t                child.parent.remove(child);\n\t            }\n\t\n\t            child.parent = this;\n\t\n\t            var storage = this.__storage;\n\t            var zr = this.__zr;\n\t            if (storage && storage !== child.__storage) {\n\t\n\t                storage.addToMap(child);\n\t\n\t                if (child instanceof Group) {\n\t                    child.addChildrenToStorage(storage);\n\t                }\n\t            }\n\t\n\t            zr && zr.refresh();\n\t        },\n\t\n\t        /**\n\t         * 移除子节点\n\t         * @param {module:zrender/Element} child\n\t         */\n\t        remove: function (child) {\n\t            var zr = this.__zr;\n\t            var storage = this.__storage;\n\t            var children = this._children;\n\t\n\t            var idx = zrUtil.indexOf(children, child);\n\t            if (idx < 0) {\n\t                return this;\n\t            }\n\t            children.splice(idx, 1);\n\t\n\t            child.parent = null;\n\t\n\t            if (storage) {\n\t\n\t                storage.delFromMap(child.id);\n\t\n\t                if (child instanceof Group) {\n\t                    child.delChildrenFromStorage(storage);\n\t                }\n\t            }\n\t\n\t            zr && zr.refresh();\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 移除所有子节点\n\t         */\n\t        removeAll: function () {\n\t            var children = this._children;\n\t            var storage = this.__storage;\n\t            var child;\n\t            var i;\n\t            for (i = 0; i < children.length; i++) {\n\t                child = children[i];\n\t                if (storage) {\n\t                    storage.delFromMap(child.id);\n\t                    if (child instanceof Group) {\n\t                        child.delChildrenFromStorage(storage);\n\t                    }\n\t                }\n\t                child.parent = null;\n\t            }\n\t            children.length = 0;\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 遍历所有子节点\n\t         * @param  {Function} cb\n\t         * @param  {}   context\n\t         */\n\t        eachChild: function (cb, context) {\n\t            var children = this._children;\n\t            for (var i = 0; i < children.length; i++) {\n\t                var child = children[i];\n\t                cb.call(context, child, i);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 深度优先遍历所有子孙节点\n\t         * @param  {Function} cb\n\t         * @param  {}   context\n\t         */\n\t        traverse: function (cb, context) {\n\t            for (var i = 0; i < this._children.length; i++) {\n\t                var child = this._children[i];\n\t                cb.call(context, child);\n\t\n\t                if (child.type === 'group') {\n\t                    child.traverse(cb, context);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t\n\t        addChildrenToStorage: function (storage) {\n\t            for (var i = 0; i < this._children.length; i++) {\n\t                var child = this._children[i];\n\t                storage.addToMap(child);\n\t                if (child instanceof Group) {\n\t                    child.addChildrenToStorage(storage);\n\t                }\n\t            }\n\t        },\n\t\n\t        delChildrenFromStorage: function (storage) {\n\t            for (var i = 0; i < this._children.length; i++) {\n\t                var child = this._children[i];\n\t                storage.delFromMap(child.id);\n\t                if (child instanceof Group) {\n\t                    child.delChildrenFromStorage(storage);\n\t                }\n\t            }\n\t        },\n\t\n\t        dirty: function () {\n\t            this.__dirty = true;\n\t            this.__zr && this.__zr.refresh();\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @return {module:zrender/core/BoundingRect}\n\t         */\n\t        getBoundingRect: function (includeChildren) {\n\t            // TODO Caching\n\t            // TODO Transform\n\t            var rect = null;\n\t            var tmpRect = new BoundingRect(0, 0, 0, 0);\n\t            var children = includeChildren || this._children;\n\t            var tmpMat = [];\n\t\n\t            for (var i = 0; i < children.length; i++) {\n\t                var child = children[i];\n\t                if (child.ignore || child.invisible) {\n\t                    continue;\n\t                }\n\t\n\t                var childRect = child.getBoundingRect();\n\t                var transform = child.getLocalTransform(tmpMat);\n\t                if (transform) {\n\t                    tmpRect.copy(childRect);\n\t                    tmpRect.applyTransform(transform);\n\t                    rect = rect || tmpRect.clone();\n\t                    rect.union(tmpRect);\n\t                }\n\t                else {\n\t                    rect = rect || childRect.clone();\n\t                    rect.union(childRect);\n\t                }\n\t            }\n\t            return rect || tmpRect;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(Group, Element);\n\t\n\t    module.exports = Group;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Image element\n\t * @module zrender/graphic/Image\n\t */\n\t\n\t\n\t\n\t    var Displayable = __webpack_require__(8);\n\t    var BoundingRect = __webpack_require__(25);\n\t    var zrUtil = __webpack_require__(4);\n\t    var roundRectHelper = __webpack_require__(39);\n\t\n\t    var LRU = __webpack_require__(40);\n\t    var globalImageCache = new LRU(50);\n\t    /**\n\t     * @alias zrender/graphic/Image\n\t     * @extends module:zrender/graphic/Displayable\n\t     * @constructor\n\t     * @param {Object} opts\n\t     */\n\t    var ZImage = function (opts) {\n\t        Displayable.call(this, opts);\n\t    };\n\t\n\t    ZImage.prototype = {\n\t\n\t        constructor: ZImage,\n\t\n\t        type: 'image',\n\t\n\t        brush: function (ctx) {\n\t            var style = this.style;\n\t            var src = style.image;\n\t            var image;\n\t            // style.image is a url string\n\t            if (typeof src === 'string') {\n\t                image = this._image;\n\t            }\n\t            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n\t            else {\n\t                image = src;\n\t            }\n\t            // FIXME Case create many images with src\n\t            if (!image && src) {\n\t                // Try get from global image cache\n\t                var cachedImgObj = globalImageCache.get(src);\n\t                if (!cachedImgObj) {\n\t                    // Create a new image\n\t                    image = new Image();\n\t                    image.onload = function () {\n\t                        image.onload = null;\n\t                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n\t                            cachedImgObj.pending[i].dirty();\n\t                        }\n\t                    };\n\t                    cachedImgObj = {\n\t                        image: image,\n\t                        pending: [this]\n\t                    };\n\t                    image.src = src;\n\t                    globalImageCache.put(src, cachedImgObj);\n\t                    this._image = image;\n\t                    return;\n\t                }\n\t                else {\n\t                    image = cachedImgObj.image;\n\t                    this._image = image;\n\t                    // Image is not complete finish, add to pending list\n\t                    if (!image.width || !image.height) {\n\t                        cachedImgObj.pending.push(this);\n\t                        return;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (image) {\n\t                // 图片已经加载完成\n\t                // if (image.nodeName.toUpperCase() == 'IMG') {\n\t                //     if (!image.complete) {\n\t                //         return;\n\t                //     }\n\t                // }\n\t                // Else is canvas\n\t\n\t                var width = style.width || image.width;\n\t                var height = style.height || image.height;\n\t                var x = style.x || 0;\n\t                var y = style.y || 0;\n\t                // 图片加载失败\n\t                if (!image.width || !image.height) {\n\t                    return;\n\t                }\n\t\n\t                ctx.save();\n\t\n\t                style.bind(ctx);\n\t\n\t                // 设置transform\n\t                this.setTransform(ctx);\n\t\n\t                if (style.r) {\n\t                    // Border radius clipping\n\t                    // FIXME\n\t                    ctx.beginPath();\n\t                    roundRectHelper.buildPath(ctx, style);\n\t                    ctx.clip();\n\t                }\n\t\n\t                if (style.sWidth && style.sHeight) {\n\t                    var sx = style.sx || 0;\n\t                    var sy = style.sy || 0;\n\t                    ctx.drawImage(\n\t                        image,\n\t                        sx, sy, style.sWidth, style.sHeight,\n\t                        x, y, width, height\n\t                    );\n\t                }\n\t                else if (style.sx && style.sy) {\n\t                    var sx = style.sx;\n\t                    var sy = style.sy;\n\t                    var sWidth = width - sx;\n\t                    var sHeight = height - sy;\n\t                    ctx.drawImage(\n\t                        image,\n\t                        sx, sy, sWidth, sHeight,\n\t                        x, y, width, height\n\t                    );\n\t                }\n\t                else {\n\t                    ctx.drawImage(image, x, y, width, height);\n\t                }\n\t\n\t                // 如果没设置宽和高的话自动根据图片宽高设置\n\t                if (style.width == null) {\n\t                    style.width = width;\n\t                }\n\t                if (style.height == null) {\n\t                    style.height = height;\n\t                }\n\t\n\t                // Draw rect text\n\t                if (style.text != null) {\n\t                    this.drawRectText(ctx, this.getBoundingRect());\n\t                }\n\t\n\t                ctx.restore();\n\t            }\n\t        },\n\t\n\t        getBoundingRect: function () {\n\t            var style = this.style;\n\t            if (! this._rect) {\n\t                this._rect = new BoundingRect(\n\t                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n\t                );\n\t            }\n\t            return this._rect;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(ZImage, Displayable);\n\t\n\t    module.exports = ZImage;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t    module.exports = {\n\t        buildPath: function (ctx, shape) {\n\t            var x = shape.x;\n\t            var y = shape.y;\n\t            var width = shape.width;\n\t            var height = shape.height;\n\t            var r = shape.r;\n\t            var r1;\n\t            var r2;\n\t            var r3;\n\t            var r4;\n\t\n\t            // Convert width and height to positive for better borderRadius\n\t            if (width < 0) {\n\t                x = x + width;\n\t                width = -width;\n\t            }\n\t            if (height < 0) {\n\t                y = y + height;\n\t                height = -height;\n\t            }\n\t\n\t            if (typeof r === 'number') {\n\t                r1 = r2 = r3 = r4 = r;\n\t            }\n\t            else if (r instanceof Array) {\n\t                if (r.length === 1) {\n\t                    r1 = r2 = r3 = r4 = r[0];\n\t                }\n\t                else if (r.length === 2) {\n\t                    r1 = r3 = r[0];\n\t                    r2 = r4 = r[1];\n\t                }\n\t                else if (r.length === 3) {\n\t                    r1 = r[0];\n\t                    r2 = r4 = r[1];\n\t                    r3 = r[2];\n\t                }\n\t                else {\n\t                    r1 = r[0];\n\t                    r2 = r[1];\n\t                    r3 = r[2];\n\t                    r4 = r[3];\n\t                }\n\t            }\n\t            else {\n\t                r1 = r2 = r3 = r4 = 0;\n\t            }\n\t\n\t            var total;\n\t            if (r1 + r2 > width) {\n\t                total = r1 + r2;\n\t                r1 *= width / total;\n\t                r2 *= width / total;\n\t            }\n\t            if (r3 + r4 > width) {\n\t                total = r3 + r4;\n\t                r3 *= width / total;\n\t                r4 *= width / total;\n\t            }\n\t            if (r2 + r3 > height) {\n\t                total = r2 + r3;\n\t                r2 *= height / total;\n\t                r3 *= height / total;\n\t            }\n\t            if (r1 + r4 > height) {\n\t                total = r1 + r4;\n\t                r1 *= height / total;\n\t                r4 *= height / total;\n\t            }\n\t            ctx.moveTo(x + r1, y);\n\t            ctx.lineTo(x + width - r2, y);\n\t            r2 !== 0 && ctx.quadraticCurveTo(\n\t                x + width, y, x + width, y + r2\n\t            );\n\t            ctx.lineTo(x + width, y + height - r3);\n\t            r3 !== 0 && ctx.quadraticCurveTo(\n\t                x + width, y + height, x + width - r3, y + height\n\t            );\n\t            ctx.lineTo(x + r4, y + height);\n\t            r4 !== 0 && ctx.quadraticCurveTo(\n\t                x, y + height, x, y + height - r4\n\t            );\n\t            ctx.lineTo(x, y + r1);\n\t            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n\t        }\n\t    };\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t// Simple LRU cache use doubly linked list\n\t// @module zrender/core/LRU\n\t\n\t\n\t    /**\n\t     * Simple double linked list. Compared with array, it has O(1) remove operation.\n\t     * @constructor\n\t     */\n\t    var LinkedList = function() {\n\t\n\t        /**\n\t         * @type {module:zrender/core/LRU~Entry}\n\t         */\n\t        this.head = null;\n\t\n\t        /**\n\t         * @type {module:zrender/core/LRU~Entry}\n\t         */\n\t        this.tail = null;\n\t\n\t        this._len = 0;\n\t    };\n\t\n\t    var linkedListProto = LinkedList.prototype;\n\t    /**\n\t     * Insert a new value at the tail\n\t     * @param  {} val\n\t     * @return {module:zrender/core/LRU~Entry}\n\t     */\n\t    linkedListProto.insert = function(val) {\n\t        var entry = new Entry(val);\n\t        this.insertEntry(entry);\n\t        return entry;\n\t    };\n\t\n\t    /**\n\t     * Insert an entry at the tail\n\t     * @param  {module:zrender/core/LRU~Entry} entry\n\t     */\n\t    linkedListProto.insertEntry = function(entry) {\n\t        if (!this.head) {\n\t            this.head = this.tail = entry;\n\t        }\n\t        else {\n\t            this.tail.next = entry;\n\t            entry.prev = this.tail;\n\t            this.tail = entry;\n\t        }\n\t        this._len++;\n\t    };\n\t\n\t    /**\n\t     * Remove entry.\n\t     * @param  {module:zrender/core/LRU~Entry} entry\n\t     */\n\t    linkedListProto.remove = function(entry) {\n\t        var prev = entry.prev;\n\t        var next = entry.next;\n\t        if (prev) {\n\t            prev.next = next;\n\t        }\n\t        else {\n\t            // Is head\n\t            this.head = next;\n\t        }\n\t        if (next) {\n\t            next.prev = prev;\n\t        }\n\t        else {\n\t            // Is tail\n\t            this.tail = prev;\n\t        }\n\t        entry.next = entry.prev = null;\n\t        this._len--;\n\t    };\n\t\n\t    /**\n\t     * @return {number}\n\t     */\n\t    linkedListProto.len = function() {\n\t        return this._len;\n\t    };\n\t\n\t    /**\n\t     * @constructor\n\t     * @param {} val\n\t     */\n\t    var Entry = function(val) {\n\t        /**\n\t         * @type {}\n\t         */\n\t        this.value = val;\n\t\n\t        /**\n\t         * @type {module:zrender/core/LRU~Entry}\n\t         */\n\t        this.next;\n\t\n\t        /**\n\t         * @type {module:zrender/core/LRU~Entry}\n\t         */\n\t        this.prev;\n\t    };\n\t\n\t    /**\n\t     * LRU Cache\n\t     * @constructor\n\t     * @alias module:zrender/core/LRU\n\t     */\n\t    var LRU = function(maxSize) {\n\t\n\t        this._list = new LinkedList();\n\t\n\t        this._map = {};\n\t\n\t        this._maxSize = maxSize || 10;\n\t    };\n\t\n\t    var LRUProto = LRU.prototype;\n\t\n\t    /**\n\t     * @param  {string} key\n\t     * @param  {} value\n\t     */\n\t    LRUProto.put = function(key, value) {\n\t        var list = this._list;\n\t        var map = this._map;\n\t        if (map[key] == null) {\n\t            var len = list.len();\n\t            if (len >= this._maxSize && len > 0) {\n\t                // Remove the least recently used\n\t                var leastUsedEntry = list.head;\n\t                list.remove(leastUsedEntry);\n\t                delete map[leastUsedEntry.key];\n\t            }\n\t\n\t            var entry = list.insert(value);\n\t            entry.key = key;\n\t            map[key] = entry;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param  {string} key\n\t     * @return {}\n\t     */\n\t    LRUProto.get = function(key) {\n\t        var entry = this._map[key];\n\t        var list = this._list;\n\t        if (entry != null) {\n\t            // Put the latest used entry in the tail\n\t            if (entry !== list.tail) {\n\t                list.remove(entry);\n\t                list.insertEntry(entry);\n\t            }\n\t\n\t            return entry.value;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Clear the cache\n\t     */\n\t    LRUProto.clear = function() {\n\t        this._list.clear();\n\t        this._map = {};\n\t    };\n\t\n\t    module.exports = LRU;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Text element\n\t * @module zrender/graphic/Text\n\t *\n\t * TODO Wrapping\n\t */\n\t\n\t\n\t\n\t    var Displayable = __webpack_require__(8);\n\t    var zrUtil = __webpack_require__(4);\n\t    var textContain = __webpack_require__(24);\n\t\n\t    /**\n\t     * @alias zrender/graphic/Text\n\t     * @extends module:zrender/graphic/Displayable\n\t     * @constructor\n\t     * @param {Object} opts\n\t     */\n\t    var Text = function (opts) {\n\t        Displayable.call(this, opts);\n\t    };\n\t\n\t    Text.prototype = {\n\t\n\t        constructor: Text,\n\t\n\t        type: 'text',\n\t\n\t        brush: function (ctx) {\n\t            var style = this.style;\n\t            var x = style.x || 0;\n\t            var y = style.y || 0;\n\t            // Convert to string\n\t            var text = style.text;\n\t            var textFill = style.fill;\n\t            var textStroke = style.stroke;\n\t\n\t            // Convert to string\n\t            text != null && (text += '');\n\t\n\t            if (text) {\n\t                ctx.save();\n\t\n\t                this.style.bind(ctx);\n\t                this.setTransform(ctx);\n\t\n\t                textFill && (ctx.fillStyle = textFill);\n\t                textStroke && (ctx.strokeStyle = textStroke);\n\t\n\t                ctx.font = style.textFont || style.font;\n\t                ctx.textAlign = style.textAlign;\n\t\n\t                if (style.textVerticalAlign) {\n\t                    var rect = textContain.getBoundingRect(\n\t                        text, ctx.font, style.textAlign, 'top'\n\t                    );\n\t                    // Ignore textBaseline\n\t                    ctx.textBaseline = 'top';\n\t                    switch (style.textVerticalAlign) {\n\t                        case 'middle':\n\t                            y -= rect.height / 2;\n\t                            break;\n\t                        case 'bottom':\n\t                            y -= rect.height;\n\t                            break;\n\t                        // 'top'\n\t                    }\n\t                }\n\t                else {\n\t                    ctx.textBaseline = style.textBaseline;\n\t                }\n\t                var lineHeight = textContain.measureText('国', ctx.font).width;\n\t\n\t                var textLines = text.split('\\n');\n\t                for (var i = 0; i < textLines.length; i++) {\n\t                    textFill && ctx.fillText(textLines[i], x, y);\n\t                    textStroke && ctx.strokeText(textLines[i], x, y);\n\t                    y += lineHeight;\n\t                }\n\t\n\t                ctx.restore();\n\t            }\n\t        },\n\t\n\t        getBoundingRect: function () {\n\t            if (!this._rect) {\n\t                var style = this.style;\n\t                var rect = textContain.getBoundingRect(\n\t                    style.text + '', style.textFont || style.font, style.textAlign, style.textBaseline\n\t                );\n\t                rect.x += style.x || 0;\n\t                rect.y += style.y || 0;\n\t                this._rect = rect;\n\t            }\n\t            return this._rect;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(Text, Displayable);\n\t\n\t    module.exports = Text;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 圆形\n\t * @module zrender/shape/Circle\n\t */\n\t\n\t\n\t\n\t    module.exports = __webpack_require__(7).extend({\n\t        \n\t        type: 'circle',\n\t\n\t        shape: {\n\t            cx: 0,\n\t            cy: 0,\n\t            r: 0\n\t        },\n\t\n\t        buildPath : function (ctx, shape) {\n\t            // Better stroking in ShapeBundle\n\t            ctx.moveTo(shape.cx + shape.r, shape.cy);\n\t            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n\t            return;\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 扇形\n\t * @module zrender/graphic/shape/Sector\n\t */\n\t\n\t// FIXME clockwise seems wrong\n\t\n\t\n\t    module.exports = __webpack_require__(7).extend({\n\t\n\t        type: 'sector',\n\t\n\t        shape: {\n\t\n\t            cx: 0,\n\t\n\t            cy: 0,\n\t\n\t            r0: 0,\n\t\n\t            r: 0,\n\t\n\t            startAngle: 0,\n\t\n\t            endAngle: Math.PI * 2,\n\t\n\t            clockwise: true\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t\n\t            var x = shape.cx;\n\t            var y = shape.cy;\n\t            var r0 = Math.max(shape.r0 || 0, 0);\n\t            var r = Math.max(shape.r, 0);\n\t            var startAngle = shape.startAngle;\n\t            var endAngle = shape.endAngle;\n\t            var clockwise = shape.clockwise;\n\t\n\t            var unitX = Math.cos(startAngle);\n\t            var unitY = Math.sin(startAngle);\n\t\n\t            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\t\n\t            ctx.lineTo(unitX * r + x, unitY * r + y);\n\t\n\t            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\t\n\t            ctx.lineTo(\n\t                Math.cos(endAngle) * r0 + x,\n\t                Math.sin(endAngle) * r0 + y\n\t            );\n\t\n\t            if (r0 !== 0) {\n\t                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n\t            }\n\t\n\t            ctx.closePath();\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 圆环\n\t * @module zrender/graphic/shape/Ring\n\t */\n\t\n\t\n\t    module.exports = __webpack_require__(7).extend({\n\t\n\t        type: 'ring',\n\t\n\t        shape: {\n\t            cx: 0,\n\t            cy: 0,\n\t            r: 0,\n\t            r0: 0\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var x = shape.cx;\n\t            var y = shape.cy;\n\t            var PI2 = Math.PI * 2;\n\t            ctx.moveTo(x + shape.r, y);\n\t            ctx.arc(x, y, shape.r, 0, PI2, false);\n\t            ctx.moveTo(x + shape.r0, y);\n\t            ctx.arc(x, y, shape.r0, 0, PI2, true);\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 多边形\n\t * @module zrender/shape/Polygon\n\t */\n\t\n\t\n\t    var polyHelper = __webpack_require__(46);\n\t\n\t    module.exports = __webpack_require__(7).extend({\n\t        \n\t        type: 'polygon',\n\t\n\t        shape: {\n\t            points: null,\n\t\n\t            smooth: false,\n\t\n\t            smoothConstraint: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            polyHelper.buildPath(ctx, shape, true);\n\t        }\n\t    });\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t    var smoothSpline = __webpack_require__(47);\n\t    var smoothBezier = __webpack_require__(48);\n\t\n\t    module.exports = {\n\t        buildPath: function (ctx, shape, closePath) {\n\t            var points = shape.points;\n\t            var smooth = shape.smooth;\n\t            if (points && points.length >= 2) {\n\t                if (smooth && smooth !== 'spline') {\n\t                    var controlPoints = smoothBezier(\n\t                        points, smooth, closePath, shape.smoothConstraint\n\t                    );\n\t\n\t                    ctx.moveTo(points[0][0], points[0][1]);\n\t                    var len = points.length;\n\t                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n\t                        var cp1 = controlPoints[i * 2];\n\t                        var cp2 = controlPoints[i * 2 + 1];\n\t                        var p = points[(i + 1) % len];\n\t                        ctx.bezierCurveTo(\n\t                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n\t                        );\n\t                    }\n\t                }\n\t                else {\n\t                    if (smooth === 'spline') {\n\t                        points = smoothSpline(points, closePath);\n\t                    }\n\t\n\t                    ctx.moveTo(points[0][0], points[0][1]);\n\t                    for (var i = 1, l = points.length; i < l; i++) {\n\t                        ctx.lineTo(points[i][0], points[i][1]);\n\t                    }\n\t                }\n\t\n\t                closePath && ctx.closePath();\n\t            }\n\t        }\n\t    };\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Catmull-Rom spline 插值折线\n\t * @module zrender/shape/util/smoothSpline\n\t * @author pissang (https://www.github.com/pissang)\n\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t */\n\t\n\t    var vec2 = __webpack_require__(15);\n\t\n\t    /**\n\t     * @inner\n\t     */\n\t    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n\t        var v0 = (p2 - p0) * 0.5;\n\t        var v1 = (p3 - p1) * 0.5;\n\t        return (2 * (p1 - p2) + v0 + v1) * t3\n\t                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n\t                + v0 * t + p1;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/shape/util/smoothSpline\n\t     * @param {Array} points 线段顶点数组\n\t     * @param {boolean} isLoop\n\t     * @return {Array}\n\t     */\n\t    module.exports = function (points, isLoop) {\n\t        var len = points.length;\n\t        var ret = [];\n\t\n\t        var distance = 0;\n\t        for (var i = 1; i < len; i++) {\n\t            distance += vec2.distance(points[i - 1], points[i]);\n\t        }\n\t\n\t        var segs = distance / 2;\n\t        segs = segs < len ? len : segs;\n\t        for (var i = 0; i < segs; i++) {\n\t            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n\t            var idx = Math.floor(pos);\n\t\n\t            var w = pos - idx;\n\t\n\t            var p0;\n\t            var p1 = points[idx % len];\n\t            var p2;\n\t            var p3;\n\t            if (!isLoop) {\n\t                p0 = points[idx === 0 ? idx : idx - 1];\n\t                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n\t                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n\t            }\n\t            else {\n\t                p0 = points[(idx - 1 + len) % len];\n\t                p2 = points[(idx + 1) % len];\n\t                p3 = points[(idx + 2) % len];\n\t            }\n\t\n\t            var w2 = w * w;\n\t            var w3 = w * w2;\n\t\n\t            ret.push([\n\t                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n\t                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n\t            ]);\n\t        }\n\t        return ret;\n\t    };\n\t\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 贝塞尔平滑曲线\n\t * @module zrender/shape/util/smoothBezier\n\t * @author pissang (https://www.github.com/pissang)\n\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t */\n\t\n\t\n\t    var vec2 = __webpack_require__(15);\n\t    var v2Min = vec2.min;\n\t    var v2Max = vec2.max;\n\t    var v2Scale = vec2.scale;\n\t    var v2Distance = vec2.distance;\n\t    var v2Add = vec2.add;\n\t\n\t    /**\n\t     * 贝塞尔平滑曲线\n\t     * @alias module:zrender/shape/util/smoothBezier\n\t     * @param {Array} points 线段顶点数组\n\t     * @param {number} smooth 平滑等级, 0-1\n\t     * @param {boolean} isLoop\n\t     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n\t     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n\t     *                           整个折线的包围盒做一个并集用来约束控制点。\n\t     * @param {Array} 计算出来的控制点数组\n\t     */\n\t    module.exports = function (points, smooth, isLoop, constraint) {\n\t        var cps = [];\n\t\n\t        var v = [];\n\t        var v1 = [];\n\t        var v2 = [];\n\t        var prevPoint;\n\t        var nextPoint;\n\t\n\t        var min, max;\n\t        if (constraint) {\n\t            min = [Infinity, Infinity];\n\t            max = [-Infinity, -Infinity];\n\t            for (var i = 0, len = points.length; i < len; i++) {\n\t                v2Min(min, min, points[i]);\n\t                v2Max(max, max, points[i]);\n\t            }\n\t            // 与指定的包围盒做并集\n\t            v2Min(min, min, constraint[0]);\n\t            v2Max(max, max, constraint[1]);\n\t        }\n\t\n\t        for (var i = 0, len = points.length; i < len; i++) {\n\t            var point = points[i];\n\t\n\t            if (isLoop) {\n\t                prevPoint = points[i ? i - 1 : len - 1];\n\t                nextPoint = points[(i + 1) % len];\n\t            }\n\t            else {\n\t                if (i === 0 || i === len - 1) {\n\t                    cps.push(vec2.clone(points[i]));\n\t                    continue;\n\t                }\n\t                else {\n\t                    prevPoint = points[i - 1];\n\t                    nextPoint = points[i + 1];\n\t                }\n\t            }\n\t\n\t            vec2.sub(v, nextPoint, prevPoint);\n\t\n\t            // use degree to scale the handle length\n\t            v2Scale(v, v, smooth);\n\t\n\t            var d0 = v2Distance(point, prevPoint);\n\t            var d1 = v2Distance(point, nextPoint);\n\t            var sum = d0 + d1;\n\t            if (sum !== 0) {\n\t                d0 /= sum;\n\t                d1 /= sum;\n\t            }\n\t\n\t            v2Scale(v1, v, -d0);\n\t            v2Scale(v2, v, d1);\n\t            var cp0 = v2Add([], point, v1);\n\t            var cp1 = v2Add([], point, v2);\n\t            if (constraint) {\n\t                v2Max(cp0, cp0, min);\n\t                v2Min(cp0, cp0, max);\n\t                v2Max(cp1, cp1, min);\n\t                v2Min(cp1, cp1, max);\n\t            }\n\t            cps.push(cp0);\n\t            cps.push(cp1);\n\t        }\n\t\n\t        if (isLoop) {\n\t            cps.push(cps.shift());\n\t        }\n\t\n\t        return cps;\n\t    };\n\t\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module zrender/graphic/shape/Polyline\n\t */\n\t\n\t\n\t    var polyHelper = __webpack_require__(46);\n\t\n\t    module.exports = __webpack_require__(7).extend({\n\t        \n\t        type: 'polyline',\n\t\n\t        shape: {\n\t            points: null,\n\t\n\t            smooth: false,\n\t\n\t            smoothConstraint: null\n\t        },\n\t\n\t        style: {\n\t            stroke: '#000',\n\t\n\t            fill: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            polyHelper.buildPath(ctx, shape, false);\n\t        }\n\t    });\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 矩形\n\t * @module zrender/graphic/shape/Rect\n\t */\n\t\n\t\n\t    var roundRectHelper = __webpack_require__(39);\n\t\n\t    module.exports = __webpack_require__(7).extend({\n\t\n\t        type: 'rect',\n\t\n\t        shape: {\n\t            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n\t            // r缩写为1         相当于 [1, 1, 1, 1]\n\t            // r缩写为[1]       相当于 [1, 1, 1, 1]\n\t            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n\t            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n\t            r: 0,\n\t\n\t            x: 0,\n\t            y: 0,\n\t            width: 0,\n\t            height: 0\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var x = shape.x;\n\t            var y = shape.y;\n\t            var width = shape.width;\n\t            var height = shape.height;\n\t            if (!shape.r) {\n\t                ctx.rect(x, y, width, height);\n\t            }\n\t            else {\n\t                roundRectHelper.buildPath(ctx, shape);\n\t            }\n\t            ctx.closePath();\n\t            return;\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 直线\n\t * @module zrender/graphic/shape/Line\n\t */\n\t\n\t    module.exports = __webpack_require__(7).extend({\n\t\n\t        type: 'line',\n\t\n\t        shape: {\n\t            // Start point\n\t            x1: 0,\n\t            y1: 0,\n\t            // End point\n\t            x2: 0,\n\t            y2: 0,\n\t\n\t            percent: 1\n\t        },\n\t\n\t        style: {\n\t            stroke: '#000',\n\t            fill: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var x1 = shape.x1;\n\t            var y1 = shape.y1;\n\t            var x2 = shape.x2;\n\t            var y2 = shape.y2;\n\t            var percent = shape.percent;\n\t\n\t            if (percent === 0) {\n\t                return;\n\t            }\n\t\n\t            ctx.moveTo(x1, y1);\n\t\n\t            if (percent < 1) {\n\t                x2 = x1 * (1 - percent) + x2 * percent;\n\t                y2 = y1 * (1 - percent) + y2 * percent;\n\t            }\n\t            ctx.lineTo(x2, y2);\n\t        },\n\t\n\t        /**\n\t         * Get point at percent\n\t         * @param  {number} percent\n\t         * @return {Array.<number>}\n\t         */\n\t        pointAt: function (p) {\n\t            var shape = this.shape;\n\t            return [\n\t                shape.x1 * (1 - p) + shape.x2 * p,\n\t                shape.y1 * (1 - p) + shape.y2 * p\n\t            ];\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 贝塞尔曲线\n\t * @module zrender/shape/BezierCurve\n\t */\n\t\n\t\n\t    var curveTool = __webpack_require__(27);\n\t    var quadraticSubdivide = curveTool.quadraticSubdivide;\n\t    var cubicSubdivide = curveTool.cubicSubdivide;\n\t    var quadraticAt = curveTool.quadraticAt;\n\t    var cubicAt = curveTool.cubicAt;\n\t\n\t    var out = [];\n\t    module.exports = __webpack_require__(7).extend({\n\t\n\t        type: 'bezier-curve',\n\t\n\t        shape: {\n\t            x1: 0,\n\t            y1: 0,\n\t            x2: 0,\n\t            y2: 0,\n\t            cpx1: 0,\n\t            cpy1: 0,\n\t            // cpx2: 0,\n\t            // cpy2: 0\n\t\n\t            // Curve show percent, for animating\n\t            percent: 1\n\t        },\n\t\n\t        style: {\n\t            stroke: '#000',\n\t            fill: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t            var x1 = shape.x1;\n\t            var y1 = shape.y1;\n\t            var x2 = shape.x2;\n\t            var y2 = shape.y2;\n\t            var cpx1 = shape.cpx1;\n\t            var cpy1 = shape.cpy1;\n\t            var cpx2 = shape.cpx2;\n\t            var cpy2 = shape.cpy2;\n\t            var percent = shape.percent;\n\t            if (percent === 0) {\n\t                return;\n\t            }\n\t\n\t            ctx.moveTo(x1, y1);\n\t\n\t            if (cpx2 == null || cpy2 == null) {\n\t                if (percent < 1) {\n\t                    quadraticSubdivide(\n\t                        x1, cpx1, x2, percent, out\n\t                    );\n\t                    cpx1 = out[1];\n\t                    x2 = out[2];\n\t                    quadraticSubdivide(\n\t                        y1, cpy1, y2, percent, out\n\t                    );\n\t                    cpy1 = out[1];\n\t                    y2 = out[2];\n\t                }\n\t\n\t                ctx.quadraticCurveTo(\n\t                    cpx1, cpy1,\n\t                    x2, y2\n\t                );\n\t            }\n\t            else {\n\t                if (percent < 1) {\n\t                    cubicSubdivide(\n\t                        x1, cpx1, cpx2, x2, percent, out\n\t                    );\n\t                    cpx1 = out[1];\n\t                    cpx2 = out[2];\n\t                    x2 = out[3];\n\t                    cubicSubdivide(\n\t                        y1, cpy1, cpy2, y2, percent, out\n\t                    );\n\t                    cpy1 = out[1];\n\t                    cpy2 = out[2];\n\t                    y2 = out[3];\n\t                }\n\t                ctx.bezierCurveTo(\n\t                    cpx1, cpy1,\n\t                    cpx2, cpy2,\n\t                    x2, y2\n\t                );\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Get point at percent\n\t         * @param  {number} percent\n\t         * @return {Array.<number>}\n\t         */\n\t        pointAt: function (p) {\n\t            var shape = this.shape;\n\t            var cpx2 = shape.cpx2;\n\t            var cpy2 = shape.cpy2;\n\t            if (cpx2 === null || cpy2 === null) {\n\t                return [\n\t                    quadraticAt(shape.x1, shape.cpx1, shape.x2, p),\n\t                    quadraticAt(shape.y1, shape.cpy1, shape.y2, p)\n\t                ];\n\t            }\n\t            else {\n\t                return [\n\t                    cubicAt(shape.x1, shape.cpx1, shape.cpx1, shape.x2, p),\n\t                    cubicAt(shape.y1, shape.cpy1, shape.cpy1, shape.y2, p)\n\t                ];\n\t            }\n\t        }\n\t    });\n\t\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 圆弧\n\t * @module zrender/graphic/shape/Arc\n\t */\n\t \n\t\n\t    module.exports = __webpack_require__(7).extend({\n\t\n\t        type: 'arc',\n\t\n\t        shape: {\n\t\n\t            cx: 0,\n\t\n\t            cy: 0,\n\t\n\t            r: 0,\n\t\n\t            startAngle: 0,\n\t\n\t            endAngle: Math.PI * 2,\n\t\n\t            clockwise: true\n\t        },\n\t\n\t        style: {\n\t\n\t            stroke: '#000',\n\t\n\t            fill: null\n\t        },\n\t\n\t        buildPath: function (ctx, shape) {\n\t\n\t            var x = shape.cx;\n\t            var y = shape.cy;\n\t            var r = Math.max(shape.r, 0);\n\t            var startAngle = shape.startAngle;\n\t            var endAngle = shape.endAngle;\n\t            var clockwise = shape.clockwise;\n\t\n\t            var unitX = Math.cos(startAngle);\n\t            var unitY = Math.sin(startAngle);\n\t\n\t            ctx.moveTo(unitX * r + x, unitY * r + y);\n\t            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\t        }\n\t    });\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(4);\n\t\n\t    var Gradient = __webpack_require__(5);\n\t\n\t    /**\n\t     * x, y, x2, y2 are all percent from 0 to 1\n\t     * @param {number} [x=0]\n\t     * @param {number} [y=0]\n\t     * @param {number} [x2=1]\n\t     * @param {number} [y2=0]\n\t     * @param {Array.<Object>} colorStops\n\t     */\n\t    var LinearGradient = function (x, y, x2, y2, colorStops) {\n\t        this.x = x == null ? 0 : x;\n\t\n\t        this.y = y == null ? 0 : y;\n\t\n\t        this.x2 = x2 == null ? 1 : x2;\n\t\n\t        this.y2 = y2 == null ? 0 : y2;\n\t\n\t        Gradient.call(this, colorStops);\n\t    };\n\t\n\t    LinearGradient.prototype = {\n\t\n\t        constructor: LinearGradient,\n\t\n\t        type: 'linear',\n\t\n\t        updateCanvasGradient: function (shape, ctx) {\n\t            var rect = shape.getBoundingRect();\n\t            // var size =\n\t            var x = this.x * rect.width + rect.x;\n\t            var x2 = this.x2 * rect.width + rect.x;\n\t            var y = this.y * rect.height + rect.y;\n\t            var y2 = this.y2 * rect.height + rect.y;\n\t\n\t            var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\t\n\t            var colorStops = this.colorStops;\n\t            for (var i = 0; i < colorStops.length; i++) {\n\t                canvasGradient.addColorStop(\n\t                    colorStops[i].offset, colorStops[i].color\n\t                );\n\t            }\n\t\n\t            this.canvasGradient = canvasGradient;\n\t        }\n\t\n\t    };\n\t\n\t    zrUtil.inherits(LinearGradient, Gradient);\n\t\n\t    module.exports = LinearGradient;\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\t    var zrUtil = __webpack_require__(4);\n\t\n\t    var Gradient = __webpack_require__(5);\n\t\n\t    /**\n\t     * x, y, r are all percent from 0 to 1\n\t     * @param {number} [x=0.5]\n\t     * @param {number} [y=0.5]\n\t     * @param {number} [r=0.5]\n\t     * @param {Array.<Object>} [colorStops]\n\t     */\n\t    var RadialGradient = function (x, y, r, colorStops) {\n\t        this.x = x == null ? 0.5 : x;\n\t\n\t        this.y = y == null ? 0.5 : y;\n\t\n\t        this.r = r == null ? 0.5 : r;\n\t\n\t        Gradient.call(this, colorStops);\n\t    };\n\t\n\t    RadialGradient.prototype = {\n\t\n\t        constructor: RadialGradient,\n\t\n\t        type: 'radial',\n\t\n\t        updateCanvasGradient: function (shape, ctx) {\n\t            var rect = shape.getBoundingRect();\n\t\n\t            var width = rect.width;\n\t            var height = rect.height;\n\t            var min = Math.min(width, height);\n\t            // var max = Math.max(width, height);\n\t\n\t            var x = this.x * width + rect.x;\n\t            var y = this.y * height + rect.y;\n\t            var r = this.r * min;\n\t\n\t            var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\t\n\t            var colorStops = this.colorStops;\n\t            for (var i = 0; i < colorStops.length; i++) {\n\t                canvasGradient.addColorStop(\n\t                    colorStops[i].offset, colorStops[i].color\n\t                );\n\t            }\n\t\n\t            this.canvasGradient = canvasGradient;\n\t        }\n\t    };\n\t\n\t    zrUtil.inherits(RadialGradient, Gradient);\n\t\n\t    module.exports = RadialGradient;\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\r\n\t\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t\r\n\t    var apiList = [\r\n\t        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction',\r\n\t        'on', 'off', 'trigger', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getNodeClass', 'showTipWindow', 'hideTipWindow', 'resize', 'clear'\r\n\t    ];\r\n\t\r\n\t    function ExtensionAPI(instance) {\r\n\t        zrUtil.each(apiList, function (name) {\r\n\t            this[name] = zrUtil.bind(instance[name], instance);\r\n\t        }, this);\r\n\t    }\r\n\t\r\n\t    module.exports = ExtensionAPI;\r\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * ZRender, a high performance 2d drawing library.\n\t *\n\t * Copyright (c) 2013, Baidu Inc.\n\t * All rights reserved.\n\t *\n\t * LICENSE\n\t * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n\t */\n\t// Global defines\n\t\n\t    var guid = __webpack_require__(11);\n\t    var env = __webpack_require__(58);\n\t\n\t    var Handler = __webpack_require__(59);\n\t    var Storage = __webpack_require__(63);\n\t    var Animation = __webpack_require__(64);\n\t\n\t    var useVML = !env.canvasSupported;\n\t\n\t    var painterCtors = {\n\t        canvas: __webpack_require__(65)\n\t    };\n\t\n\t    var instances = {};    // ZRender实例map索引\n\t\n\t    var zrender = {};\n\t    /**\n\t     * @type {string}\n\t     */\n\t    zrender.version = '3.0.4';\n\t\n\t    /**\n\t     * @param {HTMLElement} dom\n\t     * @param {Object} opts\n\t     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n\t     * @param {number} [opts.devicePixelRatio]\n\t     * @return {module:zrender/ZRender}\n\t     */\n\t    zrender.init = function(dom, opts) {\n\t        var zr = new ZRender(guid(), dom, opts);\n\t        instances[zr.id] = zr;\n\t        return zr;\n\t    };\n\t\n\t    /**\n\t     * Dispose zrender instance\n\t     * @param {module:zrender/ZRender} zr\n\t     */\n\t    zrender.dispose = function (zr) {\n\t        if (zr) {\n\t            zr.dispose();\n\t        }\n\t        else {\n\t            for (var key in instances) {\n\t                instances[key].dispose();\n\t            }\n\t            instances = {};\n\t        }\n\t\n\t        return zrender;\n\t    };\n\t\n\t    /**\n\t     * 获取zrender实例\n\t     * @param {string} id ZRender对象索引\n\t     * @return {module:zrender/ZRender}\n\t     */\n\t    zrender.getInstance = function (id) {\n\t        return instances[id];\n\t    };\n\t\n\t    zrender.registerPainter = function (name, Ctor) {\n\t        painterCtors[name] = Ctor;\n\t    };\n\t\n\t    function delInstance(id) {\n\t        delete instances[id];\n\t    }\n\t\n\t    /**\n\t     * @module zrender/ZRender\n\t     */\n\t    /**\n\t     * @constructor\n\t     * @alias module:zrender/ZRender\n\t     * @param {string} id\n\t     * @param {HTMLDomElement} dom\n\t     * @param {Object} opts\n\t     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n\t     * @param {number} [opts.devicePixelRatio]\n\t     */\n\t    var ZRender = function(id, dom, opts) {\n\t\n\t        opts = opts || {};\n\t\n\t        /**\n\t         * @type {HTMLDomElement}\n\t         */\n\t        this.dom = dom;\n\t\n\t        /**\n\t         * @type {string}\n\t         */\n\t        this.id = id;\n\t\n\t        var self = this;\n\t        var storage = new Storage();\n\t\n\t        var rendererType = opts.renderer;\n\t        if (useVML) {\n\t            if (!painterCtors.vml) {\n\t                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n\t            }\n\t            rendererType = 'vml';\n\t        }\n\t        else if (!rendererType || !painterCtors[rendererType]) {\n\t            rendererType = 'canvas';\n\t        }\n\t        var painter = new painterCtors[rendererType](dom, storage, opts);\n\t\n\t        this.storage = storage;\n\t        this.painter = painter;\n\t        if (!env.node) {\n\t            this.handler = new Handler(painter.getViewportRoot(), storage, painter);\n\t        }\n\t\n\t        /**\n\t         * @type {module:zrender/animation/Animation}\n\t         */\n\t        this.animation = new Animation({\n\t            stage: {\n\t                update: function () {\n\t                    if (self._needsRefresh) {\n\t                        self.refreshImmediately();\n\t                    }\n\t                }\n\t            }\n\t        });\n\t        this.animation.start();\n\t\n\t        /**\n\t         * @type {boolean}\n\t         * @private\n\t         */\n\t        this._needsRefresh;\n\t\n\t        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n\t        // FIXME 有点ugly\n\t        var oldDelFromMap = storage.delFromMap;\n\t        var oldAddToMap = storage.addToMap;\n\t\n\t        storage.delFromMap = function (elId) {\n\t            var el = storage.get(elId);\n\t\n\t            oldDelFromMap.call(storage, elId);\n\t\n\t            el && el.removeSelfFromZr(self);\n\t        };\n\t\n\t        storage.addToMap = function (el) {\n\t            oldAddToMap.call(storage, el);\n\t\n\t            el.addSelfToZr(self);\n\t        };\n\t    };\n\t\n\t    ZRender.prototype = {\n\t\n\t        constructor: ZRender,\n\t        /**\n\t         * 获取实例唯一标识\n\t         * @return {string}\n\t         */\n\t        getId: function () {\n\t            return this.id;\n\t        },\n\t\n\t        /**\n\t         * 添加元素\n\t         * @param  {string|module:zrender/Element} el\n\t         */\n\t        add: function (el) {\n\t            this.storage.addRoot(el);\n\t            this._needsRefresh = true;\n\t        },\n\t\n\t        /**\n\t         * 删除元素\n\t         * @param  {string|module:zrender/Element} el\n\t         */\n\t        remove: function (el) {\n\t            this.storage.delRoot(el);\n\t            this._needsRefresh = true;\n\t        },\n\t\n\t        /**\n\t         * 修改指定zlevel的绘制配置项\n\t         *\n\t         * @param {string} zLevel\n\t         * @param {Object} config 配置对象\n\t         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n\t         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n\t         * @param {number} [config.lastFrameAlpha=0.7]\n\t         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n\t        */\n\t        configLayer: function (zLevel, config) {\n\t            this.painter.configLayer(zLevel, config);\n\t            this._needsRefresh = true;\n\t        },\n\t\n\t        /**\n\t         * 视图更新\n\t         */\n\t        refreshImmediately: function () {\n\t            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n\t            // Or it will cause zrender refreshes again and again.\n\t            this._needsRefresh = false;\n\t            this.painter.refresh();\n\t            /**\n\t             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n\t             */\n\t            this._needsRefresh = false;\n\t        },\n\t\n\t        /**\n\t         * 标记视图在浏览器下一帧需要绘制\n\t         */\n\t        refresh: function() {\n\t            this._needsRefresh = true;\n\t        },\n\t\n\t        /**\n\t         * 调整视图大小\n\t         */\n\t        resize: function() {\n\t            this.painter.resize();\n\t            this.handler && this.handler.resize();\n\t        },\n\t\n\t        /**\n\t         * 停止所有动画\n\t         */\n\t        clearAnimation: function () {\n\t            this.animation.clear();\n\t        },\n\t\n\t        /**\n\t         * 获取视图宽度\n\t         */\n\t        getWidth: function() {\n\t            return this.painter.getWidth();\n\t        },\n\t\n\t        /**\n\t         * 获取视图高度\n\t         */\n\t        getHeight: function() {\n\t            return this.painter.getHeight();\n\t        },\n\t\n\t        /**\n\t         * 图像导出\n\t         * @param {string} type\n\t         * @param {string} [backgroundColor='#fff'] 背景色\n\t         * @return {string} 图片的Base64 url\n\t         */\n\t        toDataURL: function(type, backgroundColor, args) {\n\t            return this.painter.toDataURL(type, backgroundColor, args);\n\t        },\n\t\n\t        /**\n\t         * 将常规shape转成image shape\n\t         * @param {module:zrender/graphic/Path} e\n\t         * @param {number} width\n\t         * @param {number} height\n\t         */\n\t        pathToImage: function(e, width, height) {\n\t            var id = guid();\n\t            return this.painter.pathToImage(id, e, width, height);\n\t        },\n\t\n\t        /**\n\t         * 设置默认的cursor style\n\t         * @param {string} cursorStyle 例如 crosshair\n\t         */\n\t        setDefaultCursorStyle: function (cursorStyle) {\n\t            this.handler.setDefaultCursorStyle(cursorStyle);\n\t        },\n\t\n\t        /**\n\t         * 事件绑定\n\t         *\n\t         * @param {string} eventName 事件名称\n\t         * @param {Function} eventHandler 响应函数\n\t         * @param {Object} [context] 响应函数\n\t         */\n\t        on: function(eventName, eventHandler, context) {\n\t            this.handler && this.handler.on(eventName, eventHandler, context);\n\t        },\n\t\n\t        /**\n\t         * 事件解绑定，参数为空则解绑所有自定义事件\n\t         *\n\t         * @param {string} eventName 事件名称\n\t         * @param {Function} eventHandler 响应函数\n\t         */\n\t        off: function(eventName, eventHandler) {\n\t            this.handler && this.handler.off(eventName, eventHandler);\n\t        },\n\t\n\t        /**\n\t         * 事件触发\n\t         *\n\t         * @param {string} eventName 事件名称，resize，hover，drag，etc\n\t         * @param {event=} event event dom事件对象\n\t         */\n\t        trigger: function (eventName, event) {\n\t            this.handler && this.handler.trigger(eventName, event);\n\t        },\n\t\n\t\n\t        /**\n\t         * 清除当前ZRender下所有类图的数据和显示，clear后MVC和已绑定事件均还存在在，ZRender可用\n\t         */\n\t        clear: function () {\n\t            this.storage.delRoot();\n\t            this.painter.clear();\n\t        },\n\t\n\t        /**\n\t         * 释放当前ZR实例（删除包括dom，数据、显示和事件绑定），dispose后ZR不可用\n\t         */\n\t        dispose: function () {\n\t            this.animation.stop();\n\t\n\t            this.clear();\n\t            this.storage.dispose();\n\t            this.painter.dispose();\n\t            this.handler && this.handler.dispose();\n\t\n\t            this.animation =\n\t            this.storage =\n\t            this.painter =\n\t            this.handler = null;\n\t\n\t            delInstance(this.id);\n\t        }\n\t    };\n\t\n\t    module.exports = zrender;\n\t\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\t/**\n\t * echarts设备环境识别\n\t *\n\t * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n\t * @author firede[firede@firede.us]\n\t * @desc thanks zepto.\n\t */\n\t\n\t    var env = {};\n\t    if (typeof navigator === 'undefined') {\n\t        // In node\n\t        env = {\n\t            browser: {},\n\t            os: {},\n\t            node: true,\n\t            // Assume canvas is supported\n\t            canvasSupported: true\n\t        };\n\t    }\n\t    else {\n\t        env = detect(navigator.userAgent);\n\t    }\n\t\n\t    module.exports = env;\n\t\n\t    // Zepto.js\n\t    // (c) 2010-2013 Thomas Fuchs\n\t    // Zepto.js may be freely distributed under the MIT license.\n\t\n\t    function detect(ua) {\n\t        var os = {};\n\t        var browser = {};\n\t        var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n\t        var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n\t        var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n\t        var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n\t        var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\t        var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n\t        var touchpad = webos && ua.match(/TouchPad/);\n\t        var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n\t        var silk = ua.match(/Silk\\/([\\d._]+)/);\n\t        var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n\t        var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n\t        var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n\t        var playbook = ua.match(/PlayBook/);\n\t        var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\t        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n\t        var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n\t        var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\t        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n\t            // IE 11 Trident/7.0; rv:11.0\n\t            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n\t        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\t\n\t        // Todo: clean this up with a better OS/browser seperation:\n\t        // - discern (more) between multiple browsers on android\n\t        // - decide if kindle fire in silk mode is android or not\n\t        // - Firefox on Android doesn't specify the Android version\n\t        // - possibly devide in os, device and browser hashes\n\t\n\t        if (browser.webkit = !!webkit) browser.version = webkit[1];\n\t\n\t        if (android) os.android = true, os.version = android[2];\n\t        if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n\t        if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n\t        if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n\t        if (webos) os.webos = true, os.version = webos[2];\n\t        if (touchpad) os.touchpad = true;\n\t        if (blackberry) os.blackberry = true, os.version = blackberry[2];\n\t        if (bb10) os.bb10 = true, os.version = bb10[2];\n\t        if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n\t        if (playbook) browser.playbook = true;\n\t        if (kindle) os.kindle = true, os.version = kindle[1];\n\t        if (silk) browser.silk = true, browser.version = silk[1];\n\t        if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n\t        if (chrome) browser.chrome = true, browser.version = chrome[1];\n\t        if (firefox) browser.firefox = true, browser.version = firefox[1];\n\t        if (ie) browser.ie = true, browser.version = ie[1];\n\t        if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n\t        if (webview) browser.webview = true;\n\t        if (ie) browser.ie = true, browser.version = ie[1];\n\t        if (edge) browser.edge = true, browser.version = edge[1];\n\t\n\t        os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n\t            (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n\t        os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 ||\n\t            (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n\t            (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\t\n\t        return {\n\t            browser: browser,\n\t            os: os,\n\t            node: false,\n\t            // 原生canvas支持，改极端点了\n\t            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n\t            canvasSupported : document.createElement('canvas').getContext ? true : false,\n\t            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n\t            // works on most browsers\n\t            // IE10/11 does not support touch event, and MS Edge supports them but not by\n\t            // default, so we dont check navigator.maxTouchPoints for them here.\n\t            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n\t            // <http://caniuse.com/#search=pointer%20event>.\n\t            pointerEventsSupported: 'onpointerdown' in window\n\t                // Firefox supports pointer but not by default,\n\t                // only MS browsers are reliable on pointer events currently.\n\t                && (browser.edge || (browser.ie && browser.version >= 10))\n\t        };\n\t    }\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Handler控制模块\n\t * @module zrender/Handler\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t *         pissang (shenyi.914@gmail.com)\n\t */\n\t\n\t\n\t    var env = __webpack_require__(58);\n\t    var eventTool = __webpack_require__(60);\n\t    var util = __webpack_require__(4);\n\t    var Draggable = __webpack_require__(61);\n\t    var GestureMgr = __webpack_require__(62);\n\t\n\t    var Eventful = __webpack_require__(12);\n\t\n\t    var mouseHandlerNames = [\n\t        'click', 'dblclick', 'mousewheel', 'mouseout'\n\t    ];\n\t    !usePointerEvent() && mouseHandlerNames.push(\n\t        'mouseup', 'mousedown', 'mousemove'\n\t    );\n\t\n\t    var touchHandlerNames = [\n\t        'touchstart', 'touchend', 'touchmove'\n\t    ];\n\t\n\t    var pointerHandlerNames = [\n\t        'pointerdown', 'pointerup', 'pointermove'\n\t    ];\n\t\n\t    var TOUCH_CLICK_DELAY = 300;\n\t\n\t    // touch指尖错觉的尝试偏移量配置\n\t    // var MOBILE_TOUCH_OFFSETS = [\n\t    //     { x: 10 },\n\t    //     { x: -20 },\n\t    //     { x: 10, y: 10 },\n\t    //     { y: -20 }\n\t    // ];\n\t\n\t    var addEventListener = eventTool.addEventListener;\n\t    var removeEventListener = eventTool.removeEventListener;\n\t    var normalizeEvent = eventTool.normalizeEvent;\n\t\n\t    function makeEventPacket(eveType, target, event) {\n\t        return {\n\t            type: eveType,\n\t            event: event,\n\t            target: target,\n\t            cancelBubble: false,\n\t            offsetX: event.zrX,\n\t            offsetY: event.zrY,\n\t            gestureEvent: event.gestureEvent,\n\t            pinchX: event.pinchX,\n\t            pinchY: event.pinchY,\n\t            pinchScale: event.pinchScale,\n\t            wheelDelta: event.zrDelta\n\t        };\n\t    }\n\t\n\t    var domHandlers = {\n\t        /**\n\t         * Mouse move handler\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        mousemove: function (event) {\n\t            event = normalizeEvent(this.root, event);\n\t\n\t            var x = event.zrX;\n\t            var y = event.zrY;\n\t\n\t            var hovered = this.findHover(x, y, null);\n\t            var lastHovered = this._hovered;\n\t\n\t            this._hovered = hovered;\n\t\n\t            this.root.style.cursor = hovered ? hovered.cursor : this._defaultCursorStyle;\n\t            // Mouse out on previous hovered element\n\t            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n\t                this._dispatchProxy(lastHovered, 'mouseout', event);\n\t            }\n\t\n\t            // Mouse moving on one element\n\t            this._dispatchProxy(hovered, 'mousemove', event);\n\t\n\t            // Mouse over on a new element\n\t            if (hovered && hovered !== lastHovered) {\n\t                this._dispatchProxy(hovered, 'mouseover', event);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Mouse out handler\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        mouseout: function (event) {\n\t            event = normalizeEvent(this.root, event);\n\t\n\t            var element = event.toElement || event.relatedTarget;\n\t            if (element != this.root) {\n\t                while (element && element.nodeType != 9) {\n\t                    // 忽略包含在root中的dom引起的mouseOut\n\t                    if (element === this.root) {\n\t                        return;\n\t                    }\n\t\n\t                    element = element.parentNode;\n\t                }\n\t            }\n\t\n\t            this._dispatchProxy(this._hovered, 'mouseout', event);\n\t\n\t            this.trigger('globalout', {\n\t                event: event\n\t            });\n\t        },\n\t\n\t        /**\n\t         * Touch开始响应函数\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        touchstart: function (event) {\n\t            // FIXME\n\t            // 移动端可能需要default行为，例如静态图表时。\n\t            // eventTool.stop(event);// 阻止浏览器默认事件，重要\n\t            event = normalizeEvent(this.root, event);\n\t\n\t            this._lastTouchMoment = new Date();\n\t\n\t            processGesture(this, event, 'start');\n\t\n\t            // 平板补充一次findHover\n\t            // this._mobileFindFixed(event);\n\t            // Trigger mousemove and mousedown\n\t            domHandlers.mousemove.call(this, event);\n\t\n\t            domHandlers.mousedown.call(this, event);\n\t\n\t            setTouchTimer(this);\n\t        },\n\t\n\t        /**\n\t         * Touch移动响应函数\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        touchmove: function (event) {\n\t            // eventTool.stop(event);// 阻止浏览器默认事件，重要\n\t            event = normalizeEvent(this.root, event);\n\t\n\t            processGesture(this, event, 'change');\n\t\n\t            // Mouse move should always be triggered no matter whether\n\t            // there is gestrue event, because mouse move and pinch may\n\t            // be used at the same time.\n\t            domHandlers.mousemove.call(this, event);\n\t\n\t            setTouchTimer(this);\n\t        },\n\t\n\t        /**\n\t         * Touch结束响应函数\n\t         * @inner\n\t         * @param {Event} event\n\t         */\n\t        touchend: function (event) {\n\t            // eventTool.stop(event);// 阻止浏览器默认事件，重要\n\t            event = normalizeEvent(this.root, event);\n\t\n\t            processGesture(this, event, 'end');\n\t\n\t            domHandlers.mouseup.call(this, event);\n\t\n\t            // click event should always be triggered no matter whether\n\t            // there is gestrue event. System click can not be prevented.\n\t            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n\t                // this._mobileFindFixed(event);\n\t                domHandlers.click.call(this, event);\n\t            }\n\t\n\t            setTouchTimer(this);\n\t        }\n\t    };\n\t\n\t    // Common handlers\n\t    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick'], function (name) {\n\t        domHandlers[name] = function (event) {\n\t            event = normalizeEvent(this.root, event);\n\t            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n\t            var hovered = this.findHover(event.zrX, event.zrY, null);\n\t            this._dispatchProxy(hovered, name, event);\n\t        };\n\t    });\n\t\n\t    // Pointer event handlers\n\t    // util.each(['pointerdown', 'pointermove', 'pointerup'], function (name) {\n\t    //     domHandlers[name] = function (event) {\n\t    //         var mouseName = name.replace('pointer', 'mouse');\n\t    //         domHandlers[mouseName].call(this, event);\n\t    //     };\n\t    // });\n\t\n\t    function processGesture(zrHandler, event, stage) {\n\t        var gestureMgr = zrHandler._gestureMgr;\n\t\n\t        stage === 'start' && gestureMgr.clear();\n\t\n\t        var gestureInfo = gestureMgr.recognize(\n\t            event,\n\t            zrHandler.findHover(event.zrX, event.zrY, null)\n\t        );\n\t\n\t        stage === 'end' && gestureMgr.clear();\n\t\n\t        if (gestureInfo) {\n\t            // eventTool.stop(event);\n\t            var type = gestureInfo.type;\n\t            event.gestureEvent = type;\n\t\n\t            zrHandler._dispatchProxy(gestureInfo.target, type, gestureInfo.event);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 为控制类实例初始化dom 事件处理函数\n\t     *\n\t     * @inner\n\t     * @param {module:zrender/Handler} instance 控制类实例\n\t     */\n\t    function initDomHandler(instance) {\n\t        var handlerNames = touchHandlerNames.concat(pointerHandlerNames);\n\t        for (var i = 0; i < handlerNames.length; i++) {\n\t            var name = handlerNames[i];\n\t            instance._handlers[name] = util.bind(domHandlers[name], instance);\n\t        }\n\t\n\t        for (var i = 0; i < mouseHandlerNames.length; i++) {\n\t            var name = mouseHandlerNames[i];\n\t            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n\t        }\n\t\n\t        function makeMouseHandler(fn, instance) {\n\t            return function () {\n\t                if (instance._touching) {\n\t                    return;\n\t                }\n\t                return fn.apply(instance, arguments);\n\t            };\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/Handler\n\t     * @constructor\n\t     * @extends module:zrender/mixin/Eventful\n\t     * @param {HTMLElement} root Main HTML element for painting.\n\t     * @param {module:zrender/Storage} storage Storage instance.\n\t     * @param {module:zrender/Painter} painter Painter instance.\n\t     */\n\t    var Handler = function(root, storage, painter) {\n\t        Eventful.call(this);\n\t\n\t        this.root = root;\n\t        this.storage = storage;\n\t        this.painter = painter;\n\t\n\t        /**\n\t         * @private\n\t         * @type {boolean}\n\t         */\n\t        this._hovered;\n\t\n\t        /**\n\t         * @private\n\t         * @type {Date}\n\t         */\n\t        this._lastTouchMoment;\n\t\n\t        /**\n\t         * @private\n\t         * @type {number}\n\t         */\n\t        this._lastX;\n\t\n\t        /**\n\t         * @private\n\t         * @type {number}\n\t         */\n\t        this._lastY;\n\t\n\t        /**\n\t         * @private\n\t         * @type {string}\n\t         */\n\t        this._defaultCursorStyle = 'default';\n\t\n\t        /**\n\t         * @private\n\t         * @type {module:zrender/core/GestureMgr}\n\t         */\n\t        this._gestureMgr = new GestureMgr();\n\t\n\t        /**\n\t         * @private\n\t         * @type {Array.<Function>}\n\t         */\n\t        this._handlers = [];\n\t\n\t        /**\n\t         * @private\n\t         * @type {boolean}\n\t         */\n\t        this._touching = false;\n\t\n\t        /**\n\t         * @private\n\t         * @type {number}\n\t         */\n\t        this._touchTimer;\n\t\n\t        initDomHandler(this);\n\t\n\t        if (usePointerEvent()) {\n\t            mountHandlers(pointerHandlerNames, this);\n\t        }\n\t        else if (useTouchEvent()) {\n\t            mountHandlers(touchHandlerNames, this);\n\t\n\t            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n\t            // addEventListener(root, 'mouseout', this._mouseoutHandler);\n\t        }\n\t\n\t        // Considering some devices that both enable touch and mouse event (like MS Surface\n\t        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n\t        // mouse event can not be handle in those devices.\n\t        mountHandlers(mouseHandlerNames, this);\n\t\n\t        Draggable.call(this);\n\t\n\t        function mountHandlers(handlerNames, instance) {\n\t            util.each(handlerNames, function (name) {\n\t                addEventListener(root, eventNameFix(name), instance._handlers[name]);\n\t            }, instance);\n\t        }\n\t    };\n\t\n\t    Handler.prototype = {\n\t\n\t        constructor: Handler,\n\t\n\t        /**\n\t         * Resize\n\t         */\n\t        resize: function (event) {\n\t            this._hovered = null;\n\t        },\n\t\n\t        /**\n\t         * Dispatch event\n\t         * @param {string} eventName\n\t         * @param {event=} eventArgs\n\t         */\n\t        dispatch: function (eventName, eventArgs) {\n\t            var handler = this._handlers[eventName];\n\t            handler && handler.call(this, eventArgs);\n\t        },\n\t\n\t        /**\n\t         * Dispose\n\t         */\n\t        dispose: function () {\n\t            var root = this.root;\n\t\n\t            var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\t\n\t            for (var i = 0; i < handlerNames.length; i++) {\n\t                var name = handlerNames[i];\n\t                removeEventListener(root, eventNameFix(name), this._handlers[name]);\n\t            }\n\t\n\t            this.root =\n\t            this.storage =\n\t            this.painter = null;\n\t        },\n\t\n\t        /**\n\t         * 设置默认的cursor style\n\t         * @param {string} cursorStyle 例如 crosshair\n\t         */\n\t        setDefaultCursorStyle: function (cursorStyle) {\n\t            this._defaultCursorStyle = cursorStyle;\n\t        },\n\t\n\t        /**\n\t         * 事件分发代理\n\t         *\n\t         * @private\n\t         * @param {Object} targetEl 目标图形元素\n\t         * @param {string} eventName 事件名称\n\t         * @param {Object} event 事件对象\n\t         */\n\t        _dispatchProxy: function (targetEl, eventName, event) {\n\t            var eventHandler = 'on' + eventName;\n\t            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\t\n\t            var el = targetEl;\n\t\n\t            while (el) {\n\t                el[eventHandler]\n\t                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\t\n\t                el.trigger(eventName, eventPacket);\n\t\n\t                el = el.parent;\n\t\n\t                if (eventPacket.cancelBubble) {\n\t                    break;\n\t                }\n\t            }\n\t\n\t            if (!eventPacket.cancelBubble) {\n\t                // 冒泡到顶级 zrender 对象\n\t                this.trigger(eventName, eventPacket);\n\t                // 分发事件到用户自定义层\n\t                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\t                this.painter && this.painter.eachOtherLayer(function (layer) {\n\t                    if (typeof(layer[eventHandler]) == 'function') {\n\t                        layer[eventHandler].call(layer, eventPacket);\n\t                    }\n\t                    if (layer.trigger) {\n\t                        layer.trigger(eventName, eventPacket);\n\t                    }\n\t                });\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param {number} x\n\t         * @param {number} y\n\t         * @param {module:zrender/graphic/Displayable} exclude\n\t         * @method\n\t         */\n\t        findHover: function(x, y, exclude) {\n\t            var list = this.storage.getDisplayList();\n\t            for (var i = list.length - 1; i >= 0 ; i--) {\n\t                if (!list[i].silent\n\t                 && list[i] !== exclude\n\t                 // getDisplayList may include ignored item in VML mode\n\t                 && !list[i].ignore\n\t                 && isHover(list[i], x, y)) {\n\t                    return list[i];\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    function isHover(displayable, x, y) {\n\t        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n\t            var p = displayable.parent;\n\t            while (p) {\n\t                if (p.clipPath && !p.clipPath.contain(x, y))  {\n\t                    // Clipped by parents\n\t                    return false;\n\t                }\n\t                p = p.parent;\n\t            }\n\t            return true;\n\t        }\n\t\n\t        return false;\n\t    }\n\t\n\t    /**\n\t     * Prevent mouse event from being dispatched after Touch Events action\n\t     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n\t     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n\t     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n\t     * Result: Blocking Mouse Events for 700ms.\n\t     */\n\t    function setTouchTimer(instance) {\n\t        instance._touching = true;\n\t        clearTimeout(instance._touchTimer);\n\t        instance._touchTimer = setTimeout(function () {\n\t            instance._touching = false;\n\t        }, 700);\n\t    }\n\t\n\t    /**\n\t     * Althought MS Surface support screen touch, IE10/11 do not support\n\t     * touch event and MS Edge supported them but not by default (but chrome\n\t     * and firefox do). Thus we use Pointer event on MS browsers to handle touch.\n\t     */\n\t    function usePointerEvent() {\n\t        // TODO\n\t        // pointermove event dont trigger when using finger.\n\t        // We may figger it out latter.\n\t        return false;\n\t        // return env.pointerEventsSupported\n\t            // In no-touch device we dont use pointer evnets but just\n\t            // use mouse event for avoiding problems.\n\t            // && window.navigator.maxTouchPoints;\n\t    }\n\t\n\t    function useTouchEvent() {\n\t        return env.touchEventsSupported;\n\t    }\n\t\n\t    function eventNameFix(name) {\n\t        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n\t    }\n\t\n\t    util.mixin(Handler, Eventful);\n\t    util.mixin(Handler, Draggable);\n\t\n\t    module.exports = Handler;\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 事件辅助类\n\t * @module zrender/core/event\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t */\n\t\n\t\n\t    var Eventful = __webpack_require__(12);\n\t\n\t    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\t\n\t    function getBoundingClientRect(el) {\n\t        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n\t        return el.getBoundingClientRect ? el.getBoundingClientRect() : { left: 0, top: 0};\n\t    }\n\t    /**\n\t     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标\n\t     */\n\t    function normalizeEvent(el, e) {\n\t\n\t        e = e || window.event;\n\t\n\t        if (e.zrX != null) {\n\t            return e;\n\t        }\n\t\n\t        var eventType = e.type;\n\t        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\t\n\t        if (!isTouch) {\n\t            var box = getBoundingClientRect(el);\n\t            e.zrX = e.clientX - box.left;\n\t            e.zrY = e.clientY - box.top;\n\t            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n\t        }\n\t        else {\n\t            var touch = eventType != 'touchend'\n\t                            ? e.targetTouches[0]\n\t                            : e.changedTouches[0];\n\t            if (touch) {\n\t                var rBounding = getBoundingClientRect(el);\n\t                // touch事件坐标是全屏的~\n\t                e.zrX = touch.clientX - rBounding.left;\n\t                e.zrY = touch.clientY - rBounding.top;\n\t            }\n\t        }\n\t\n\t        return e;\n\t    }\n\t\n\t    function addEventListener(el, name, handler) {\n\t        if (isDomLevel2) {\n\t            el.addEventListener(name, handler);\n\t        }\n\t        else {\n\t            el.attachEvent('on' + name, handler);\n\t        }\n\t    }\n\t\n\t    function removeEventListener(el, name, handler) {\n\t        if (isDomLevel2) {\n\t            el.removeEventListener(name, handler);\n\t        }\n\t        else {\n\t            el.detachEvent('on' + name, handler);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * 停止冒泡和阻止默认行为\n\t     * @memberOf module:zrender/core/event\n\t     * @method\n\t     * @param {Event} e : event对象\n\t     */\n\t    var stop = isDomLevel2\n\t        ? function (e) {\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\t            e.cancelBubble = true;\n\t        }\n\t        : function (e) {\n\t            e.returnValue = false;\n\t            e.cancelBubble = true;\n\t        };\n\t\n\t    module.exports = {\n\t        normalizeEvent: normalizeEvent,\n\t        addEventListener: addEventListener,\n\t        removeEventListener: removeEventListener,\n\t\n\t        stop: stop,\n\t        // 做向上兼容\n\t        Dispatcher: Eventful\n\t    };\n\t\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports) {\n\n\t// TODO Draggable for group\n\t// FIXME Draggable on element which has parent rotation or scale\n\t\n\t    function Draggable() {\n\t\n\t        this.on('mousedown', this._dragStart, this);\n\t        this.on('mousemove', this._drag, this);\n\t        this.on('mouseup', this._dragEnd, this);\n\t        this.on('globalout', this._dragEnd, this);\n\t        // this._dropTarget = null;\n\t        // this._draggingTarget = null;\n\t\n\t        // this._x = 0;\n\t        // this._y = 0;\n\t    }\n\t\n\t    Draggable.prototype = {\n\t\n\t        constructor: Draggable,\n\t\n\t        _dragStart: function (e) {\n\t            var draggingTarget = e.target;\n\t            if (draggingTarget && draggingTarget.draggable) {\n\t                this._draggingTarget = draggingTarget;\n\t                draggingTarget.dragging = true;\n\t                this._x = e.offsetX;\n\t                this._y = e.offsetY;\n\t\n\t                this._dispatchProxy(draggingTarget, 'dragstart', e.event);\n\t            }\n\t        },\n\t\n\t        _drag: function (e) {\n\t            var draggingTarget = this._draggingTarget;\n\t            if (draggingTarget) {\n\t\n\t                var x = e.offsetX;\n\t                var y = e.offsetY;\n\t\n\t                var dx = x - this._x;\n\t                var dy = y - this._y;\n\t                this._x = x;\n\t                this._y = y;\n\t\n\t                draggingTarget.drift(dx, dy, e);\n\t                this._dispatchProxy(draggingTarget, 'drag', e.event);\n\t\n\t                var dropTarget = this.findHover(x, y, draggingTarget);\n\t                var lastDropTarget = this._dropTarget;\n\t                this._dropTarget = dropTarget;\n\t\n\t                if (draggingTarget !== dropTarget) {\n\t                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n\t                        this._dispatchProxy(lastDropTarget, 'dragleave', e.event);\n\t                    }\n\t                    if (dropTarget && dropTarget !== lastDropTarget) {\n\t                        this._dispatchProxy(dropTarget, 'dragenter', e.event);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        _dragEnd: function (e) {\n\t            var draggingTarget = this._draggingTarget;\n\t\n\t            if (draggingTarget) {\n\t                draggingTarget.dragging = false;\n\t            }\n\t\n\t            this._dispatchProxy(draggingTarget, 'dragend', e.event);\n\t\n\t            if (this._dropTarget) {\n\t                this._dispatchProxy(this._dropTarget, 'drop', e.event);\n\t            }\n\t\n\t            this._draggingTarget = null;\n\t            this._dropTarget = null;\n\t        }\n\t\n\t    };\n\t\n\t    module.exports = Draggable;\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Only implements needed gestures for mobile.\n\t */\n\t\n\t\n\t    var GestureMgr = function () {\n\t\n\t        /**\n\t         * @private\n\t         * @type {Array.<Object>}\n\t         */\n\t        this._track = [];\n\t    };\n\t\n\t    GestureMgr.prototype = {\n\t\n\t        constructor: GestureMgr,\n\t\n\t        recognize: function (event, target) {\n\t            this._doTrack(event, target);\n\t            return this._recognize(event);\n\t        },\n\t\n\t        clear: function () {\n\t            this._track.length = 0;\n\t            return this;\n\t        },\n\t\n\t        _doTrack: function (event, target) {\n\t            var touches = event.touches;\n\t\n\t            if (!touches) {\n\t                return;\n\t            }\n\t\n\t            var trackItem = {\n\t                points: [],\n\t                touches: [],\n\t                target: target,\n\t                event: event\n\t            };\n\t\n\t            for (var i = 0, len = touches.length; i < len; i++) {\n\t                var touch = touches[i];\n\t                trackItem.points.push([touch.clientX, touch.clientY]);\n\t                trackItem.touches.push(touch);\n\t            }\n\t\n\t            this._track.push(trackItem);\n\t        },\n\t\n\t        _recognize: function (event) {\n\t            for (var eventName in recognizers) {\n\t                if (recognizers.hasOwnProperty(eventName)) {\n\t                    var gestureInfo = recognizers[eventName](this._track, event);\n\t                    if (gestureInfo) {\n\t                        return gestureInfo;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    function dist(pointPair) {\n\t        var dx = pointPair[1][0] - pointPair[0][0];\n\t        var dy = pointPair[1][1] - pointPair[0][1];\n\t\n\t        return Math.sqrt(dx * dx + dy * dy);\n\t    }\n\t\n\t    function center(pointPair) {\n\t        return [\n\t            (pointPair[0][0] + pointPair[1][0]) / 2,\n\t            (pointPair[0][1] + pointPair[1][1]) / 2\n\t        ];\n\t    }\n\t\n\t    var recognizers = {\n\t\n\t        pinch: function (track, event) {\n\t            var trackLen = track.length;\n\t\n\t            if (!trackLen) {\n\t                return;\n\t            }\n\t\n\t            var pinchEnd = (track[trackLen - 1] || {}).points;\n\t            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\t\n\t            if (pinchPre\n\t                && pinchPre.length > 1\n\t                && pinchEnd\n\t                && pinchEnd.length > 1\n\t            ) {\n\t                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n\t                !isFinite(pinchScale) && (pinchScale = 1);\n\t\n\t                event.pinchScale = pinchScale;\n\t\n\t                var pinchCenter = center(pinchEnd);\n\t                event.pinchX = pinchCenter[0];\n\t                event.pinchY = pinchCenter[1];\n\t\n\t                return {\n\t                    type: 'pinch',\n\t                    target: track[0].target,\n\t                    event: event\n\t                };\n\t            }\n\t        }\n\t\n\t        // Only pinch currently.\n\t    };\n\t\n\t    module.exports = GestureMgr;\n\t\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Storage内容仓库模块\n\t * @module zrender/Storage\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t * @author errorrik (errorrik@gmail.com)\n\t * @author pissang (https://github.com/pissang/)\n\t */\n\t\n\t\n\t    var util = __webpack_require__(4);\n\t\n\t    var Group = __webpack_require__(37);\n\t\n\t    function shapeCompareFunc(a, b) {\n\t        if (a.zlevel === b.zlevel) {\n\t            if (a.z === b.z) {\n\t                if (a.z2 === b.z2) {\n\t                    return a.__renderidx - b.__renderidx;\n\t                }\n\t                return a.z2 - b.z2;\n\t            }\n\t            return a.z - b.z;\n\t        }\n\t        return a.zlevel - b.zlevel;\n\t    }\n\t    /**\n\t     * 内容仓库 (M)\n\t     * @alias module:zrender/Storage\n\t     * @constructor\n\t     */\n\t    var Storage = function () {\n\t        // 所有常规形状，id索引的map\n\t        this._elements = {};\n\t\n\t        this._roots = [];\n\t\n\t        this._displayList = [];\n\t\n\t        this._displayListLen = 0;\n\t    };\n\t\n\t    Storage.prototype = {\n\t\n\t        constructor: Storage,\n\t\n\t        /**\n\t         * 返回所有图形的绘制队列\n\t         * @param {boolean} [update=false] 是否在返回前更新该数组\n\t         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n\t         *\n\t         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n\t         * @return {Array.<module:zrender/graphic/Displayable>}\n\t         */\n\t        getDisplayList: function (update, includeIgnore) {\n\t            includeIgnore = includeIgnore || false;\n\t            if (update) {\n\t                this.updateDisplayList(includeIgnore);\n\t            }\n\t            return this._displayList;\n\t        },\n\t\n\t        /**\n\t         * 更新图形的绘制队列。\n\t         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n\t         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n\t         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n\t         */\n\t        updateDisplayList: function (includeIgnore) {\n\t            this._displayListLen = 0;\n\t            var roots = this._roots;\n\t            var displayList = this._displayList;\n\t            for (var i = 0, len = roots.length; i < len; i++) {\n\t                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n\t            }\n\t            displayList.length = this._displayListLen;\n\t\n\t            for (var i = 0, len = displayList.length; i < len; i++) {\n\t                displayList[i].__renderidx = i;\n\t            }\n\t\n\t            displayList.sort(shapeCompareFunc);\n\t        },\n\t\n\t        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\t\n\t            if (el.ignore && !includeIgnore) {\n\t                return;\n\t            }\n\t\n\t            el.beforeUpdate();\n\t\n\t            el.update();\n\t\n\t            el.afterUpdate();\n\t\n\t            var clipPath = el.clipPath;\n\t            if (clipPath) {\n\t                // clipPath 的变换是基于 group 的变换\n\t                clipPath.parent = el;\n\t                clipPath.updateTransform();\n\t\n\t                // FIXME 效率影响\n\t                if (clipPaths) {\n\t                    clipPaths = clipPaths.slice();\n\t                    clipPaths.push(clipPath);\n\t                }\n\t                else {\n\t                    clipPaths = [clipPath];\n\t                }\n\t            }\n\t\n\t            if (el.type == 'group') {\n\t                var children = el._children;\n\t\n\t                for (var i = 0; i < children.length; i++) {\n\t                    var child = children[i];\n\t\n\t                    // Force to mark as dirty if group is dirty\n\t                    // FIXME __dirtyPath ?\n\t                    child.__dirty = el.__dirty || child.__dirty;\n\t\n\t                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n\t                }\n\t\n\t                // Mark group clean here\n\t                el.__dirty = false;\n\t\n\t            }\n\t            else {\n\t                el.__clipPaths = clipPaths;\n\t\n\t                this._displayList[this._displayListLen++] = el;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 添加图形(Shape)或者组(Group)到根节点\n\t         * @param {module:zrender/Element} el\n\t         */\n\t        addRoot: function (el) {\n\t            // Element has been added\n\t            if (this._elements[el.id]) {\n\t                return;\n\t            }\n\t\n\t            if (el instanceof Group) {\n\t                el.addChildrenToStorage(this);\n\t            }\n\t\n\t            this.addToMap(el);\n\t            this._roots.push(el);\n\t        },\n\t\n\t        /**\n\t         * 删除指定的图形(Shape)或者组(Group)\n\t         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n\t         */\n\t        delRoot: function (elId) {\n\t            if (elId == null) {\n\t                // 不指定elId清空\n\t                for (var i = 0; i < this._roots.length; i++) {\n\t                    var root = this._roots[i];\n\t                    if (root instanceof Group) {\n\t                        root.delChildrenFromStorage(this);\n\t                    }\n\t                }\n\t\n\t                this._elements = {};\n\t                this._roots = [];\n\t                this._displayList = [];\n\t                this._displayListLen = 0;\n\t\n\t                return;\n\t            }\n\t\n\t            if (elId instanceof Array) {\n\t                for (var i = 0, l = elId.length; i < l; i++) {\n\t                    this.delRoot(elId[i]);\n\t                }\n\t                return;\n\t            }\n\t\n\t            var el;\n\t            if (typeof(elId) == 'string') {\n\t                el = this._elements[elId];\n\t            }\n\t            else {\n\t                el = elId;\n\t            }\n\t\n\t            var idx = util.indexOf(this._roots, el);\n\t            if (idx >= 0) {\n\t                this.delFromMap(el.id);\n\t                this._roots.splice(idx, 1);\n\t                if (el instanceof Group) {\n\t                    el.delChildrenFromStorage(this);\n\t                }\n\t            }\n\t        },\n\t\n\t        addToMap: function (el) {\n\t            if (el instanceof Group) {\n\t                el.__storage = this;\n\t            }\n\t            el.dirty();\n\t\n\t            this._elements[el.id] = el;\n\t\n\t            return this;\n\t        },\n\t\n\t        get: function (elId) {\n\t            return this._elements[elId];\n\t        },\n\t\n\t        delFromMap: function (elId) {\n\t            var elements = this._elements;\n\t            var el = elements[elId];\n\t            if (el) {\n\t                delete elements[elId];\n\t                if (el instanceof Group) {\n\t                    el.__storage = null;\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 清空并且释放Storage\n\t         */\n\t        dispose: function () {\n\t            this._elements =\n\t            this._renderList =\n\t            this._roots = null;\n\t        }\n\t    };\n\t\n\t    module.exports = Storage;\n\t\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * 动画主类, 调度和管理所有动画控制器\n\t *\n\t * @module zrender/animation/Animation\n\t * @author pissang(https://github.com/pissang)\n\t */\n\t// TODO Additive animation\n\t// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n\t// https://developer.apple.com/videos/wwdc2014/#236\n\t\n\t\n\t    var util = __webpack_require__(4);\n\t    var Dispatcher = __webpack_require__(60).Dispatcher;\n\t\n\t    var requestAnimationFrame = (typeof window !== 'undefined' &&\n\t                                    (window.requestAnimationFrame\n\t                                    || window.msRequestAnimationFrame\n\t                                    || window.mozRequestAnimationFrame\n\t                                    || window.webkitRequestAnimationFrame))\n\t                                || function (func) {\n\t                                    setTimeout(func, 16);\n\t                                };\n\t\n\t    var Animator = __webpack_require__(17);\n\t    /**\n\t     * @typedef {Object} IZRenderStage\n\t     * @property {Function} update\n\t     */\n\t\n\t    /**\n\t     * @alias module:zrender/animation/Animation\n\t     * @constructor\n\t     * @param {Object} [options]\n\t     * @param {Function} [options.onframe]\n\t     * @param {IZRenderStage} [options.stage]\n\t     * @example\n\t     *     var animation = new Animation();\n\t     *     var obj = {\n\t     *         x: 100,\n\t     *         y: 100\n\t     *     };\n\t     *     animation.animate(node.position)\n\t     *         .when(1000, {\n\t     *             x: 500,\n\t     *             y: 500\n\t     *         })\n\t     *         .when(2000, {\n\t     *             x: 100,\n\t     *             y: 100\n\t     *         })\n\t     *         .start('spline');\n\t     */\n\t    var Animation = function (options) {\n\t\n\t        options = options || {};\n\t\n\t        this.stage = options.stage || {};\n\t\n\t        this.onframe = options.onframe || function() {};\n\t\n\t        // private properties\n\t        this._clips = [];\n\t\n\t        this._running = false;\n\t\n\t        this._time = 0;\n\t\n\t        Dispatcher.call(this);\n\t    };\n\t\n\t    Animation.prototype = {\n\t\n\t        constructor: Animation,\n\t        /**\n\t         * 添加 clip\n\t         * @param {module:zrender/animation/Clip} clip\n\t         */\n\t        addClip: function (clip) {\n\t            this._clips.push(clip);\n\t        },\n\t        /**\n\t         * 添加 animator\n\t         * @param {module:zrender/animation/Animator} animator\n\t         */\n\t        addAnimator: function (animator) {\n\t            animator.animation = this;\n\t            var clips = animator.getClips();\n\t            for (var i = 0; i < clips.length; i++) {\n\t                this.addClip(clips[i]);\n\t            }\n\t        },\n\t        /**\n\t         * 删除动画片段\n\t         * @param {module:zrender/animation/Clip} clip\n\t         */\n\t        removeClip: function(clip) {\n\t            var idx = util.indexOf(this._clips, clip);\n\t            if (idx >= 0) {\n\t                this._clips.splice(idx, 1);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 删除动画片段\n\t         * @param {module:zrender/animation/Animator} animator\n\t         */\n\t        removeAnimator: function (animator) {\n\t            var clips = animator.getClips();\n\t            for (var i = 0; i < clips.length; i++) {\n\t                this.removeClip(clips[i]);\n\t            }\n\t            animator.animation = null;\n\t        },\n\t\n\t        _update: function() {\n\t\n\t            var time = new Date().getTime();\n\t            var delta = time - this._time;\n\t            var clips = this._clips;\n\t            var len = clips.length;\n\t\n\t            var deferredEvents = [];\n\t            var deferredClips = [];\n\t            for (var i = 0; i < len; i++) {\n\t                var clip = clips[i];\n\t                var e = clip.step(time);\n\t                // Throw out the events need to be called after\n\t                // stage.update, like destroy\n\t                if (e) {\n\t                    deferredEvents.push(e);\n\t                    deferredClips.push(clip);\n\t                }\n\t            }\n\t\n\t            // Remove the finished clip\n\t            for (var i = 0; i < len;) {\n\t                if (clips[i]._needsRemove) {\n\t                    clips[i] = clips[len - 1];\n\t                    clips.pop();\n\t                    len--;\n\t                }\n\t                else {\n\t                    i++;\n\t                }\n\t            }\n\t\n\t            len = deferredEvents.length;\n\t            for (var i = 0; i < len; i++) {\n\t                deferredClips[i].fire(deferredEvents[i]);\n\t            }\n\t\n\t            this._time = time;\n\t\n\t            this.onframe(delta);\n\t\n\t            this.trigger('frame', delta);\n\t\n\t            if (this.stage.update) {\n\t                this.stage.update();\n\t            }\n\t        },\n\t        /**\n\t         * 开始运行动画\n\t         */\n\t        start: function () {\n\t            var self = this;\n\t\n\t            this._running = true;\n\t\n\t            function step() {\n\t                if (self._running) {\n\t\n\t                    requestAnimationFrame(step);\n\t\n\t                    self._update();\n\t                }\n\t            }\n\t\n\t            this._time = new Date().getTime();\n\t            requestAnimationFrame(step);\n\t        },\n\t        /**\n\t         * 停止运行动画\n\t         */\n\t        stop: function () {\n\t            this._running = false;\n\t        },\n\t        /**\n\t         * 清除所有动画片段\n\t         */\n\t        clear: function () {\n\t            this._clips = [];\n\t        },\n\t        /**\n\t         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n\t         * @param  {Object} target\n\t         * @param  {Object} options\n\t         * @param  {boolean} [options.loop=false] 是否循环播放动画\n\t         * @param  {Function} [options.getter=null]\n\t         *         如果指定getter函数，会通过getter函数取属性值\n\t         * @param  {Function} [options.setter=null]\n\t         *         如果指定setter函数，会通过setter函数设置属性值\n\t         * @return {module:zrender/animation/Animation~Animator}\n\t         */\n\t        animate: function (target, options) {\n\t            options = options || {};\n\t            var animator = new Animator(\n\t                target,\n\t                options.loop,\n\t                options.getter,\n\t                options.setter\n\t            );\n\t\n\t            return animator;\n\t        }\n\t    };\n\t\n\t    util.mixin(Animation, Dispatcher);\n\t\n\t    module.exports = Animation;\n\t\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Default canvas painter\n\t * @module zrender/Painter\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t *         pissang (https://www.github.com/pissang)\n\t */\n\t \n\t\n\t    var config = __webpack_require__(22);\n\t    var util = __webpack_require__(4);\n\t    var log = __webpack_require__(21);\n\t    var BoundingRect = __webpack_require__(25);\n\t\n\t    var Layer = __webpack_require__(66);\n\t\n\t    function parseInt10(val) {\n\t        return parseInt(val, 10);\n\t    }\n\t\n\t    function isLayerValid(layer) {\n\t        if (!layer) {\n\t            return false;\n\t        }\n\t\n\t        if (layer.isBuildin) {\n\t            return true;\n\t        }\n\t\n\t        if (typeof(layer.resize) !== 'function'\n\t            || typeof(layer.refresh) !== 'function'\n\t        ) {\n\t            return false;\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t    function preProcessLayer(layer) {\n\t        layer.__unusedCount++;\n\t    }\n\t\n\t    function postProcessLayer(layer) {\n\t        layer.__dirty = false;\n\t        if (layer.__unusedCount == 1) {\n\t            layer.clear();\n\t        }\n\t    }\n\t\n\t    var tmpRect = new BoundingRect(0, 0, 0, 0);\n\t    var viewRect = new BoundingRect(0, 0, 0, 0);\n\t    function isDisplayableCulled(el, width, height) {\n\t        tmpRect.copy(el.getBoundingRect());\n\t        if (el.transform) {\n\t            tmpRect.applyTransform(el.transform);\n\t        }\n\t        viewRect.width = width;\n\t        viewRect.height = height;\n\t        return !tmpRect.intersect(viewRect);\n\t    }\n\t\n\t    function isClipPathChanged(clipPaths, prevClipPaths) {\n\t        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n\t            return true;\n\t        }\n\t        for (var i = 0; i < clipPaths.length; i++) {\n\t            if (clipPaths[i] !== prevClipPaths[i]) {\n\t                return true;\n\t            }\n\t        }\n\t    }\n\t\n\t    function doClip(clipPaths, ctx) {\n\t        for (var i = 0; i < clipPaths.length; i++) {\n\t            var clipPath = clipPaths[i];\n\t            var m;\n\t            if (clipPath.transform) {\n\t                m = clipPath.transform;\n\t                ctx.transform(\n\t                    m[0], m[1],\n\t                    m[2], m[3],\n\t                    m[4], m[5]\n\t                );\n\t            }\n\t            var path = clipPath.path;\n\t            path.beginPath(ctx);\n\t            clipPath.buildPath(path, clipPath.shape);\n\t            ctx.clip();\n\t            // Transform back\n\t            if (clipPath.transform) {\n\t                m = clipPath.invTransform;\n\t                ctx.transform(\n\t                    m[0], m[1],\n\t                    m[2], m[3],\n\t                    m[4], m[5]\n\t                );\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/Painter\n\t     * @constructor\n\t     * @param {HTMLElement} root 绘图容器\n\t     * @param {module:zrender/Storage} storage\n\t     * @param {Ojbect} opts\n\t     */\n\t    var Painter = function (root, storage, opts) {\n\t        var singleCanvas = !root.nodeName // In node ?\n\t            || root.nodeName.toUpperCase() === 'CANVAS';\n\t\n\t        opts = opts || {};\n\t\n\t        /**\n\t         * @type {number}\n\t         */\n\t        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n\t        /**\n\t         * @type {boolean}\n\t         * @private\n\t         */\n\t        this._singleCanvas = singleCanvas;\n\t        /**\n\t         * 绘图容器\n\t         * @type {HTMLElement}\n\t         */\n\t        this.root = root;\n\t\n\t        var rootStyle = root.style;\n\t\n\t        // In node environment using node-canvas\n\t        if (rootStyle) {\n\t            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n\t            rootStyle['-webkit-user-select'] = 'none';\n\t            rootStyle['user-select'] = 'none';\n\t            rootStyle['-webkit-touch-callout'] = 'none';\n\t\n\t            root.innerHTML = '';\n\t        }\n\t\n\t        /**\n\t         * @type {module:zrender/Storage}\n\t         */\n\t        this.storage = storage;\n\t\n\t        if (!singleCanvas) {\n\t            var width = this._getWidth();\n\t            var height = this._getHeight();\n\t            this._width = width;\n\t            this._height = height;\n\t\n\t            var domRoot = document.createElement('div');\n\t            this._domRoot = domRoot;\n\t            var domRootStyle = domRoot.style;\n\t\n\t            // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\t            domRootStyle.position = 'relative';\n\t            domRootStyle.overflow = 'hidden';\n\t            domRootStyle.width = this._width + 'px';\n\t            domRootStyle.height = this._height + 'px';\n\t            root.appendChild(domRoot);\n\t\n\t            /**\n\t             * @type {Object.<key, module:zrender/Layer>}\n\t             * @private\n\t             */\n\t            this._layers = {};\n\t            /**\n\t             * @type {Array.<number>}\n\t             * @private\n\t             */\n\t            this._zlevelList = [];\n\t        }\n\t        else {\n\t            // Use canvas width and height directly\n\t            var width = root.width;\n\t            var height = root.height;\n\t            this._width = width;\n\t            this._height = height;\n\t\n\t            // Create layer if only one given canvas\n\t            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\t            var mainLayer = new Layer(root, this, 1);\n\t            mainLayer.initContext();\n\t            // FIXME Use canvas width and height\n\t            // mainLayer.resize(width, height);\n\t            this._layers = {\n\t                0: mainLayer\n\t            };\n\t            this._zlevelList = [0];\n\t        }\n\t\n\t        this._layerConfig = {};\n\t\n\t        this.pathToImage = this._createPathToImage();\n\t    };\n\t\n\t    Painter.prototype = {\n\t\n\t        constructor: Painter,\n\t\n\t        /**\n\t         * If painter use a single canvas\n\t         * @return {boolean}\n\t         */\n\t        isSingleCanvas: function () {\n\t            return this._singleCanvas;\n\t        },\n\t        /**\n\t         * @return {HTMLDivElement}\n\t         */\n\t        getViewportRoot: function () {\n\t            return this._singleCanvas ? this._layers[0].dom : this._domRoot;\n\t        },\n\t\n\t        /**\n\t         * 刷新\n\t         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n\t         */\n\t        refresh: function (paintAll) {\n\t            var list = this.storage.getDisplayList(true);\n\t            var zlevelList = this._zlevelList;\n\t\n\t            this._paintList(list, paintAll);\n\t\n\t            // Paint custum layers\n\t            for (var i = 0; i < zlevelList.length; i++) {\n\t                var z = zlevelList[i];\n\t                var layer = this._layers[z];\n\t                if (!layer.isBuildin && layer.refresh) {\n\t                    layer.refresh();\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        _paintList: function (list, paintAll) {\n\t\n\t            if (paintAll == null) {\n\t                paintAll = false;\n\t            }\n\t\n\t            this._updateLayerStatus(list);\n\t\n\t            var currentLayer;\n\t            var currentZLevel;\n\t            var ctx;\n\t\n\t            var viewWidth = this._width;\n\t            var viewHeight = this._height;\n\t\n\t            this.eachBuildinLayer(preProcessLayer);\n\t\n\t            // var invTransform = [];\n\t            var prevElClipPaths = null;\n\t\n\t            for (var i = 0, l = list.length; i < l; i++) {\n\t                var el = list[i];\n\t                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\t                // Change draw layer\n\t                if (currentZLevel !== elZLevel) {\n\t                    // Only 0 zlevel if only has one canvas\n\t                    currentZLevel = elZLevel;\n\t                    currentLayer = this.getLayer(currentZLevel);\n\t\n\t                    if (!currentLayer.isBuildin) {\n\t                        log(\n\t                            'ZLevel ' + currentZLevel\n\t                            + ' has been used by unkown layer ' + currentLayer.id\n\t                        );\n\t                    }\n\t\n\t                    ctx = currentLayer.ctx;\n\t\n\t                    // Reset the count\n\t                    currentLayer.__unusedCount = 0;\n\t\n\t                    if (currentLayer.__dirty || paintAll) {\n\t                        currentLayer.clear();\n\t                    }\n\t                }\n\t\n\t                if (\n\t                    (currentLayer.__dirty || paintAll)\n\t                    // Ignore invisible element\n\t                    && !el.invisible\n\t                    // Ignore transparent element\n\t                    && el.style.opacity !== 0\n\t                    // Ignore scale 0 element, in some environment like node-canvas\n\t                    // Draw a scale 0 element can cause all following draw wrong\n\t                    && el.scale[0] && el.scale[1]\n\t                    // Ignore culled element\n\t                    && !(el.culling && isDisplayableCulled(el, viewWidth, viewHeight))\n\t                ) {\n\t                    var clipPaths = el.__clipPaths;\n\t\n\t                    // Optimize when clipping on group with several elements\n\t                    if (isClipPathChanged(clipPaths, prevElClipPaths)) {\n\t                        // If has previous clipping state, restore from it\n\t                        if (prevElClipPaths) {\n\t                            ctx.restore();\n\t                        }\n\t                        // New clipping state\n\t                        if (clipPaths) {\n\t                            ctx.save();\n\t                            doClip(clipPaths, ctx);\n\t                        }\n\t                        prevElClipPaths = clipPaths;\n\t                    }\n\t                    // TODO Use events ?\n\t                    el.beforeBrush && el.beforeBrush(ctx);\n\t                    el.brush(ctx, false);\n\t                    el.afterBrush && el.afterBrush(ctx);\n\t                }\n\t\n\t                el.__dirty = false;\n\t            }\n\t\n\t            // If still has clipping state\n\t            if (prevElClipPaths) {\n\t                ctx.restore();\n\t            }\n\t\n\t            this.eachBuildinLayer(postProcessLayer);\n\t        },\n\t\n\t        /**\n\t         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n\t         * @param {number} zlevel\n\t         * @return {module:zrender/Layer}\n\t         */\n\t        getLayer: function (zlevel) {\n\t            if (this._singleCanvas) {\n\t                return this._layers[0];\n\t            }\n\t\n\t            var layer = this._layers[zlevel];\n\t            if (!layer) {\n\t                // Create a new layer\n\t                layer = new Layer('zr_' + zlevel, this, this.dpr);\n\t                layer.isBuildin = true;\n\t\n\t                if (this._layerConfig[zlevel]) {\n\t                    util.merge(layer, this._layerConfig[zlevel], true);\n\t                }\n\t\n\t                this.insertLayer(zlevel, layer);\n\t\n\t                // Context is created after dom inserted to document\n\t                // Or excanvas will get 0px clientWidth and clientHeight\n\t                layer.initContext();\n\t            }\n\t\n\t            return layer;\n\t        },\n\t\n\t        insertLayer: function (zlevel, layer) {\n\t\n\t            var layersMap = this._layers;\n\t            var zlevelList = this._zlevelList;\n\t            var len = zlevelList.length;\n\t            var prevLayer = null;\n\t            var i = -1;\n\t            var domRoot = this._domRoot;\n\t\n\t            if (layersMap[zlevel]) {\n\t                log('ZLevel ' + zlevel + ' has been used already');\n\t                return;\n\t            }\n\t            // Check if is a valid layer\n\t            if (!isLayerValid(layer)) {\n\t                log('Layer of zlevel ' + zlevel + ' is not valid');\n\t                return;\n\t            }\n\t\n\t            if (len > 0 && zlevel > zlevelList[0]) {\n\t                for (i = 0; i < len - 1; i++) {\n\t                    if (\n\t                        zlevelList[i] < zlevel\n\t                        && zlevelList[i + 1] > zlevel\n\t                    ) {\n\t                        break;\n\t                    }\n\t                }\n\t                prevLayer = layersMap[zlevelList[i]];\n\t            }\n\t            zlevelList.splice(i + 1, 0, zlevel);\n\t\n\t            if (prevLayer) {\n\t                var prevDom = prevLayer.dom;\n\t                if (prevDom.nextSibling) {\n\t                    domRoot.insertBefore(\n\t                        layer.dom,\n\t                        prevDom.nextSibling\n\t                    );\n\t                }\n\t                else {\n\t                    domRoot.appendChild(layer.dom);\n\t                }\n\t            }\n\t            else {\n\t                if (domRoot.firstChild) {\n\t                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n\t                }\n\t                else {\n\t                    domRoot.appendChild(layer.dom);\n\t                }\n\t            }\n\t\n\t            layersMap[zlevel] = layer;\n\t        },\n\t\n\t        // Iterate each layer\n\t        eachLayer: function (cb, context) {\n\t            var zlevelList = this._zlevelList;\n\t            var z;\n\t            var i;\n\t            for (i = 0; i < zlevelList.length; i++) {\n\t                z = zlevelList[i];\n\t                cb.call(context, this._layers[z], z);\n\t            }\n\t        },\n\t\n\t        // Iterate each buildin layer\n\t        eachBuildinLayer: function (cb, context) {\n\t            var zlevelList = this._zlevelList;\n\t            var layer;\n\t            var z;\n\t            var i;\n\t            for (i = 0; i < zlevelList.length; i++) {\n\t                z = zlevelList[i];\n\t                layer = this._layers[z];\n\t                if (layer.isBuildin) {\n\t                    cb.call(context, layer, z);\n\t                }\n\t            }\n\t        },\n\t\n\t        // Iterate each other layer except buildin layer\n\t        eachOtherLayer: function (cb, context) {\n\t            var zlevelList = this._zlevelList;\n\t            var layer;\n\t            var z;\n\t            var i;\n\t            for (i = 0; i < zlevelList.length; i++) {\n\t                z = zlevelList[i];\n\t                layer = this._layers[z];\n\t                if (! layer.isBuildin) {\n\t                    cb.call(context, layer, z);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 获取所有已创建的层\n\t         * @param {Array.<module:zrender/Layer>} [prevLayer]\n\t         */\n\t        getLayers: function () {\n\t            return this._layers;\n\t        },\n\t\n\t        _updateLayerStatus: function (list) {\n\t\n\t            var layers = this._layers;\n\t\n\t            var elCounts = {};\n\t\n\t            this.eachBuildinLayer(function (layer, z) {\n\t                elCounts[z] = layer.elCount;\n\t                layer.elCount = 0;\n\t            });\n\t\n\t            for (var i = 0, l = list.length; i < l; i++) {\n\t                var el = list[i];\n\t                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n\t                var layer = layers[zlevel];\n\t                if (layer) {\n\t                    layer.elCount++;\n\t                    // 已经被标记为需要刷新\n\t                    if (layer.__dirty) {\n\t                        continue;\n\t                    }\n\t                    layer.__dirty = el.__dirty;\n\t                }\n\t            }\n\t\n\t            // 层中的元素数量有发生变化\n\t            this.eachBuildinLayer(function (layer, z) {\n\t                if (elCounts[z] !== layer.elCount) {\n\t                    layer.__dirty = true;\n\t                }\n\t            });\n\t        },\n\t\n\t        /**\n\t         * 清除hover层外所有内容\n\t         */\n\t        clear: function () {\n\t            this.eachBuildinLayer(this._clearLayer);\n\t            return this;\n\t        },\n\t\n\t        _clearLayer: function (layer) {\n\t            layer.clear();\n\t        },\n\t\n\t        /**\n\t         * 修改指定zlevel的绘制参数\n\t         *\n\t         * @param {string} zlevel\n\t         * @param {Object} config 配置对象\n\t         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n\t         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n\t         * @param {number} [config.lastFrameAlpha=0.7]\n\t         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n\t         */\n\t        configLayer: function (zlevel, config) {\n\t            if (config) {\n\t                var layerConfig = this._layerConfig;\n\t                if (!layerConfig[zlevel]) {\n\t                    layerConfig[zlevel] = config;\n\t                }\n\t                else {\n\t                    util.merge(layerConfig[zlevel], config, true);\n\t                }\n\t\n\t                var layer = this._layers[zlevel];\n\t\n\t                if (layer) {\n\t                    util.merge(layer, layerConfig[zlevel], true);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 删除指定层\n\t         * @param {number} zlevel 层所在的zlevel\n\t         */\n\t        delLayer: function (zlevel) {\n\t            var layers = this._layers;\n\t            var zlevelList = this._zlevelList;\n\t            var layer = layers[zlevel];\n\t            if (!layer) {\n\t                return;\n\t            }\n\t            layer.dom.parentNode.removeChild(layer.dom);\n\t            delete layers[zlevel];\n\t\n\t            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n\t        },\n\t\n\t        /**\n\t         * 区域大小变化后重绘\n\t         */\n\t        resize: function (width, height) {\n\t            var domRoot = this._domRoot;\n\t            // FIXME Why ?\n\t            domRoot.style.display = 'none';\n\t\n\t            width = width || this._getWidth();\n\t            height = height || this._getHeight();\n\t\n\t            domRoot.style.display = '';\n\t\n\t            // 优化没有实际改变的resize\n\t            if (this._width != width || height != this._height) {\n\t                domRoot.style.width = width + 'px';\n\t                domRoot.style.height = height + 'px';\n\t\n\t                for (var id in this._layers) {\n\t                    this._layers[id].resize(width, height);\n\t                }\n\t\n\t                this.refresh(true);\n\t            }\n\t\n\t            this._width = width;\n\t            this._height = height;\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * 清除单独的一个层\n\t         * @param {number} zlevel\n\t         */\n\t        clearLayer: function (zlevel) {\n\t            var layer = this._layers[zlevel];\n\t            if (layer) {\n\t                layer.clear();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 释放\n\t         */\n\t        dispose: function () {\n\t            this.root.innerHTML = '';\n\t\n\t            this.root =\n\t            this.storage =\n\t\n\t            this._domRoot =\n\t            this._layers = null;\n\t        },\n\t\n\t        /**\n\t         * Get canvas which has all thing rendered\n\t         * @param {Object} opts\n\t         * @param {string} [opts.backgroundColor]\n\t         */\n\t        getRenderedCanvas: function (opts) {\n\t            opts = opts || {};\n\t            if (this._singleCanvas) {\n\t                return this._layers[0].dom;\n\t            }\n\t\n\t            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n\t            imageLayer.initContext();\n\t\n\t            var ctx = imageLayer.ctx;\n\t            imageLayer.clearColor = opts.backgroundColor;\n\t            imageLayer.clear();\n\t\n\t            var displayList = this.storage.getDisplayList(true);\n\t\n\t            for (var i = 0; i < displayList.length; i++) {\n\t                var el = displayList[i];\n\t                if (!el.invisible) {\n\t                    el.beforeBrush && el.beforeBrush(ctx);\n\t                    // TODO Check image cross origin\n\t                    el.brush(ctx, false);\n\t                    el.afterBrush && el.afterBrush(ctx);\n\t                }\n\t            }\n\t\n\t            return imageLayer.dom;\n\t        },\n\t        /**\n\t         * 获取绘图区域宽度\n\t         */\n\t        getWidth: function () {\n\t            return this._width;\n\t        },\n\t\n\t        /**\n\t         * 获取绘图区域高度\n\t         */\n\t        getHeight: function () {\n\t            return this._height;\n\t        },\n\t\n\t        _getWidth: function () {\n\t            var root = this.root;\n\t            var stl = document.defaultView.getComputedStyle(root);\n\t\n\t            // FIXME Better way to get the width and height when element has not been append to the document\n\t            return ((root.clientWidth || parseInt10(stl.width) || parseInt10(root.style.width))\n\t                    - (parseInt10(stl.paddingLeft) || 0)\n\t                    - (parseInt10(stl.paddingRight) || 0)) | 0;\n\t        },\n\t\n\t        _getHeight: function () {\n\t            var root = this.root;\n\t            var stl = document.defaultView.getComputedStyle(root);\n\t\n\t            return ((root.clientHeight || parseInt10(stl.height) || parseInt10(root.style.height))\n\t                    - (parseInt10(stl.paddingTop) || 0)\n\t                    - (parseInt10(stl.paddingBottom) || 0)) | 0;\n\t        },\n\t\n\t        _pathToImage: function (id, path, width, height, dpr) {\n\t            var canvas = document.createElement('canvas');\n\t            var ctx = canvas.getContext('2d');\n\t\n\t            canvas.width = width * dpr;\n\t            canvas.height = height * dpr;\n\t\n\t            ctx.clearRect(0, 0, width * dpr, height * dpr);\n\t\n\t            var pathTransform = {\n\t                position: path.position,\n\t                rotation: path.rotation,\n\t                scale: path.scale\n\t            };\n\t            path.position = [0, 0, 0];\n\t            path.rotation = 0;\n\t            path.scale = [1, 1];\n\t            if (path) {\n\t                path.brush(ctx);\n\t            }\n\t\n\t            var ImageShape = __webpack_require__(38);\n\t            var imgShape = new ImageShape({\n\t                id: id,\n\t                style: {\n\t                    x: 0,\n\t                    y: 0,\n\t                    image: canvas\n\t                }\n\t            });\n\t\n\t            if (pathTransform.position != null) {\n\t                imgShape.position = path.position = pathTransform.position;\n\t            }\n\t\n\t            if (pathTransform.rotation != null) {\n\t                imgShape.rotation = path.rotation = pathTransform.rotation;\n\t            }\n\t\n\t            if (pathTransform.scale != null) {\n\t                imgShape.scale = path.scale = pathTransform.scale;\n\t            }\n\t\n\t            return imgShape;\n\t        },\n\t\n\t        _createPathToImage: function () {\n\t            var me = this;\n\t\n\t            return function (id, e, width, height) {\n\t                return me._pathToImage(\n\t                    id, e, width, height, me.dpr\n\t                );\n\t            };\n\t        }\n\t    };\n\t\n\t    module.exports = Painter;\n\t\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @module zrender/Layer\n\t * @author pissang(https://www.github.com/pissang)\n\t */\n\t\n\t\n\t    var util = __webpack_require__(4);\n\t    var config = __webpack_require__(22);\n\t\n\t    function returnFalse() {\n\t        return false;\n\t    }\n\t\n\t    /**\n\t     * 创建dom\n\t     *\n\t     * @inner\n\t     * @param {string} id dom id 待用\n\t     * @param {string} type dom type，such as canvas, div etc.\n\t     * @param {Painter} painter painter instance\n\t     * @param {number} number\n\t     */\n\t    function createDom(id, type, painter, dpr) {\n\t        var newDom = document.createElement(type);\n\t        var width = painter.getWidth();\n\t        var height = painter.getHeight();\n\t\n\t        var newDomStyle = newDom.style;\n\t        // 没append呢，请原谅我这样写，清晰~\n\t        newDomStyle.position = 'absolute';\n\t        newDomStyle.left = 0;\n\t        newDomStyle.top = 0;\n\t        newDomStyle.width = width + 'px';\n\t        newDomStyle.height = height + 'px';\n\t        newDom.width = width * dpr;\n\t        newDom.height = height * dpr;\n\t\n\t        // id不作为索引用，避免可能造成的重名，定义为私有属性\n\t        newDom.setAttribute('data-zr-dom-id', id);\n\t        return newDom;\n\t    }\n\t\n\t    /**\n\t     * @alias module:zrender/Layer\n\t     * @constructor\n\t     * @extends module:zrender/mixin/Transformable\n\t     * @param {string} id\n\t     * @param {module:zrender/Painter} painter\n\t     * @param {number} [dpr]\n\t     */\n\t    var Layer = function(id, painter, dpr) {\n\t        var dom;\n\t        dpr = dpr || config.devicePixelRatio;\n\t        if (typeof id === 'string') {\n\t            dom = createDom(id, 'canvas', painter, dpr);\n\t        }\n\t        // Not using isDom because in node it will return false\n\t        else if (util.isObject(id)) {\n\t            dom = id;\n\t            id = dom.id;\n\t        }\n\t        this.id = id;\n\t        this.dom = dom;\n\t\n\t        var domStyle = dom.style;\n\t        if (domStyle) { // Not in node\n\t            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\t            domStyle['-webkit-user-select'] = 'none';\n\t            domStyle['user-select'] = 'none';\n\t            domStyle['-webkit-touch-callout'] = 'none';\n\t            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n\t        }\n\t\n\t        this.domBack = null;\n\t        this.ctxBack = null;\n\t\n\t        this.painter = painter;\n\t\n\t        this.config = null;\n\t\n\t        // Configs\n\t        /**\n\t         * 每次清空画布的颜色\n\t         * @type {string}\n\t         * @default 0\n\t         */\n\t        this.clearColor = 0;\n\t        /**\n\t         * 是否开启动态模糊\n\t         * @type {boolean}\n\t         * @default false\n\t         */\n\t        this.motionBlur = false;\n\t        /**\n\t         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n\t         * @type {number}\n\t         * @default 0.7\n\t         */\n\t        this.lastFrameAlpha = 0.7;\n\t\n\t        /**\n\t         * Layer dpr\n\t         * @type {number}\n\t         */\n\t        this.dpr = dpr;\n\t    };\n\t\n\t    Layer.prototype = {\n\t\n\t        constructor: Layer,\n\t\n\t        elCount: 0,\n\t\n\t        __dirty: true,\n\t\n\t        initContext: function () {\n\t            this.ctx = this.dom.getContext('2d');\n\t\n\t            var dpr = this.dpr;\n\t            if (dpr != 1) {\n\t                this.ctx.scale(dpr, dpr);\n\t            }\n\t        },\n\t\n\t        createBackBuffer: function () {\n\t            var dpr = this.dpr;\n\t\n\t            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n\t            this.ctxBack = this.domBack.getContext('2d');\n\t\n\t            if (dpr != 1) {\n\t                this.ctxBack.scale(dpr, dpr);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @param  {number} width\n\t         * @param  {number} height\n\t         */\n\t        resize: function (width, height) {\n\t            var dpr = this.dpr;\n\t\n\t            var dom = this.dom;\n\t            var domStyle = dom.style;\n\t            var domBack = this.domBack;\n\t\n\t            domStyle.width = width + 'px';\n\t            domStyle.height = height + 'px';\n\t\n\t            dom.width = width * dpr;\n\t            dom.height = height * dpr;\n\t\n\t            if (dpr != 1) {\n\t                this.ctx.scale(dpr, dpr);\n\t            }\n\t\n\t            if (domBack) {\n\t                domBack.width = width * dpr;\n\t                domBack.height = height * dpr;\n\t\n\t                if (dpr != 1) {\n\t                    this.ctxBack.scale(dpr, dpr);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * 清空该层画布\n\t         * @param {boolean} clearAll Clear all with out motion blur\n\t         */\n\t        clear: function (clearAll) {\n\t            var dom = this.dom;\n\t            var ctx = this.ctx;\n\t            var width = dom.width;\n\t            var height = dom.height;\n\t\n\t            var haveClearColor = this.clearColor;\n\t            var haveMotionBLur = this.motionBlur && !clearAll;\n\t            var lastFrameAlpha = this.lastFrameAlpha;\n\t\n\t            var dpr = this.dpr;\n\t\n\t            if (haveMotionBLur) {\n\t                if (!this.domBack) {\n\t                    this.createBackBuffer();\n\t                }\n\t\n\t                this.ctxBack.globalCompositeOperation = 'copy';\n\t                this.ctxBack.drawImage(\n\t                    dom, 0, 0,\n\t                    width / dpr,\n\t                    height / dpr\n\t                );\n\t            }\n\t\n\t            ctx.clearRect(0, 0, width / dpr, height / dpr);\n\t            if (haveClearColor) {\n\t                ctx.save();\n\t                ctx.fillStyle = this.clearColor;\n\t                ctx.fillRect(0, 0, width / dpr, height / dpr);\n\t                ctx.restore();\n\t            }\n\t\n\t            if (haveMotionBLur) {\n\t                var domBack = this.domBack;\n\t                ctx.save();\n\t                ctx.globalAlpha = lastFrameAlpha;\n\t                ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);\n\t                ctx.restore();\n\t            }\n\t        }\n\t    };\n\t\n\t    module.exports = Layer;\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * 工具方法类\r\n\t * @author wang.xiaohu\r\n\t */\r\n\t\r\n\t    var Point = __webpack_require__(68);\r\n\t    var Line = __webpack_require__(69);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var BoundingRect = __webpack_require__(25);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    /**\r\n\t     * 构造类继承关系\r\n\t     *\r\n\t     * @param {Function} clazz 源类\r\n\t     * @param {Function} baseClazz 基类\r\n\t     */\r\n\t    function inherits(clazz, baseClazz) {\r\n\t        var clazzPrototype = clazz.prototype;\r\n\t\r\n\t        function F() {}\r\n\t        F.prototype = baseClazz.prototype;\r\n\t        clazz.prototype = new F();\r\n\t\r\n\t        for (var prop in clazzPrototype) {\r\n\t            clazz.prototype[prop] = clazzPrototype[prop];\r\n\t        }\r\n\t        clazz.prototype.constructor = clazz;\r\n\t        clazz.superClass = baseClazz;\r\n\t    };\r\n\t\r\n\t    function getUUID() {\r\n\t        var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split(''),\r\n\t            uuid = new Array(36),\r\n\t            rnd = 0,\r\n\t            r;\r\n\t        for (var i = 0; i < 36; i++) {\r\n\t            if (i == 8 || i == 13 || i == 18 || i == 23) {\r\n\t                uuid[i] = '-';\r\n\t            } else if (i == 14) {\r\n\t                uuid[i] = '4';\r\n\t            } else {\r\n\t                if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\r\n\t                r = rnd & 0xf;\r\n\t                rnd = rnd >> 4;\r\n\t                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n\t            }\r\n\t        }\r\n\t        return \"sid-\" + uuid.join('');\r\n\t    };\r\n\t\r\n\t\r\n\t    /**\r\n\t     * 计算两点之间的距离\r\n\t     *@param {Point} p1 - first {Point}\r\n\t     *@param {Point} p2 - second {Point}\r\n\t     *@return {Number} - the distance between those 2 points. It is always positive.\r\n\t     **/\r\n\t    function distance(p1, p2) {\r\n\t        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 返回一条折线 最长的两个点\r\n\t     * @param  {[type]} points [description]\r\n\t     * @return {[type]}        [description]\r\n\t     */\r\n\t    function getMaxLineLength(points) {\r\n\t        var m = distance(points[0], points[1]);\r\n\t        var result = [points[0], points[1]];\r\n\t        for (var i = 1; i < points.length - 1; i++) {\r\n\t\r\n\t            if (m < distance(points[i], points[i + 1])) {\r\n\t                m = distance(points[i], points[i + 1])\r\n\t                result = [points[i], points[i + 1]];\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    /**Returns the length of a Polyline that would be created with a set of points\r\n\t     *@param {Array} v - an {Array} of {Points}\r\n\t     *@return {Number} - a positive number equal with total length*/\r\n\t    function getPolylineLength(v) {\r\n\t        var l = 0;\r\n\t        for (var i = 0; i < v.length - 1; i++) {\r\n\t            l += distance(v[i], v[i + 1]);\r\n\t        }\r\n\t\r\n\t        return l;\r\n\t    };\r\n\t\r\n\t\r\n\t    /**Returns the max of a vector\r\n\t     *@param {Array} v - vector of {Number}s\r\n\t     *@return {Number} - the maximum number from the vector or NaN if vector is empty\r\n\t     **/\r\n\t    function max(v) {\r\n\t        if (v.lenght == 0) {\r\n\t            return NaN;\r\n\t        } else {\r\n\t            var m = v[0];\r\n\t            for (var i = 0; i < v.length; i++) {\r\n\t                if (m < v[i]) {\r\n\t                    m = v[i];\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return m;\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    /**Returns the min of a vector\r\n\t     *@param {Array} v - vector of {Number}s\r\n\t     *@return {Number} - the minimum number from the vector or NaN if vector is empty\r\n\t     *@author alex@scriptoid.com\r\n\t     **/\r\n\t    function min(v) {\r\n\t        if (v.lenght == 0) {\r\n\t            return NaN;\r\n\t        } else {\r\n\t            var m = v[0];\r\n\t            for (var i = 0; i < v.length; i++) {\r\n\t                if (m > v[i]) {\r\n\t                    m = v[i];\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return m;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 判断 点数组 是否正交直线路径\r\n\t     *Tests if a vector of points is an orthogonal path (moving in multiples of 90 degrees)\r\n\t     *@param {Array} v - an {Array} of {Point}s\r\n\t     *@return {Boolean} - true if path is valid, false otherwise\r\n\t     **/\r\n\t    function orthogonalPath(v) {\r\n\t        if (v.length <= 1) {\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t        for (var i = 0; i < v.length - 1; i++) {\r\n\t            if (v[i].x != v[i + 1].x && v[i].y != v[i + 1].y) {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return true;\r\n\t    };\r\n\t\r\n\t\r\n\t    /**\r\n\t     *Test to see if 2 {Line}s intersects. They are considered finite segments\r\n\t     *and not the infinite lines from geometry\r\n\t     *@param {Line} l1 - fist line/segment\r\n\t     *@param {Line} l2 - last line/segment\r\n\t     *@return {Boolean} true - if the lines intersect or false if not\r\n\t     **/\r\n\t    function lineIntersectsLine(l1, l2) {\r\n\t        // check for two vertical lines\r\n\t        if (l1.startPoint.x == l1.endPoint.x && l2.startPoint.x == l2.endPoint.x) {\r\n\t            return l1.startPoint.x == l2.startPoint.x ? // if 'infinite 'lines do coincide,\r\n\t                // then check segment bounds for overlapping\r\n\t                l1.contains(l2.startPoint.x, l2.startPoint.y) ||\r\n\t                l1.contains(l2.endPoint.x, l2.endPoint.y) :\r\n\t                // lines are paralel\r\n\t                false;\r\n\t        }\r\n\t        // if one line is vertical, and another line is not vertical\r\n\t        else if (l1.startPoint.x == l1.endPoint.x || l2.startPoint.x == l2.endPoint.x) {\r\n\t            // let assume l2 is vertical, otherwise exchange them\r\n\t            if (l1.startPoint.x == l1.endPoint.x) {\r\n\t                var l = l1;\r\n\t                l1 = l2;\r\n\t                l2 = l;\r\n\t            }\r\n\t            // finding intersection of 'infinite' lines\r\n\t            // equation of the first line is y = ax + b, second: x = c\r\n\t            var a = (l1.endPoint.y - l1.startPoint.y) / (l1.endPoint.x - l1.startPoint.x);\r\n\t            var b = l1.startPoint.y - a * l1.startPoint.x;\r\n\t            var x0 = l2.startPoint.x;\r\n\t            var y0 = a * x0 + b;\r\n\t            return l1.contains(x0, y0) && l2.contains(x0, y0);\r\n\t        }\r\n\t\r\n\t        // check normal case - both lines are not vertical\r\n\t        else {\r\n\t            //line equation is : y = a*x + b, b = y - a * x\r\n\t            var a1 = (l1.endPoint.y - l1.startPoint.y) / (l1.endPoint.x - l1.startPoint.x);\r\n\t            var b1 = l1.startPoint.y - a1 * l1.startPoint.x;\r\n\t\r\n\t            var a2 = (l2.endPoint.y - l2.startPoint.y) / (l2.endPoint.x - l2.startPoint.x);\r\n\t            var b2 = l2.startPoint.y - a2 * l2.startPoint.x;\r\n\t\r\n\t            if (a1 == a2) { //paralel lines\r\n\t                return b1 == b2 ?\r\n\t                    // for coincide lines, check for segment bounds overlapping\r\n\t                    l1.contains(l2.startPoint.x, l2.startPoint.y) || l1.contains(l2.endPoint.x, l2.endPoint.y) :\r\n\t                    // not coincide paralel lines have no chance to intersect\r\n\t                    false;\r\n\t            } else { //usual case - non paralel, the 'infinite' lines intersects...we only need to know if inside the segment\r\n\t\r\n\t                /*\r\n\t                 * if one of the lines are vertical, then x0 is equal to their x,\r\n\t                 * otherwise:\r\n\t                 * y1 = a1 * x + b1\r\n\t                 * y2 = a2 * x + b2\r\n\t                 * => x0 = (b2 - b1) / (a1 - a2)\r\n\t                 * => y0 = a1 * x0 + b1\r\n\t                 **/\r\n\t                x0 = (b2 - b1) / (a1 - a2);\r\n\t                y0 = a1 * x0 + b1;\r\n\t                return l1.contains(x0, y0) && l2.contains(x0, y0);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * \r\n\t     *Tests if a a polyline defined by a set of points intersects a rectangle\r\n\t     *@param {Array} points - and {Array} of {Point}s\r\n\t     *@param {Array} bounds - the bounds of the rectangle defined by (x1, y1, x2, y2)\r\n\t     *@param {Boolean} closedPolyline - incase polyline is closed figure then true, else false\r\n\t     * \r\n\t     *@return true - if line intersects the rectangle, false - if not\r\n\t     **/\r\n\t    function polylineIntersectsRectangle(points, bounds, closedPolyline) {\r\n\t\r\n\t\r\n\t        //get the 4 lines/segments represented by the bounds\r\n\t        var lines = [];\r\n\t        lines.push(new Line(new Point(bounds[0], bounds[1]), new Point(bounds[2], bounds[1])));\r\n\t        lines.push(new Line(new Point(bounds[2], bounds[1]), new Point(bounds[2], bounds[3])));\r\n\t        lines.push(new Line(new Point(bounds[2], bounds[3]), new Point(bounds[0], bounds[3])));\r\n\t        lines.push(new Line(new Point(bounds[0], bounds[3]), new Point(bounds[0], bounds[1])));\r\n\t\r\n\t        for (var k = 0; k < points.length - 1; k++) {\r\n\t            //create a line out of each 2 consecutive points            \r\n\t            var tempLine = new Line(points[k], points[k + 1]);\r\n\t\r\n\t            //see if that line intersect any of the line on bounds border\r\n\t            for (var i = 0; i < lines.length; i++) {\r\n\t                if (lineIntersectsLine(tempLine, lines[i])) {\r\n\t                    return true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        //check the closed figure - that is last point connected to the first\r\n\t        if (closedPolyline) {\r\n\t            //create a line out of each 2 consecutive points            \r\n\t            var tempLine = new Line(points[points.length - 1], points[0]);\r\n\t\r\n\t            //see if that line intersect any of the line on bounds border\r\n\t            for (var i = 0; i < lines.length; i++) {\r\n\t                if (lineIntersectsLine(tempLine, lines[i])) {\r\n\t                    return true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return false;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 计算路径的分数\r\n\t     * Score a ortogonal path made out of Points\r\n\t     *Iterates over a set of points (minimum 3)\r\n\t     *For each 3 points (i, i+1, i+2) :\r\n\t     *  - if the 3rd one is after the 2nd on the same line we add +1 \r\n\t     *  - if the 3rd is up or down related to the 2nd we do not do anything +0\r\n\t     *  - if the 3rd goes back we imediatelly return -1\r\n\t     *@param {Array} v - an array of {Point}s\r\n\t     *@return {Number} - -1 if the path is wrong (goes back) or something >= 0 if is fine\r\n\t     *  The bigger the number the smooth the path is\r\n\t     **/\r\n\t    function scorePath(v) {\r\n\t        if (v.length <= 2) {\r\n\t            return -1;\r\n\t        }\r\n\t\r\n\t        var score = 0;\r\n\t        for (var i = 1; i < v.length - 1; i++) {\r\n\t            if (v[i - 1].x == v[i].x && v[i].x == v[i + 1].x) { //on the same vertical\r\n\t                if (signum(v[i + 1].y - v[i].y) == signum(v[i].y - v[i - 1].y)) { //same direction\r\n\t                    score++;\r\n\t                } else { //going back - no good\r\n\t                    return -1;\r\n\t                }\r\n\t            } else if (v[i - 1].y == v[i].y && v[i].y == v[i + 1].y) { //on the same horizontal\r\n\t                if (signum(v[i + 1].x - v[i].x) == signum(v[i].x - v[i - 1].x)) { //same direction\r\n\t                    score++;\r\n\t                } else { //going back - no good\r\n\t                    return -1;\r\n\t                }\r\n\t            } else { //not on same vertical nor horizontal\r\n\t                score--;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return score;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 返回数字符号（+ -)\r\n\t     * Returns the sign of a number\r\n\t     *@param {Number} x - the number\r\n\t     *@returns {Number}\r\n\t     *@see <a href=\"http://en.wikipedia.org/wiki/Sign_function\">http://en.wikipedia.org/wiki/Sign_function</a>\r\n\t     **/\r\n\t    function signum(x) {\r\n\t        if (x > 0)\r\n\t            return 1;\r\n\t        else if (x < 0)\r\n\t            return -1;\r\n\t        else\r\n\t            return 0;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * 判断 点数组 是不是有效路径（没有回路）\r\n\t     *Tests if a vector of points is a valid path (not going back)\r\n\t     *There are a few problems here. If you have p1, p2, p3 and p4 and p2 = p3 you need to ignore that\r\n\t     *@param {Array} v - an {Array} of {Point}s\r\n\t     *@return {Boolean} - true if path is valid, false otherwise\r\n\t     **/\r\n\t    function forwardPath(v) {\r\n\t        if (v.length <= 2) {\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t        for (var i = 0; i < v.length - 2; i++) {\r\n\t            if (v[i].x == v[i + 1].x && v[i + 1].x == v[i + 2].x) { //on the same vertical\r\n\t                if (signum(v[i + 1].y - v[i].y) != 0) { //test only we have a progressing path\r\n\t                    if (signum(v[i + 1].y - v[i].y) == -1 * signum(v[i + 2].y - v[i + 1].y)) { //going back (ignore zero)\r\n\t                        return false;\r\n\t                    }\r\n\t                }\r\n\t            } else if (v[i].y == v[i + 1].y && v[i + 1].y == v[i + 2].y) { //on the same horizontal\r\n\t                if (signum(v[i + 1].x - v[i].x) != 0) { //test only we have a progressing path\r\n\t                    if (signum(v[i + 1].x - v[i].x) == -1 * signum(v[i + 2].x - v[i + 1].x)) { //going back (ignore zero)\r\n\t                        return false;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return true;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 将[x:0,y:0]转化为[0, 0]  给zrender使用   \r\n\t     * @param  {[type]} points [description]\r\n\t     * @return {[type]}        [description]\r\n\t     */\r\n\t    function traslatePoints(points, isRevert) {\r\n\t        var newPoints = [];\r\n\t        if (isRevert) {\r\n\t            for (var i = 0; i < points.length; i++) {\r\n\t                var point = points[i];\r\n\t                newPoints.push(new Point(point[0], point[1]));\r\n\t            }\r\n\t            return newPoints;\r\n\t        } else {\r\n\t            for (var i = 0; i < points.length; i++) {\r\n\t                var point = points[i];\r\n\t                newPoints.push([point.x, point.y]);\r\n\t            }\r\n\t            return newPoints;\r\n\t        };\r\n\t\r\n\t\r\n\t    };\r\n\t\r\n\t    function rotationMatrix(angle) {\r\n\t        var mReturn = [\r\n\t            [Math.cos(angle), -Math.sin(angle), 0],\r\n\t            [Math.sin(angle), Math.cos(angle), 0],\r\n\t            [0, 0, 1]\r\n\t        ];\r\n\t        return mReturn;\r\n\t    };\r\n\t\r\n\t    function translationMatrix(dx, dy) {\r\n\t        return [\r\n\t            [1, 0, dx],\r\n\t            [0, 1, dy],\r\n\t            [0, 0, 1]\r\n\t        ];\r\n\t    };\r\n\t\r\n\t    function scaleMatrix(sx, sy) {\r\n\t        if (sy == null) {\r\n\t            sy = sx;\r\n\t        }\r\n\t        return [\r\n\t            [sx, 0, 0],\r\n\t            [0, sy, 0],\r\n\t            [0, 0, 1]\r\n\t        ];\r\n\t    };\r\n\t\r\n\t    /** It will return the end point of a line on a given angle (clockwise).\r\n\t     * @param {Point} startPoint - the start of the line\r\n\t     * @param {Number} length - the length of the line\r\n\t     * @param {Number} angle - the angle of the line in radians\r\n\t     * @return {Point} - the endPoint of the line\r\n\t     */\r\n\t    function getEndPoint(startPoint, length, angle) {\r\n\t        var endPoint = startPoint.clone();\r\n\t        endPoint.transform(translationMatrix(-startPoint.x, -startPoint.y));\r\n\t        endPoint.y -= length;\r\n\t        endPoint.transform(rotationMatrix(angle));\r\n\t        endPoint.transform(translationMatrix(startPoint.x, startPoint.y));\r\n\t        return endPoint;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 获取获取两个图形的外面四个连接点\r\n\t     * @param  {[type]} node [description]\r\n\t     * @return {[type]}      [description]\r\n\t     */\r\n\t    function getConnectorPoints(node) {\r\n\t        return {\r\n\t            left: new Point(node.x, node.y + node.height / 2), //矩形 左中的位置\r\n\t            top: new Point(node.x + node.width / 2, node.y), //矩形 上中的位置\r\n\t            right: new Point(node.x + node.width, node.y + node.height / 2), //矩形 右中的位置\r\n\t            bottom: new Point(node.x + node.width / 2, node.y + node.height), //矩形 下中的位置\r\n\t            center: new Point(node.x + node.width / 2, node.y + node.height / 2) //中间位置\r\n\t\r\n\t        };\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 获取获取两个图形的外面四个连接点\r\n\t     * @param  {[type]} node [description]\r\n\t     * @return {[type]}      [description]\r\n\t     */\r\n\t    function getSoltPoints(node) {\r\n\t        return [\r\n\t            //top\r\n\t            [Math.round(node.getRect().width / 3 /10)*10, 0 ],\r\n\t            [Math.round(2*node.getRect().width / 3 /10)*10, 0 ],\r\n\t            //right\r\n\t            [node.getRect().width, Math.round(node.getRect().height / 3 /10)*10 ],\r\n\t            [node.getRect().width, Math.round(2*node.getRect().height / 3 /10)*10 ],\r\n\t            //bottom\r\n\t            [Math.round(node.getRect().width / 3 /10)*10, node.getRect().height ],\r\n\t            [Math.round(2*node.getRect().width / 3 /10)*10, node.getRect().height ],\r\n\t            //left\r\n\t            [0, Math.round(node.getRect().height / 3 /10)*10 ],\r\n\t            [0, Math.round(2*node.getRect().height / 3 /10)*10 ],\r\n\t\r\n\t        ]\r\n\t    };    \r\n\t\r\n\t    /**\r\n\t     * 计算 p1 p2两点所连接的直线的角度\r\n\t     * @param  {[type]} p1 [description]\r\n\t     * @param  {[type]} p2 [description]\r\n\t     * @return {[type]}    [description]\r\n\t     */\r\n\t    function tangentRotation(p1, p2) {\r\n\t        return -Math.PI / 2 - Math.atan2(\r\n\t            p2.y - p1.y, p2.x - p1.x\r\n\t        );\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 判断3点是否在一条直线上\r\n\t     * Tests if 3 points are coliniar with matrix determinants.\r\n\t     * If the determinat of matrix \r\n\t     * /         \\\r\n\t     * | x1 y1 1 |\r\n\t     * | x2 y2 1 |\r\n\t     * | x3 y3 1 |\r\n\t     * \\         /\r\n\t     * is zero it means that the points are colinear\r\n\t     *@param {Point} p1 - first point\r\n\t     *@param {Point} p2 - second point\r\n\t     *@param {Point} p3 - third point\r\n\t     *@return {Boolean} - true if coliniar and false if not\r\n\t     *@author Alex\r\n\t     *@see http://en.wikipedia.org/wiki/Determinant\r\n\t     *@see https://people.richland.edu/james/lecture/m116/matrices/applications.html\r\n\t     **/\r\n\t    function collinearity(p1, p2, p3, precission) {\r\n\t        var determinant = (p1.x * p2.y + p1.y * p3.x + p2.x * p3.y) - (p2.y * p3.x + p1.y * p2.x + p1.x * p3.y);\r\n\t\r\n\t        if (precission) {\r\n\t            return Math.abs(determinant) <= precission;\r\n\t        } else {\r\n\t            return determinant === 0;\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    /**\r\n\t     * 四舍五入 保存decimals的小数\r\n\t     **/\r\n\t    function enhancedRound(number, decimals) {\r\n\t        return Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 获取两点之间的长度\r\n\t     **/\r\n\t    function getLength(startPoint, endPoint) {\r\n\t        return Math.sqrt(Math.pow(startPoint.x - endPoint.x, 2) + Math.pow(startPoint.y - endPoint.y, 2));\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 获取角度 \r\n\t     * @param  {[type]} centerPoint  [description]\r\n\t     * @param  {[type]} outsidePoint [description]\r\n\t     * @param  {[type]} round        [description]\r\n\t     * @return {[type]}              [description]\r\n\t     */\r\n\t    function getAngle(centerPoint, outsidePoint, round) {\r\n\t        centerPoint.x = enhancedRound(centerPoint.x, 5);\r\n\t        centerPoint.y = enhancedRound(centerPoint.y, 5);\r\n\t        outsidePoint.x = enhancedRound(outsidePoint.x, 5);\r\n\t        outsidePoint.y = enhancedRound(outsidePoint.y, 5);\r\n\t        var angle = Math.atan((outsidePoint.x - centerPoint.x) / (outsidePoint.y - centerPoint.y));\r\n\t        angle = -angle;\r\n\t\r\n\t        //endAngle+=90;\r\n\t        if (outsidePoint.x >= centerPoint.x && outsidePoint.y >= centerPoint.y) {\r\n\t            angle += Math.PI;\r\n\t        } else if (outsidePoint.x <= centerPoint.x && outsidePoint.y >= centerPoint.y) {\r\n\t            angle += Math.PI;\r\n\t        } else if (outsidePoint.x <= centerPoint.x && outsidePoint.y <= centerPoint.y) {\r\n\t            angle += Math.PI * 2;\r\n\t        }\r\n\t        while (angle >= Math.PI * 2) {\r\n\t            angle -= Math.PI * 2;\r\n\t        }\r\n\t        if (isNaN(angle)) { //Nan\r\n\t            angle = 0; //we are at center point;\r\n\t        }\r\n\t        if (round) {\r\n\t            angle = Math.round(angle / round) * round\r\n\t        }\r\n\t        return angle;\r\n\t    };\r\n\t\r\n\t    function getRect(node) {\r\n\t        var boundingRect = node.getBoundingRect();\r\n\t        //创建最小包围盒虚线\r\n\t        var points = [];\r\n\t        points[0] = [-boundingRect.width / 2, -boundingRect.height / 2];\r\n\t        points[1] = [boundingRect.width / 2, -boundingRect.height / 2];\r\n\t        points[2] = [boundingRect.width / 2, boundingRect.height / 2];\r\n\t        points[3] = [-boundingRect.width / 2, boundingRect.height / 2];\r\n\t        points[4] = [-boundingRect.width / 2, -boundingRect.height / 2];\r\n\t\r\n\t        var boundRect, cx, cy;\r\n\t        if (node instanceof graphic.Circle) {\r\n\t            //注: 因事件为圆形  所以 x y 为圆心的位置  包围矩形要减去宽度一半 \r\n\t            boundRect = new BoundingRect(node.position[0] - boundingRect.width / 2,\r\n\t                node.position[1] - boundingRect.height / 2,\r\n\t                boundingRect.width, boundingRect.height);\r\n\t            cx = node.position[0];\r\n\t            cy = node.position[1];\r\n\t        } else {\r\n\t            boundRect = new BoundingRect(node.position[0],\r\n\t                node.position[1],\r\n\t                boundingRect.width, boundingRect.height);\r\n\t            cx = node.position[0] + boundingRect.width / 2;\r\n\t            cy = node.position[1] + boundingRect.height / 2;\r\n\t        }\r\n\t        return {\r\n\t            x: cx,\r\n\t            y: cy,\r\n\t            width: boundingRect.width,\r\n\t            height: boundingRect.height,\r\n\t            points: points,\r\n\t            boundingRect: boundRect,\r\n\t        };\r\n\t    };\r\n\t\r\n\t    var StackedMap = {\r\n\t        createNew: function() {\r\n\t            var stack = [];\r\n\t\r\n\t            return {\r\n\t                add: function(key, value) {\r\n\t                    var arrKey = this.get(key);\r\n\t                    arrKey.push(value)\r\n\t\r\n\t                },\r\n\t                get: function(key) {\r\n\t                    for (var i = 0; i < stack.length; i++) {\r\n\t                        if (key == stack[i].key) {\r\n\t                            return stack[i].value;\r\n\t                        }\r\n\t                    }\r\n\t                    //如果没有找到的话，则创建一个新的数组\r\n\t                    var value = [];\r\n\t                    stack.push({ key: key, value: value });\r\n\t                    return value;\r\n\t                },\r\n\t                keys: function() {\r\n\t                    var keys = [];\r\n\t                    for (var i = 0; i < stack.length; i++) {\r\n\t                        keys.push(stack[i].key);\r\n\t                    }\r\n\t                    return keys;\r\n\t                },\r\n\t                top: function() {\r\n\t                    return stack[stack.length - 1];\r\n\t                },\r\n\t                remove: function(key) {\r\n\t                    var idx = -1;\r\n\t                    for (var i = 0; i < stack.length; i++) {\r\n\t                        if (key == stack[i].key) {\r\n\t                            idx = i;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    return stack.splice(idx, 1)[0];\r\n\t                },\r\n\t                removeTop: function() {\r\n\t                    return stack.splice(stack.length - 1, 1)[0];\r\n\t                },\r\n\t                length: function() {\r\n\t                    return stack.length;\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t    };\r\n\t\r\n\t    function randomColor() {\r\n\t        var arrHex = [\"0\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\"],\r\n\t            strHex = \"#\",\r\n\t            index;\r\n\t        for (var i = 0; i < 6; i++) {\r\n\t            index = Math.round(Math.random() * 15);\r\n\t            strHex += arrHex[index];\r\n\t        }\r\n\t        return strHex;\r\n\t    };\r\n\t\r\n\t    function isUndefined(obj) {\r\n\t        return obj === void 0;\r\n\t    };\r\n\t\r\n\t    // By default, Underscore uses ERB-style template delimiters, change the\r\n\t    // following template settings to use alternative delimiters.\r\n\t    var templateSettings = {\r\n\t        evaluate: /<%([\\s\\S]+?)%>/g,\r\n\t        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n\t        escape: /<%-([\\s\\S]+?)%>/g\r\n\t    };\r\n\t\r\n\t    // When customizing `templateSettings`, if you don't want to define an\r\n\t    // interpolation, evaluation or escaping regex, we need one that is\r\n\t    // guaranteed not to match.\r\n\t    var noMatch = /(.)^/;\r\n\t\r\n\t    // Certain characters need to be escaped so that they can be put into a\r\n\t    // string literal.\r\n\t    var escapes = {\r\n\t        \"'\": \"'\",\r\n\t        '\\\\': '\\\\',\r\n\t        '\\r': 'r',\r\n\t        '\\n': 'n',\r\n\t        '\\u2028': 'u2028',\r\n\t        '\\u2029': 'u2029'\r\n\t    };\r\n\t\r\n\t    var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\r\n\t\r\n\t    var escapeChar = function(match) {\r\n\t        return '\\\\' + escapes[match];\r\n\t    };\r\n\t\r\n\t    // JavaScript micro-templating, similar to John Resig's implementation.\r\n\t    // Underscore templating handles arbitrary delimiters, preserves whitespace,\r\n\t    // and correctly escapes quotes within interpolated code.\r\n\t    // NB: `oldSettings` only exists for backwards compatibility.\r\n\t    function template(text, settings, oldSettings) {\r\n\t        if (!settings && oldSettings) settings = oldSettings;\r\n\t        settings = settings || {}\r\n\t        settings = zrUtil.defaults(settings, templateSettings, true);\r\n\t\r\n\t        // Combine delimiters into one regular expression via alternation.\r\n\t        var matcher = RegExp([\r\n\t            (settings.escape || noMatch).source,\r\n\t            (settings.interpolate || noMatch).source,\r\n\t            (settings.evaluate || noMatch).source\r\n\t        ].join('|') + '|$', 'g');\r\n\t\r\n\t        // Compile the template source, escaping string literals appropriately.\r\n\t        var index = 0;\r\n\t        var source = \"__p+='\";\r\n\t        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n\t            source += text.slice(index, offset).replace(escaper, escapeChar);\r\n\t            index = offset + match.length;\r\n\t\r\n\t            if (escape) {\r\n\t                source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n\t            } else if (interpolate) {\r\n\t                source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n\t            } else if (evaluate) {\r\n\t                source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n\t            }\r\n\t\r\n\t            // Adobe VMs need the match returned to produce the correct offest.\r\n\t            return match;\r\n\t        });\r\n\t        source += \"';\\n\";\r\n\t\r\n\t        // If a variable is not specified, place data values in local scope.\r\n\t        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\t\r\n\t        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n\t            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n\t            source + 'return __p;\\n';\r\n\t\r\n\t        try {\r\n\t            var render = new Function(settings.variable || 'obj', source);\r\n\t        } catch (e) {\r\n\t            e.source = source;\r\n\t            throw e;\r\n\t        }\r\n\t\r\n\t        var template = function(data) {\r\n\t            return render.call(this, data);\r\n\t        };\r\n\t\r\n\t        // Provide the compiled source as a convenience for precompilation.\r\n\t        var argument = settings.variable || 'obj';\r\n\t        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\t\r\n\t        return template;\r\n\t    };\r\n\t    module.exports = {\r\n\t        inherits: inherits,\r\n\t        getUUID: getUUID,\r\n\t        distance: distance,\r\n\t        getPolylineLength: getPolylineLength,\r\n\t        max: max,\r\n\t        min: min,\r\n\t        orthogonalPath: orthogonalPath,\r\n\t        polylineIntersectsRectangle: polylineIntersectsRectangle,\r\n\t        scorePath: scorePath,\r\n\t        forwardPath: forwardPath,\r\n\t        traslatePoints: traslatePoints,\r\n\t        getEndPoint: getEndPoint,\r\n\t        getConnectorPoints: getConnectorPoints,\r\n\t        tangentRotation: tangentRotation,\r\n\t        collinearity: collinearity,\r\n\t        translationMatrix: translationMatrix,\r\n\t        scaleMatrix: scaleMatrix,\r\n\t        round: enhancedRound,\r\n\t        getLength: getLength,\r\n\t        getAngle: getAngle,\r\n\t        getRect: getRect,\r\n\t        StackedMap: StackedMap,\r\n\t        getMaxLineLength: getMaxLineLength,\r\n\t        randomColor: randomColor,\r\n\t        template: template,\r\n\t        isUndefined: isUndefined,\r\n\t        getSoltPoints:getSoltPoints\r\n\t    };\r\n\t\r\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports) {\n\n\t\r\n\t\r\n\t    /**\r\n\t      * Creates an instance of Point\r\n\t      *\r\n\t      *\r\n\t      * @constructor\r\n\t      * @this {Point}\r\n\t      * @param {Number} x The x coordinate of point.\r\n\t      * @param {Number} y The y coordinate of point.\r\n\t      * Note: Even if it is named Point this class should be named Dot as Dot is closer\r\n\t      * then Point from math perspective.\r\n\t      **/\r\n\t    function Point(x, y){\r\n\t        /**The x coordinate of point*/\r\n\t        this.x = x;\r\n\t        \r\n\t        /**The y coordinate of point*/\r\n\t        this.y = y;\r\n\t        \r\n\t\r\n\t    }\r\n\t\r\n\t    /**Creates a {Point} out of JSON parsed object\r\n\t     *@param {JSONObject} o - the JSON parsed object\r\n\t     *@return {Point} a newly constructed Point\r\n\t     **/\r\n\t    Point.load = function(o){\r\n\t        var newPoint = new Point(Number(o.x), Number(o.y));\r\n\t        return newPoint;\r\n\t    }\r\n\t\r\n\t\r\n\t    /**Creates an array of points from an array of {JSONObject}s\r\n\t     *@param {Array} v - the array of JSONObjects\r\n\t     *@return an {Array} of {Point}s\r\n\t     **/\r\n\t    Point.loadArray = function(v){\r\n\t        var newPoints = [];\r\n\t        for(var i=0; i< v.length; i++){\r\n\t            newPoints.push(Point.load(v[i]));\r\n\t        }\r\n\t        return newPoints;\r\n\t    }\r\n\t\r\n\t\r\n\t    /**Clones an array of points\r\n\t     *@param {Array} v - the array of {Point}s\r\n\t     *@return an {Array} of {Point}s\r\n\t     **/\r\n\t    Point.cloneArray = function(v){\r\n\t        var newPoints = [];\r\n\t        for(var i=0; i< v.length; i++){\r\n\t            newPoints.push(v[i].clone());\r\n\t        }\r\n\t        return newPoints;\r\n\t    }\r\n\t\r\n\t    Point.prototype = {\r\n\t        constructor : Point,\r\n\t        \r\n\t        transform:function(matrix){\r\n\t            var oldX = this.x;\r\n\t            var oldY = this.y;\r\n\t            this.x = matrix[0][0] * oldX + matrix[0][1] * oldY + matrix[0][2];\r\n\t            this.y = matrix[1][0] * oldX + matrix[1][1] * oldY + matrix[1][2];\r\n\t        },\r\n\t        \r\n\t        /**Tests if this point is similar to other point\r\n\t         *@param {Point} anotherPoint - the other point\r\n\t         **/\r\n\t        equals:function(anotherPoint){\r\n\t            if(! (anotherPoint instanceof Point) ){\r\n\t                return false;\r\n\t            }\r\n\t            return (this.x == anotherPoint.x)\r\n\t            && (this.y == anotherPoint.y)\r\n\t        },\r\n\t\r\n\t        /**Clone current Point\r\n\t         **/\r\n\t        clone: function(){\r\n\t            var newPoint = new Point(this.x, this.y);\r\n\t            return newPoint;\r\n\t        },\r\n\t\r\n\t        /**Tests to see if a point (x, y) is within a range of current Point\r\n\t         *@param {Numeric} x - the x coordinate of tested point\r\n\t         *@param {Numeric} y - the x coordinate of tested point\r\n\t         *@param {Numeric} radius - the radius of the vicinity\r\n\t         **/\r\n\t        near:function(x, y, radius){\r\n\t            var distance = Math.sqrt(Math.pow(this.x - x, 2) + Math.pow(this.y - y, 2));\r\n\t\r\n\t            return (distance <= radius);\r\n\t        },\r\n\t\r\n\t        contains: function(x,y){\r\n\t            return this.x == x && this.y == y;\r\n\t        },\r\n\t\r\n\t        toString:function(){\r\n\t            return '[' + this.x + ',' + this.y + ']';\r\n\t        },\r\n\t\r\n\t        getPoints:function(){\r\n\t            return [this];\r\n\t        }\r\n\t    };\r\n\t    module.exports = Point;\r\n\t    \n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\t\r\n\t\r\n\t    /**\r\n\t      * Creates an instance of a Line. A Line is actually a segment and not a pure\r\n\t      * geometrical Line\r\n\t      *\r\n\t      * @constructor\r\n\t      * @this {Line}\r\n\t      * @param {Point} startPoint - starting point of the line\r\n\t      * @param {Point} endPoint - the ending point of the line\r\n\t      **/\r\n\t    function Line(startPoint, endPoint){\r\n\t        /**Starting {@link Point} of the line*/\r\n\t        this.startPoint = startPoint;\r\n\t        \r\n\t        /**Ending {@link Point} of the line*/\r\n\t        this.endPoint = endPoint;\r\n\t        \r\n\t        /**Serialization type*/\r\n\t        this.oType = 'Line'; //object type used for JSON deserialization\r\n\t    }\r\n\t\r\n\t    /**Creates a {Line} out of JSON parsed object\r\n\t     *@param {JSONObject} o - the JSON parsed object\r\n\t     *@return {Line} a newly constructed Line\r\n\t     **/\r\n\t    Line.load = function(o){\r\n\t        var newLine = new Line(\r\n\t            Point.load(o.startPoint),\r\n\t            Point.load(o.endPoint)\r\n\t        );\r\n\t\r\n\t        return newLine;\r\n\t    }\r\n\t\r\n\t    Line.prototype = {\r\n\t        contructor: Line,\r\n\t\r\n\t\r\n\t\r\n\t        clone:function(){\r\n\t            var ret = new Line(this.startPoint.clone(), this.endPoint.clone());\r\n\t            return ret;\r\n\t        },\r\n\t\r\n\t        equals:function(anotherLine){\r\n\t            if(!anotherLine instanceof Line){\r\n\t                return false;\r\n\t            }\r\n\t            return this.startPoint.equals(anotherLine.startPoint)\r\n\t            && this.endPoint.equals(anotherLine.endPoint)\r\n\t        },\r\n\t\r\n\t        /** Tests to see if a point belongs to this line (not as infinite line but more like a segment)\r\n\t         * Algorithm: Compute line's equation and see if (x, y) verifies it.\r\n\t         * @param {Number} x - the X coordinates\r\n\t         * @param {Number} y - the Y coordinates\r\n\t         **/\r\n\t        contains: function(x, y){\r\n\t            // if the point is inside rectangle bounds of the segment\r\n\t            if (Math.min(this.startPoint.x, this.endPoint.x) <= x\r\n\t                && x <= Math.max(this.startPoint.x, this.endPoint.x)\r\n\t                && Math.min(this.startPoint.y, this.endPoint.y) <= y\r\n\t                && y <= Math.max(this.startPoint.y, this.endPoint.y)) {\r\n\t\r\n\t                // check for vertical line\r\n\t                if (this.startPoint.x == this.endPoint.x) {\r\n\t                    return x == this.startPoint.x;\r\n\t                } else { // usual (not vertical) line can be represented as y = a * x + b\r\n\t                    var a = (this.endPoint.y - this.startPoint.y) / (this.endPoint.x - this.startPoint.x);\r\n\t                    var b = this.startPoint.y - a * this.startPoint.x;\r\n\t                    return y == a * x + b;\r\n\t                }\r\n\t            } else {\r\n\t                return false;\r\n\t            }\r\n\t        },\r\n\t\r\n\t        /*\r\n\t         *See if we are near a {Line} by a certain radius (also includes the extremities into computation)\r\n\t         *@param {Number} x - the x coordinates\r\n\t         *@param {Number} y - the y coordinates\r\n\t         *@param {Number} radius - the radius to search for\r\n\t         *@see http://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\r\n\t         *@see \"Mathematics for Computer Graphics, 2nd Ed., by John Vice, page 227\"\r\n\t         **/\r\n\t        near:function(x,y,radius){\r\n\t            \r\n\t            if(this.endPoint.x === this.startPoint.x){ //Vertical line, so the vicinity area is a rectangle\r\n\t                return ( (this.startPoint.y-radius<=y && this.endPoint.y+radius>=y) \r\n\t                        || (this.endPoint.y-radius<=y && this.startPoint.y+radius>=y))\r\n\t                && x > this.startPoint.x - radius && x < this.startPoint.x + radius ;\r\n\t            }\r\n\t            \r\n\t            if(this.startPoint.y === this.endPoint.y){ //Horizontal line, so the vicinity area is a rectangle\r\n\t                return ( (this.startPoint.x - radius<=x && this.endPoint.x+radius>=x) \r\n\t                        || (this.endPoint.x-radius<=x && this.startPoint.x+radius>=x))\r\n\t                        && y>this.startPoint.y-radius && y<this.startPoint.y+radius ;\r\n\t            }\r\n\t\r\n\t\r\n\t            var startX = Math.min(this.endPoint.x,this.startPoint.x);\r\n\t            var startY = Math.min(this.endPoint.y,this.startPoint.y);\r\n\t            var endX = Math.max(this.endPoint.x,this.startPoint.x);\r\n\t            var endY = Math.max(this.endPoint.y,this.startPoint.y);\r\n\t            \r\n\t            /*We will compute the distance from point to the line\r\n\t             * by using the algorithm from \r\n\t             * http://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\r\n\t             * */\r\n\t\r\n\t            //First we need to find a,b,c of the line equation ax + by + c = 0\r\n\t            var a = this.endPoint.y - this.startPoint.y;\r\n\t            var b = this.startPoint.x - this.endPoint.x;        \r\n\t            var c = -(this.startPoint.x * this.endPoint.y - this.endPoint.x * this.startPoint.y);\r\n\t\r\n\t            //Secondly we get the distance \"Mathematics for Computer Graphics, 2nd Ed., by John Vice, page 227\"\r\n\t            var d = Math.abs( (a*x + b*y + c) / Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) );\r\n\t\r\n\t            //Thirdly we get coordinates of closest line's point to target point\r\n\t            //http://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line#Cartesian_coordinates\r\n\t            var closestX = (b * (b*x - a*y) - a*c) / ( Math.pow(a,2) + Math.pow(b,2) );\r\n\t            var closestY = (a * (-b*x + a*y) - b*c) / ( Math.pow(a,2) + Math.pow(b,2) );\r\n\t\r\n\t            var r = ( d <= radius && endX>=closestX && closestX>=startX && endY>=closestY && closestY>=startY ) //the projection of the point falls INSIDE of the segment\r\n\t                || this.startPoint.near(x,y,radius) || this.endPoint.near(x,y,radius); //the projection of the point falls OUTSIDE of the segment \r\n\t\r\n\t            return  r;\r\n\t\r\n\t        },\r\n\t\r\n\t        /**we need to create a new array each time, or we will affect the actual shape*/\r\n\t        getPoints:function(){\r\n\t            var points = [];\r\n\t            points.push(this.startPoint);\r\n\t            points.push(this.endPoint);\r\n\t            return points;\r\n\t        },\r\n\t        \r\n\t        /**Return the {Point} corresponding the t certain t value\r\n\t         * @param {Number} t the value of parameter t, where t in [0,1], t is like a percent*/\r\n\t        getPoint: function(t){\r\n\t            var Xp = t * (this.endPoint.x - this.startPoint.x) + this.startPoint.x;\r\n\t            var Yp = t * (this.endPoint.y - this.startPoint.y) + this.startPoint.y;\r\n\t            \r\n\t            return new Point(Xp, Yp);\r\n\t        },    \r\n\t        \r\n\t        // /**\r\n\t        //  * Returns the middle of the line\r\n\t        //  * @return {Point} the middle point\r\n\t        //  * */\r\n\t        // getMiddle : function(){\r\n\t        //     return Util.getMiddle(this.startPoint, this.endPoint);\r\n\t        // },\r\n\t        \r\n\t        \r\n\t        // getLength : function(){\r\n\t        //     return Util.getLength(this.startPoint, this.endPoint);\r\n\t        // },\r\n\t\r\n\t        // /**\r\n\t        //  *Get bounds for this line\r\n\t        //  *@author Alex Gheorghiu <alex@scriptoid.com>\r\n\t        //  **/\r\n\t        // getBounds:function(){\r\n\t        //     return Util.getBounds(this.getPoints());\r\n\t        // },\r\n\t\r\n\t        /**String representation*/\r\n\t        toString:function(){\r\n\t            return 'line(' + this.startPoint + ',' + this.endPoint + ')';\r\n\t        }\r\n\t    }\r\n\t    module.exports = Line;\r\n\t\r\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Network model\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t    var Model = __webpack_require__(71);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t\r\n\t    var NetworkModel = Model.extend({\r\n\t        /**\r\n\t         * @type {Object}\r\n\t         * @protected\r\n\t         */\r\n\t        defaultOption: {\r\n\t        \tresourceId: \"\",  //资源ID\r\n\t            properties: {\r\n\t                type: -1,  //类型\r\n\t                name: \"\", //名称                \r\n\t                notes: \"\",  //备注\r\n\t                //no: \"\" \r\n\t                extProperties: {\r\n\t                },  //扩展属性\r\n\t                bounds: {\r\n\t                    upperLeft: {x: 0, y: 0},  //左上角坐标\r\n\t                    lowerRight: {x: 0, y: 0} //右下角坐标\r\n\t                }\r\n\t            },\r\n\t            stencil: {type: \"NextworkNode\"},\r\n\t            showTip: false\r\n\t        },\r\n\t\r\n\t        init: function (option, parentModel, extraOpt) {\r\n\t            zrUtil.merge(option, this.getDefaultOption());\r\n\t        },\r\n\t\r\n\t        getDefaultOption: function () {\r\n\t            if (!this.hasOwnProperty('__defaultOption')) {\r\n\t                var optList = [];\r\n\t                var Class = this.constructor;\r\n\t                while (Class) {\r\n\t                    var opt = Class.prototype.defaultOption;\r\n\t                    opt && optList.push(opt);\r\n\t                    Class = Class.superClass;\r\n\t                }\r\n\t\r\n\t                var defaultOption = {};\r\n\t                for (var i = optList.length - 1; i >= 0; i--) {\r\n\t                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n\t                }\r\n\t                this.__defaultOption = defaultOption;\r\n\t            }\r\n\t            return this.__defaultOption;                \r\n\t        }\r\n\t\r\n\t    });\r\n\t    module.exports = NetworkModel;\r\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @module model/Model\r\n\t */\r\n\t\r\n\t\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var clazzUtil = __webpack_require__(72);\r\n\t\r\n\t    /**\r\n\t     * @constructor\r\n\t     * @param {Object} option\r\n\t     * @param {module:model/Model} parentModel\r\n\t     * @param {Object} extraOpt\r\n\t     */\r\n\t    function Model(option, parentModel,  extraOpt) {\r\n\t        /**\r\n\t         * @type {module:model/Model}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.parentModel = parentModel;\r\n\t\r\n\t        /**\r\n\t         * @type {Object}\r\n\t         * @protected\r\n\t         */\r\n\t        this.option = option;\r\n\t\r\n\t        // Simple optimization\r\n\t        if (this.init) {\r\n\t            if (arguments.length <= 3) {\r\n\t                this.init(option, parentModel,  extraOpt);\r\n\t            }\r\n\t            else {\r\n\t                this.init.apply(this, arguments);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    Model.prototype = {\r\n\t\r\n\t        constructor: Model,\r\n\t\r\n\t        /**\r\n\t         * Model 的初始化函数\r\n\t         * @param {Object} option\r\n\t         */\r\n\t        init: function (option, parentModel, extraOpt) {\r\n\t            zrUtil.merge(option, this.getDefaultOption());\r\n\t        },\r\n\t\r\n\t        getDefaultOption: function () {\r\n\t            if (!this.hasOwnProperty('__defaultOption')) {\r\n\t                var optList = [];\r\n\t                var Class = this.constructor;\r\n\t                while (Class) {\r\n\t                    var opt = Class.prototype.defaultOption;\r\n\t                    opt && optList.push(opt);\r\n\t                    Class = Class.superClass;\r\n\t                }\r\n\t\r\n\t                var defaultOption = {};\r\n\t                for (var i = optList.length - 1; i >= 0; i--) {\r\n\t                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n\t                }\r\n\t                this.__defaultOption = defaultOption;\r\n\t            }\r\n\t            return this.__defaultOption;\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * 从新的 Option merge\r\n\t         */\r\n\t        mergeOption: function (option) {\r\n\t            zrUtil.merge(this.option, option, true);\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * @param {string} path\r\n\t         * @param {boolean} [ignoreParent=false]\r\n\t         * @return {*}\r\n\t         */\r\n\t        get: function (path, ignoreParent) {\r\n\t            if (!path) {\r\n\t                return this.option;\r\n\t            }\r\n\t\r\n\t            if (typeof path === 'string') {\r\n\t                path = path.split('.');\r\n\t            }\r\n\t\r\n\t            var obj = this.option;\r\n\t            var parentModel = this.parentModel;\r\n\t            for (var i = 0; i < path.length; i++) {\r\n\t                // obj could be number/string/... (like 0)\r\n\t                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;\r\n\t                if (obj == null) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            if (obj == null && parentModel && !ignoreParent) {\r\n\t                obj = parentModel.get(path);\r\n\t            }\r\n\t            return obj;\r\n\t        },\r\n\t\r\n\t        set: function (path, value) {\r\n\t            var obj = this.option;\r\n\t\r\n\t            if (path.indexOf(\".\") == -1) {\r\n\t                obj[path] = value;\r\n\t            } else {\r\n\t                var fieldArray  = path.split('.');\r\n\t                var n = fieldArray.length;\r\n\t                var currentRef = obj;\r\n\t                var fieldName;\r\n\t\r\n\t                for (var i = 0; i < n - 1; i++) {\r\n\t                    fieldName = fieldArray[i];\r\n\t                    if(currentRef[fieldName] == null) {\r\n\t                        currentRef[fieldName] = {};\r\n\t                    }\r\n\t                    currentRef = currentRef[fieldName];\r\n\t                }\r\n\t                fieldName = fieldArray[n-1];\r\n\t                currentRef[fieldName] = value;\r\n\t            }         \r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * @param {string} key\r\n\t         * @param {boolean} [ignoreParent=false]\r\n\t         * @return {*}\r\n\t         */\r\n\t        getShallow: function (key, ignoreParent) {\r\n\t            var option = this.option;\r\n\t            var val = option && option[key];\r\n\t            var parentModel = this.parentModel;\r\n\t            if (val == null && parentModel && !ignoreParent) {\r\n\t                val = parentModel.getShallow(key);\r\n\t            }\r\n\t            return val;\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * @param {string} path\r\n\t         * @param {module:model/Model} [parentModel]\r\n\t         * @return {module:model/Model}\r\n\t         */\r\n\t        getModel: function (path, parentModel) {\r\n\t            var obj = this.get(path, true);\r\n\t            var thisParentModel = this.parentModel;\r\n\t            var model = new Model(\r\n\t                obj, parentModel || (thisParentModel && thisParentModel.getModel(path))\r\n\t            );\r\n\t            return model;\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * If model has option\r\n\t         */\r\n\t        isEmpty: function () {\r\n\t            return this.option == null;\r\n\t        },\r\n\t\r\n\t        restoreData: function () {},\r\n\t\r\n\t        // Pending\r\n\t        clone: function () {\r\n\t            var Ctor = this.constructor;\r\n\t            return new Ctor(zrUtil.clone(this.option));\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Enable Model.extend.\r\n\t    clazzUtil.enableClassExtend(Model);\r\n\t\r\n\t    module.exports = Model;\r\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t\r\n\t    var clazz = {};\r\n\t\r\n\t    var TYPE_DELIMITER = '.';\r\n\t    var IS_CONTAINER = '___FT__COMPONENT__CONTAINER___';\r\n\t    /**\r\n\t     * @public\r\n\t     */\r\n\t    var parseClassType = clazz.parseClassType = function (componentType) {\r\n\t        var ret = {main: '', sub: ''};\r\n\t        if (componentType) {\r\n\t            componentType = componentType.split(TYPE_DELIMITER);\r\n\t            ret.main = componentType[0] || '';\r\n\t            ret.sub = componentType[1] || '';\r\n\t        }\r\n\t        return ret;\r\n\t    };\r\n\t    /**\r\n\t     * @public  相比 直接用zrUtil.inherits 好处是  可以直接调用父类的构造函数\r\n\t     */\r\n\t    clazz.enableClassExtend = function (RootClass, preConstruct) {\r\n\t        RootClass.extend = function (proto) {\r\n\t            var ExtendedClass = function () {\r\n\t                preConstruct && preConstruct.apply(this, arguments);\r\n\t                RootClass.apply(this, arguments);\r\n\t            };\r\n\t\r\n\t            zrUtil.extend(ExtendedClass.prototype, proto);\r\n\t\r\n\t            ExtendedClass.extend = this.extend;\r\n\t            ExtendedClass.superCall = superCall;\r\n\t            ExtendedClass.superApply = superApply;\r\n\t            zrUtil.inherits(ExtendedClass, this);\r\n\t            ExtendedClass.superClass = this;\r\n\t\r\n\t            return ExtendedClass;\r\n\t        };\r\n\t    };\r\n\t\r\n\t    // superCall should have class info, which can not be fetch from 'this'.\r\n\t    // Consider this case:\r\n\t    // class A has method f,\r\n\t    // class B inherits class A, overrides method f, f call superApply('f'),\r\n\t    // class C inherits class B, do not overrides method f,\r\n\t    // then when method of class C is called, dead loop occured.\r\n\t    function superCall(context, methodName) {\r\n\t        var args = zrUtil.slice(arguments, 2);\r\n\t        return this.superClass.prototype[methodName].apply(context, args);\r\n\t    }\r\n\t\r\n\t    function superApply(context, methodName, args) {\r\n\t        return this.superClass.prototype[methodName].apply(context, args);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @param {Object} entity\r\n\t     * @param {Object} options\r\n\t     * @param {boolean} [options.registerWhenExtend]\r\n\t     * @public\r\n\t     */\r\n\t    clazz.enableClassManagement = function (entity, options) {\r\n\t        options = options || {};\r\n\t\r\n\t        /**\r\n\t         * Component model classes\r\n\t         * key: componentType,\r\n\t         * value:\r\n\t         *     componentClass, when componentType is 'xxx'\r\n\t         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\r\n\t         * @type {Object}\r\n\t         */\r\n\t        var storage = {};\r\n\t\r\n\t        entity.registerClass = function (Clazz, componentType) {\r\n\t            if (componentType) {\r\n\t                componentType = parseClassType(componentType);\r\n\t\r\n\t                if (!componentType.sub) {\r\n\t                    if (storage[componentType.main]) {\r\n\t                        //已经注册过了，直接返回\r\n\t                        return; \r\n\t                    }\r\n\t                    storage[componentType.main] = Clazz;\r\n\t                }\r\n\t                else if (componentType.sub !== IS_CONTAINER) {\r\n\t                    var container = makeContainer(componentType);\r\n\t                    container[componentType.sub] = Clazz;\r\n\t                }\r\n\t            }\r\n\t            return Clazz;\r\n\t        };\r\n\t\r\n\t        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {\r\n\t            var Clazz = storage[componentTypeMain];\r\n\t\r\n\t            if (Clazz && Clazz[IS_CONTAINER]) {\r\n\t                Clazz = subType ? Clazz[subType] : null;\r\n\t            }\r\n\t\r\n\t            if (throwWhenNotFound && !Clazz) {\r\n\t                throw new Error(\r\n\t                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'\r\n\t                );\r\n\t            }\r\n\t\r\n\t            return Clazz;\r\n\t        };\r\n\t\r\n\t        entity.getClassesByMainType = function (componentType) {\r\n\t            componentType = parseClassType(componentType);\r\n\t\r\n\t            var result = [];\r\n\t            var obj = storage[componentType.main];\r\n\t\r\n\t            if (obj && obj[IS_CONTAINER]) {\r\n\t                zrUtil.each(obj, function (o, type) {\r\n\t                    type !== IS_CONTAINER && result.push(o);\r\n\t                });\r\n\t            }\r\n\t            else {\r\n\t                result.push(obj);\r\n\t            }\r\n\t\r\n\t            return result;\r\n\t        };\r\n\t\r\n\t        entity.hasClass = function (componentType) {\r\n\t            // Just consider componentType.main.\r\n\t            componentType = parseClassType(componentType);\r\n\t            return !!storage[componentType.main];\r\n\t        };\r\n\t\r\n\t        /**\r\n\t         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\r\n\t         */\r\n\t        entity.getAllClassMainTypes = function () {\r\n\t            var types = [];\r\n\t            zrUtil.each(storage, function (obj, type) {\r\n\t                types.push(type);\r\n\t            });\r\n\t            return types;\r\n\t        };\r\n\t\r\n\t        /**\r\n\t         * If a main type is container and has sub types\r\n\t         * @param  {string}  mainType\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        entity.hasSubTypes = function (componentType) {\r\n\t            componentType = parseClassType(componentType);\r\n\t            var obj = storage[componentType.main];\r\n\t            return obj && obj[IS_CONTAINER];\r\n\t        };\r\n\t\r\n\t        entity.parseClassType = parseClassType;\r\n\t\r\n\t        function makeContainer(componentType) {\r\n\t            var container = storage[componentType.main];\r\n\t            if (!container || !container[IS_CONTAINER]) {\r\n\t                container = storage[componentType.main] = {};\r\n\t                container[IS_CONTAINER] = true;\r\n\t            }\r\n\t            return container;\r\n\t        }\r\n\t\r\n\t        if (options.registerWhenExtend) {\r\n\t            var originalExtend = entity.extend;\r\n\t            if (originalExtend) {\r\n\t                entity.extend = function (proto) {\r\n\t                    var ExtendedClass = originalExtend.call(this, proto);\r\n\t                    return entity.registerClass(ExtendedClass, proto.type);\r\n\t                };\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return entity;\r\n\t    };\r\n\t\r\n\t    module.exports = clazz;\r\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t\tvar Node = __webpack_require__(74);\r\n\t\tvar zrUtil = __webpack_require__(4);\r\n\t\tvar graphic = __webpack_require__(3);\r\n\t\tvar clazzUtil = __webpack_require__(72);\r\n\t\t\r\n\t\t//创建Node类 所有形状都继承Node  包括fromJSON toJSON\r\n\t\tfunction NetworkNode(model, api) {\r\n\t\t\tNode.call(this);\r\n\t\t\tthis.model = model;\t\t\r\n\t\t\tthis.options =\r\n\t\t\t{\r\n\t\t\t\toutline: {\r\n\t\t\t\t\tenable: true, // 是否有外框\r\n\t\t\t\t\tradius: true, // 是否圆角\r\n\t\t\t\t\tinitVisible: false\r\n\t\t\t\t},\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tcolor: '#000000', // 文本颜色\r\n\t\t\t\t\tlineHeight: 24 // 文本行高\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis.nextworkInfo = {type: -1, name:\"NextworkNode\" };    //节点信息\r\n\t\t\tthis.portNodeList = [];\r\n\t\t\tthis.cardNodeList = [];\r\n\t\t\tthis.initEvent(api);\r\n\t\t};\r\n\t\r\n\t    NetworkNode.prototype.initEvent = function(api) {\r\n\t        var that = this;\r\n\t        var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];//'click', 'dblclick', 'mouseover', 'mouseout'\r\n\t        zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n\t            that.on(eveName, function (e) {\r\n\t\t            var params = {};\r\n\t\t            params.event = e;\r\n\t\t            params.type = eveName;\r\n\t\t            params.model = that.model\r\n\t\t            api.trigger(eveName, params); \r\n\t            }, this);\r\n\t        }, this);\r\n\t    };\t\r\n\t\r\n\t\tNetworkNode.prototype.render = function() {\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * drawText\r\n\t\t * @description 画一个文本\r\n\t\t * @param {string} content\r\n\t\t * @param {number} x\r\n\t\t * @param {number} y\r\n\t\t * @param {string} color\r\n\t\t */\r\n\t\tNetworkNode.prototype.drawText = function (content, x, y, color) {\r\n\t\t\tvar text = new graphic.Text({\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\ttext: content,\r\n\t\t\t\t\tx: x,\r\n\t\t\t\t\ty: y + 6,\r\n\t\t\t\t\tcolor: color ? color : this.options.text.color,\r\n\t\t\t\t\ttextFont: '12px Microsoft YaHei'\r\n\t\t\t\t},\r\n\t\t\t\tzlevel: 20\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\ttext: text,\r\n\t\t\t\trect: text.getBoundingRect()\r\n\t\t\t};\r\n\t\t};\t\r\n\t\r\n\t\r\n\t\tNetworkNode.prototype.toJSON = function() {\r\n\t\t\tthis.model.set(\"resourceId\", this.resourceId);\r\n\t\t\tthis.model.set(\"properties.type\", this.nextworkInfo.type);\r\n\t\t\tthis.model.set(\"stencil.type\", this.nextworkInfo.name);\r\n\t\t\tthis.model.set(\"bounds.upperLeft.x\", this.position[0]);\r\n\t\t\tthis.model.set(\"bounds.upperLeft.y\", this.position[1]);\r\n\t\t\tthis.model.set(\"bounds.lowerRight.x\", this.position[0] + this.getBoundingRect().width);\r\n\t\t\tthis.model.set(\"bounds.lowerRight.y\", this.position[1] + this.getBoundingRect().height);\r\n\t\t\treturn this.model.option;\r\n\t\t};\r\n\t\tzrUtil.inherits(NetworkNode,Node);\r\n\t\r\n\t\tclazzUtil.enableClassManagement(NetworkNode, {\r\n\t        registerWhenExtend: true\r\n\t    });\r\n\t\tmodule.exports = NetworkNode;\r\n\t\r\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var util = __webpack_require__(67)\r\n\t    //创建Node类 所有形状都继承Node  包括fromJSON toJSON\r\n\t    function Node() {\r\n\t        this.resourceId = util.getUUID(); // 生成节点ID\r\n\t        graphic.Group.call(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 由父类实现\r\n\t     * @return {[type]} [description]\r\n\t     */\r\n\t    Node.prototype.render = function() {};\r\n\t\r\n\t    /**\r\n\t     * 由父类实现\r\n\t     * @param  {[type]} json [description]\r\n\t     * @return {[type]}      [description]\r\n\t     */\r\n\t    Node.prototype.getRect = function(json) {};\r\n\t\r\n\t    /**\r\n\t     * drawText\r\n\t     * @description 画一个文本\r\n\t     * @param {string} color\r\n\t     */\r\n\t    Node.prototype.drawText = function(name,color) {\r\n\t        var textName = this.bpmnInfo.name;\r\n\t        if(name != null){\r\n\t            textName = name;\r\n\t        }\r\n\t        var text = new graphic.Text({\r\n\t            style: {\r\n\t                text: textName,\r\n\t                color: color ? color : this.options.text.color,\r\n\t                textFont: '12px Microsoft YaHei'\r\n\t            },\r\n\t            zlevel: 20,\r\n\t        });\r\n\t        //文字绘制的位置  \r\n\t        //x = 中心点.x - 起始位置.x - 文字宽度的一半\r\n\t        var x = this.getRect().x - this.position[0] - text.getBoundingRect().width / 2;\r\n\t        //y = 中心点.y - 起始位置.y + 节点高度的一半 + 偏移值（6）\r\n\t        var y = this.getRect().y - this.position[1] + this.getBoundingRect().height / 2 + text.getBoundingRect().height + 6;\r\n\t        text.attr(\"style\", { x: x, y: y });\r\n\t        return {\r\n\t            text: text,\r\n\t            rect: text.getBoundingRect()\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * refreshText\r\n\t     * @description 刷新文本\r\n\t     */\r\n\t    Node.prototype.refreshText = function() {\r\n\t        var text = this.childOfName(\"Title\");\r\n\t        var x = this.getRect().x - this.position[0] - text.getBoundingRect().width / 2;\r\n\t        var y = this.getRect().y - this.position[1] + this.getBoundingRect().height / 2 + text.getBoundingRect().height + 6;\r\n\t        text.attr(\"style\", { x: x, y: y });\r\n\t    };\r\n\t    /**\r\n\t     * 由父类实现\r\n\t     * @return {[type]} [description]\r\n\t     */\r\n\t    Node.prototype.toJSON = function() {};\r\n\t\r\n\t    graphic.Util.inherits(Node, graphic.Group);\r\n\t    module.exports = Node;\r\n\t\r\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    \r\n\t    function RackNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"RackNode\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    RackNode.prototype.render = function(model,api) {\r\n\t        this.model = model;\r\n\t        var _UData = model.get(\"UData\");\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t        //title\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: 80,\r\n\t                y: -30,\r\n\t                text: '42U',\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '18px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t  \r\n\t        var rectOut = new graphic.Rect({\r\n\t            shape: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                width: model.get(\"width\"),\r\n\t                height: model.get(\"height\")\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#FFFFFF',\r\n\t                stroke: '#B3B3B3',\r\n\t                lineWidth: '1'//,\r\n\t            }          \r\n\t        });        \r\n\t        this.add(rectOut);\r\n\t        var rectIn = new graphic.Rect({\r\n\t            shape: {\r\n\t                x: 5,\r\n\t                y: 5,\r\n\t                width: model.get(\"width\") - 10,\r\n\t                height: model.get(\"height\") - 10\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#FFFFFF',\r\n\t                stroke: '#B3B3B3',\r\n\t                lineWidth: '1'//,\r\n\t            }          \r\n\t        });        \r\n\t        this.add(rectIn);\r\n\t\r\n\t        var j = 42;\r\n\t        while( j > 0 ) { \r\n\t            var _floorNum = 1;\r\n\t            var _isnullFloor = false;\r\n\t            for ( var f = 0; f < _UData.length; f++ ) {\r\n\t                if ( j === parseInt(_UData[f].floor) ) {\r\n\t                    _floorNum = parseInt(_UData[f].height);\r\n\t                    var modelObj = {\r\n\t                        resourceId: util.getUUID(),  \r\n\t                        properties: {\r\n\t                            type: \"Server\",         \r\n\t                            extProperties: {\r\n\t                            }  \r\n\t                        },\r\n\t                        bounds: {\r\n\t                            upperLeft: {x: 5, y: 5 + ((42 - j ) * 15)}  \r\n\t                        },\r\n\t                        stencil: {type: _UData[f].type + \"Node\"}\r\n\t                    };\r\n\t                    modelObj.height =  15 * _floorNum - 3;\r\n\t                    modelObj.width = model.get(\"width\") - 10;\r\n\t                    modelObj.parmDate = _UData[f];\r\n\t                    modelObj.floor = _UData[f].floor;\r\n\t                    modelObj.floorNum = _floorNum;\r\n\t                    if( _UData[f].column !== undefined) {\r\n\t                        modelObj.column = _UData[f].column;\r\n\t                    }\r\n\t                    //判断是否band悬浮事件\r\n\t                    modelObj.showTip = _showTip;\r\n\t                    var serverModel = new NetworkModel(modelObj);\r\n\t                    this.addNodeByModel(serverModel, api);\r\n\t\r\n\t                    var rectTray = new graphic.Rect({\r\n\t                        shape: {\r\n\t                            x: 5,\r\n\t                            y: 5 + ((42 - j ) * 15) + (15 * _floorNum) - 3 ,\r\n\t                            width: model.get(\"width\") - 10,\r\n\t                            height: 3\r\n\t                        },\r\n\t                        style: {\r\n\t                            fill: '#FFFFFF',\r\n\t                            stroke: '#B3B3B3',\r\n\t                            lineWidth: '1'//,\r\n\t                        }          \r\n\t                    });        \r\n\t                    this.add(rectTray);\r\n\t                    _isnullFloor = true;\r\n\t                }\r\n\t            }\r\n\t            if( !_isnullFloor ) {\r\n\t                  var rectTray = new graphic.Rect({\r\n\t                    shape: {\r\n\t                        x: 5,\r\n\t                        y: 5 + ((42 - j ) * 15) + 12,\r\n\t                        width: model.get(\"width\") - 10,\r\n\t                        height: 3\r\n\t                    },\r\n\t                    style: {\r\n\t                        fill: '#FFFFFF',\r\n\t                        stroke: '#B3B3B3',\r\n\t                        lineWidth: '1'//,\r\n\t                    }          \r\n\t                });        \r\n\t                this.add(rectTray);\r\n\t\r\n\t            }\r\n\t            j = j - _floorNum;\r\n\t        }\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    RackNode.prototype.addNodeByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this.api);\r\n\t            this.add(node);\r\n\t            var MOUSE_EVENT_NAMES = ['click'];\r\n\t            if ( p_model.get(\"showTip\") ) {\r\n\t                MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];\r\n\t            }\r\n\t            //绑定悬浮事件\r\n\t            zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n\t                node.on(eveName, function (e) {\r\n\t                    if ( eveName === \"mouseover\") {\r\n\t                        var params = {};\r\n\t                        params.event = e;\r\n\t                        params.x = node.parent.position[0] + e.target.position[0];\r\n\t                        params.y = node.parent.position[1] + e.target.position[1] + (e.target.style.height / 2);\r\n\t                        params.width = 150;\r\n\t                        params.height = 170;\r\n\t                        params.eWidth = e.target.style.width + 5 ;\r\n\t                        params.parmDate = e.target.parmDate;\r\n\t                        if ( api.getHeight() - params.y > params.height ) {\r\n\t                            params.layout = \"down\";\r\n\t                        } else {\r\n\t                            params.layout = \"up\";\r\n\t                        }\r\n\t                        api.showTipWindow(params);\r\n\t                    } else {\r\n\t                        api.hideTipWindow(e.event.target);\r\n\t                    }    \r\n\t                }, this);\r\n\t            }, this);\r\n\t\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // RackNode.prototype.toJSON = function() {\r\n\t    //     // body...\r\n\t    //     return this.model.option;\r\n\t    // };\r\n\t    zrUtil.inherits(RackNode, NetworkNode);\r\n\t    module.exports = RackNode;\r\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var RackNode = __webpack_require__(75);\r\n\t    var TipWindowNode = __webpack_require__(77);\r\n\t    var ServerNode = __webpack_require__(78);\r\n\t    var SwitchNode = __webpack_require__(79);\r\n\t\r\n\t    var PointNode = __webpack_require__(80);\r\n\t    var CardNode =  __webpack_require__(81);\r\n\t    var TopoDrawNode = __webpack_require__(82);\r\n\t    var ServerR630Node = __webpack_require__(89);\r\n\t    var ServerR730Node = __webpack_require__(91);\r\n\t    var ServerX3550Node = __webpack_require__(93);\r\n\t    var ServerX3650Node = __webpack_require__(94);\r\n\t    var ServerRD350Node = __webpack_require__(95);\r\n\t    var ServerRD650Node = __webpack_require__(96);\r\n\t    var SwitchTopoNode = __webpack_require__(97);\r\n\t    var SwitchHalfIBNode = __webpack_require__(98);\r\n\t    var SwitchFullIBNode = __webpack_require__(99);\r\n\t    var SwitchGMNode = __webpack_require__(100);\r\n\t    var SwitchKMNode = __webpack_require__(101);\r\n\t\r\n\t    var ClusterDrawNode = __webpack_require__(102);\r\n\t    var ClusterDatabaseNode = __webpack_require__(106);\r\n\t    var ClusterAsmNode = __webpack_require__(107);\r\n\t    var ClusterAsmCellNode = __webpack_require__(108);\r\n\t    var ClusterIseNode = __webpack_require__(109);\r\n\t    var ClusterIseCellNode =  __webpack_require__(110);\r\n\t \r\n\t    /**\r\n\t     * 根据结点数组 导出JSON格式的数据\r\n\t     *\r\n\t     * @param {Array} nodes 结点数组\r\n\t     * @return {JSON} JSON格式的数据\r\n\t     */\r\n\t    function exportJson(networkModel, nodes) {\r\n\t        var jsonArr = [];\r\n\t        for(var i = 0; i < nodes.length;i++){\r\n\t            var node = nodes[i];\r\n\t            if( node && node.toJSON) {\r\n\t                jsonArr.push(node.toJSON());\r\n\t            }\r\n\t        }\r\n\t        networkModel.set(\"childShapes\", jsonArr)  \r\n\t\r\n\t        return networkModel.option;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 根据 JSON 生成节点\r\n\t     * @param  {[type]} fishTopoBpmn [description]\r\n\t     * @param  {[type]} json         [description]\r\n\t     * @return {[type]}              [description]\r\n\t     */\r\n\t    function fromJson(fishTopoNetwork, json) {\r\n\t        // 1.清空画布\r\n\t        fishTopoNetwork.clear();\r\n\t        if ( json.type === \"rack\" ) {\r\n\t            var _x = 50;\r\n\t            for(var i = 0; i < json.data.length; i++) {\r\n\t                var modelObj = {\r\n\t                    resourceId: util.getUUID(),\r\n\t                    properties: {\r\n\t                        type: json.data[i].rack\r\n\t                    },\r\n\t                    bounds: {\r\n\t                        upperLeft: {x: _x, y: 50} \r\n\t                    },\r\n\t                    stencil: {type: \"RackNode\"}\r\n\t                };\r\n\t                modelObj.height =  json.data[i].height != undefined ? json.data[i].height: 635;\r\n\t                modelObj.width = json.data[i].width != undefined ? json.data[i].width: 200;\r\n\t                modelObj.UData = json.data[i].UData;\r\n\t                modelObj.showTip = json.showTip;\r\n\t                var rackModel = new NetworkModel(modelObj);\r\n\t                fishTopoNetwork.addNodeByModel(rackModel);\r\n\t                _x += 250;\r\n\t           }\r\n\t        } else if( json.type === \"topo\" ) {\r\n\t            var modelObj = {\r\n\t                resourceId: util.getUUID(),\r\n\t                bounds: {\r\n\t                    upperLeft: {x: 0, y: 0} \r\n\t                },\r\n\t                stencil: {type: \"TopoDrawNode\"}\r\n\t            };\r\n\t            modelObj.height =  fishTopoNetwork.height;\r\n\t            modelObj.width = fishTopoNetwork.width;\r\n\t            modelObj.nodeList = json.data;\r\n\t            modelObj.showTip = json.showTip;\r\n\t            var topoModel = new NetworkModel(modelObj);\r\n\t            fishTopoNetwork.addNodeByModel(topoModel);\r\n\t        } else if( json.type === \"cluster\" ) {\r\n\t            var modelObj = {\r\n\t                resourceId: util.getUUID(),\r\n\t                bounds: {\r\n\t                    upperLeft: {x: 0, y: 0} \r\n\t                },\r\n\t                stencil: {type: \"ClusterDrawNode\"}\r\n\t            };\r\n\t            modelObj.height =  fishTopoNetwork.height;\r\n\t            modelObj.width = fishTopoNetwork.width;\r\n\t            modelObj.nodeList = json.data;\r\n\t            modelObj.showTip = json.showTip;\r\n\t            var clusterModel = new NetworkModel(modelObj);\r\n\t            fishTopoNetwork.addNodeByModel(clusterModel);\r\n\t        }\r\n\t        \r\n\t    }\r\n\t\r\n\t    function registerNetworkNode () {\r\n\t        NetworkNode.registerClass(RackNode, \"RackNode\");\r\n\t        NetworkNode.registerClass(TipWindowNode, \"TipWindowNode\");\r\n\t        NetworkNode.registerClass(ServerNode, \"ServerNode\");\r\n\t        NetworkNode.registerClass(SwitchNode, \"SwitchNode\");\r\n\t\r\n\t        NetworkNode.registerClass(TopoDrawNode, \"TopoDrawNode\");\r\n\t        NetworkNode.registerClass(ServerR630Node, \"ServerR630Node\");\r\n\t        NetworkNode.registerClass(ServerR730Node, \"ServerR730Node\");\r\n\t        NetworkNode.registerClass(PointNode, \"PointNode\"); \r\n\t        NetworkNode.registerClass(CardNode, \"CardNode\"); \r\n\t        NetworkNode.registerClass(ServerX3550Node, \"ServerX3550Node\"); \r\n\t        NetworkNode.registerClass(ServerX3650Node, \"ServerX3650Node\"); \r\n\t        NetworkNode.registerClass(ServerRD350Node, \"ServerRD350Node\");\r\n\t        NetworkNode.registerClass(ServerRD650Node, \"ServerRD650Node\");\r\n\t        NetworkNode.registerClass(SwitchFullIBNode, \"SwitchFullIBNode\");\r\n\t        NetworkNode.registerClass(SwitchHalfIBNode, \"SwitchHalfIBNode\");\r\n\t        NetworkNode.registerClass(SwitchKMNode, \"SwitchKMNode\");\r\n\t        NetworkNode.registerClass(SwitchGMNode, \"SwitchGMNode\"); \r\n\t        \r\n\t        NetworkNode.registerClass(ClusterDrawNode, \"ClusterDrawNode\"); \r\n\t        NetworkNode.registerClass(ClusterDatabaseNode, \"ClusterDatabaseNode\"); \r\n\t        NetworkNode.registerClass(ClusterAsmNode, \"ClusterAsmNode\");  \r\n\t        NetworkNode.registerClass(ClusterAsmCellNode, \"ClusterAsmCellNode\"); \r\n\t        NetworkNode.registerClass(ClusterIseNode, \"ClusterIseNode\"); \r\n\t        NetworkNode.registerClass(ClusterIseCellNode, \"ClusterIseCellNode\"); \r\n\t                     \r\n\t    }   \r\n\t\r\n\t    var NextWorkUtil = {\r\n\t        exportJson: exportJson,\r\n\t        fromJson: fromJson,\r\n\t        registerNetworkNode: registerNetworkNode\r\n\t    };\r\n\t    module.exports = NextWorkUtil;\r\n\t\r\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t\tvar Node = __webpack_require__(74);\r\n\t\tvar zrUtil = __webpack_require__(4);\r\n\t\tvar graphic = __webpack_require__(3);\r\n\t\tvar clazzUtil = __webpack_require__(72);\r\n\t\t\r\n\t\t//创建Node类 所有形状都继承Node  包括fromJSON toJSON\r\n\t\tfunction TipWindowNode(model, api) {\r\n\t\t\tNode.call(this);\r\n\t\t\tthis.model = model;\t\t\r\n\t\t\tthis.nextworkInfo = {type: -1, name:\"TipWindowNodeDiagram\" };    //节点信息\r\n\t\t\tthis.initEvent(api);\r\n\t        this.render(model, api);\r\n\t\t};\r\n\t\r\n\t    TipWindowNode.prototype.initEvent = function(api) {\r\n\t        // var that = this;\r\n\t        // var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];//'click', 'dblclick', 'mouseover', 'mouseout'\r\n\t        // zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n\t        //     that.on(eveName, function (e) {\r\n\t\t       //      var params = {};\r\n\t\t       //      params.event = e;\r\n\t\t       //      params.type = eveName;\r\n\t\t       //      params.model = that.model\r\n\t\t       //      api.trigger(eveName, params); \r\n\t        //     }, this);\r\n\t        // }, this);\r\n\t    };\t\r\n\t\r\n\t\tTipWindowNode.prototype.render = function(model, api) {\r\n\t\t\tvar _x = model.x;\r\n\t        var _y = model.y;\r\n\t        var _xWidth = model.eWidth;\r\n\t        var _width = model.width;\r\n\t        var _height = model.height;\r\n\t\t\tvar points = [\r\n\t\t\t\t\t[_x + _xWidth + 20, _y],\r\n\t\t\t\t\t[_x + _xWidth, _y],\r\n\t\t\t\t\t[_x + _xWidth + 20, _y + 15],\t\r\n\t\t\t\t\t[_x + _xWidth + 20, _y + _height],\r\n\t\t\t\t\t[_x + _xWidth + _width, _y + _height],\r\n\t\t\t\t\t[_x + _xWidth + _width, _y]\r\n\t\t\t\t];\r\n\t\t\tif ( model.layout != undefined && model.layout === \"up\" ) {\r\n\t\t\t\tpoints = [\r\n\t\t\t\t\t[_x + _xWidth + 20, _y],\r\n\t\t\t\t\t[_x + _xWidth, _y],\r\n\t\t\t\t\t[_x + _xWidth + 20, _y - 15],\t\r\n\t\t\t\t\t[_x + _xWidth + 20, _y - _height],\r\n\t\t\t\t\t[_x + _xWidth + _width, _y - _height],\r\n\t\t\t\t\t[_x + _xWidth + _width, _y]\r\n\t\t\t\t];\r\n\t\t\t} \r\n\t\r\n\t\t\tif ( model.layout != undefined && model.layout === \"left\" ) {\r\n\t\t\t\tpoints = [\r\n\t\t\t\t\t[_x - 2 * _width - 10, _y],\r\n\t\t\t\t\t[_x - 2 * _width + 10, _y],\r\n\t\t\t\t\t[_x - 2 * _width - 10, _y + 15],\t\r\n\t\t\t\t\t[_x - 2 * _width - 10, _y + _height],\r\n\t\t\t\t\t[_x - 2 * _width - _width, _y + _height],\r\n\t\t\t\t\t[_x - 2 * _width - _width, _y]\r\n\t\t\t\t];\r\n\t\t\t}\t\r\n\t\t\tvar _tipContext = \"请查询数据\";\r\n\t\t\tif ( model.parmDate !== undefined ) {\r\n\t\t\t\t_tipContext = 'status: online \\n CPU:  \\n MEM:  \\n Ip address: \\n floor: ' + model.parmDate.floor +  '\\n height: ' + model.parmDate.height;\r\n\t\t\t\tif ( model.parmDate.tipContext !== undefined ) {\r\n\t\t\t\t\t_tipContext = model.parmDate.tipContext;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar tip = new graphic.Polygon({\r\n\t            shape: {\r\n\t                points: points\r\n\t            },\r\n\t            style: {\r\n\t\t\t\t\tstroke: 'rgba(20, 20, 20, 0.2)',\r\n\t\t\t\t\tfill: 'rgba(20, 20, 20, 0.1)',\r\n\t\t\t\t\tlineWidth: '1',\r\n\t\t\t\t\ttext: _tipContext,\r\n\t\t\t\t\tlineWidth: 3\r\n\t\t\t\t}        \r\n\t        });        \r\n\t        this.add(tip);\r\n\t\t};\r\n\t\r\n\t\tzrUtil.inherits(TipWindowNode, Node);\r\n\t\r\n\t\r\n\t\tmodule.exports = TipWindowNode;\r\n\t\r\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    function ServerNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.serverInfo = {type: -1, name: \"ServerNode\" };    //\r\n\t        this.model = model;\r\n\t        return this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ServerNode.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var rectServer = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR630b.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  15 * model.get(\"floorNum\") - 3\r\n\t            },\r\n\t            draggable: false,\r\n\t            parmDate: model.get(\"parmDate\")    \r\n\t        }); \r\n\t        rectServer.position = [model.get(\"bounds.upperLeft.x\"), model.get(\"bounds.upperLeft.y\")];\r\n\t        return rectServer;\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ServerNode, NetworkNode);\r\n\t    module.exports = ServerNode;\r\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    function SwitchNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.serverInfo = {type: -1, name: \"SwitchNode\" };    //\r\n\t        this.model = model;\r\n\t        return this.render(model,api);\r\n\t    };\r\n\t\r\n\t    SwitchNode.prototype.render = function(model,api) {\r\n\t        this.model = model;\r\n\t        var _px = model.get(\"bounds.upperLeft.x\");\r\n\t        var _py = model.get(\"bounds.upperLeft.y\");\r\n\t        var _height = model.get(\"height\");\r\n\t        var _width = model.get(\"width\");\r\n\t        if(model.get(\"column\") === undefined || model.get(\"column\") === \"all\" ) {\r\n\t            \r\n\t        } else {\r\n\t            _width = model.get(\"width\") / 2 - 5;\r\n\t            if ( model.get(\"column\") === \"right\" ) {\r\n\t                 _px = 5 + _width + 5;\r\n\t            }      \r\n\t        }\r\n\t        var rectSwitch = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/IBSwitchFull.png',\r\n\t                width: _width,\r\n\t                height:  _height\r\n\t            },\r\n\t            draggable: false,\r\n\t            parmDate : model.get(\"parmDate\")    \r\n\t            // _parmDate : \"111\"       \r\n\t        }); \r\n\t        rectSwitch.position = [ _px, _py]; \r\n\t        return rectSwitch;\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(SwitchNode, NetworkNode);\r\n\t    module.exports = SwitchNode;\r\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    \r\n\t    function PointNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"PointNode\" };    \r\n\t        this.model = model;\r\n\t        this.lineInfo = model.get('lineInfo');\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    PointNode.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        // this.add(_title);\r\n\t\r\n\t        var portNode = new graphic.Rect({\r\n\t            shape: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                width: model.get(\"width\"),\r\n\t                height: model.get(\"height\")\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#E2E3D9',\r\n\t                stroke: '#B3B3B3',\r\n\t                opacity: 0.1,\r\n\t                lineWidth: '1'//,\r\n\t            }          \r\n\t        });              \r\n\t        this.add(portNode);\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t   \r\n\t\r\n\t    zrUtil.inherits(PointNode, NetworkNode);\r\n\t    module.exports = PointNode;\r\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    \r\n\t    function CardNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"CardNode\" };    \r\n\t        this.model = model;\r\n\t        this.lineInfo = model.get('lineInfo');\r\n\t        this.pointList = [];\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    CardNode.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _portData = model.get(\"portData\");\r\n\t        var _type = model.get(\"type\");\r\n\t        var _direction = model.get(\"direction\");\r\n\t        var imgUrl = \"\";\r\n\t        if( _type === \"1\" || _type === \"3\" ) {\r\n\t            imgUrl = '../../../src/third-party/fish-topo/fish-topo-network/src/images/IB1.jpg';\r\n\t        }else if ( _type === \"5\" ) {\r\n\t            imgUrl = '../../../src/third-party/fish-topo/fish-topo-network/src/images/km2.jpg';\r\n\t        } else if( _type === \"6\" ) {\r\n\t            imgUrl = '../../../src/third-party/fish-topo/fish-topo-network/src/images/km4.jpg';\r\n\t        }\r\n\t\r\n\t\r\n\t         var rectServer = new graphic.Image({\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: imgUrl,\r\n\t                width: model.get(\"width\"),\r\n\t                height: model.get(\"height\")\r\n\t            },\r\n\t            draggable: false,\r\n\t            invisible: false,\r\n\t            parmDate: _portData\r\n\t        }); \r\n\t        this.add(rectServer);\r\n\t        rectServer.hide();\r\n\t\r\n\t        var _resourcesName = model.get(\"resourcesName\");\r\n\t        var _resourceNodeType = model.get(\"resourceNodeType\");\r\n\t        var _No = model.get(\"No\");\r\n\t        if ( _direction === \"leftRight\" ) {\r\n\t            var _x = 4;\r\n\t            var _y = 2;\r\n\t            var _width = 8;\r\n\t            var _height = 5; \r\n\t            if ( _type === \"1\" ||  _type === \"2\" ||  _type === \"3\" ||  _type === \"4\" ) {\r\n\t                _width = 20;\r\n\t            }\r\n\t            for( var i = 0; i < _portData.length; i++ ) {\r\n\t                var portModel = {};\r\n\t                portModel = {\r\n\t                    resourceId: util.getUUID(),  \r\n\t                    bounds: {\r\n\t                        upperLeft: {x: _x, y: _y}  \r\n\t                    },\r\n\t                    stencil: {type: \"PointNode\"}\r\n\t                };\r\n\t                portModel.height = _height;\r\n\t                portModel.width = _width;\r\n\t\r\n\t                var _linInfo = {};\r\n\t                _linInfo.sourceReource = _resourcesName;\r\n\t                _linInfo.sourceCardNo = _No;\r\n\t                _linInfo.sourcePort = i;\r\n\t                _linInfo.nodetype = _resourceNodeType; \r\n\t                _linInfo.sourceStatus =  _portData[i].status;        \r\n\t                _linInfo.targetReource = _portData[i].target.reourceName ;\r\n\t                _linInfo.targetPort = _portData[i].target.port;\r\n\t\r\n\t                portModel.lineInfo = _linInfo;\r\n\t                var pModel = new NetworkModel(portModel);\r\n\t                this.addPortByModel(pModel, api);\r\n\t                 _x = _x + _width + 2;\r\n\t            }    \r\n\t        } \r\n\t        \r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t   CardNode.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, api);\r\n\t            this.pointList.push(node);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(CardNode, NetworkNode);\r\n\t    module.exports = CardNode;\r\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var NetWorkLineNode = __webpack_require__(83);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var NetWorkLineModel = __webpack_require__(88);\r\n\t\r\n\t    function TopoDrawNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"TopoDrawNode\" };    \r\n\t        this.model = model;\r\n\t        this.portList = [];\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    TopoDrawNode.prototype.render = function(model, api) {\r\n\t        var nodeList = model.get(\"nodeList\");\r\n\t        var serverWidth = 216; //服务器宽度\r\n\t        var switchWidth = 300; //交换机宽度\r\n\t        //根据Node数量计算实际画布宽度\r\n\t        var clentWidth = this.getWidth(nodeList, serverWidth, switchWidth);\r\n\t        clentWidth = clentWidth > model.get(\"width\") ? clentWidth : model.get(\"width\");\r\n\t        api.resize(clentWidth, model.get(\"height\"));\r\n\t\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _startX = 100,\r\n\t            _textW = 30,\r\n\t            _startY = 10,\r\n\t            _textH = 20;\r\n\t        var textKM = new graphic.Text({\r\n\t            style: {\r\n\t                x: _startX,\r\n\t                y: _startY,\r\n\t                text: '千兆',\r\n\t                width: _textW,\r\n\t                height: _textH,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '10px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(textKM);\r\n\t\r\n\t        var lineKM = new graphic.Line({\r\n\t            shape: {\r\n\t                x1 : _startX + _textW,\r\n\t                y1 : _startY + 10,\r\n\t                x2 : _startX + _textW + 100,\r\n\t                y2 : _startY + 10,\r\n\t                lineWidth : 5,  \r\n\t                text : 'line'\r\n\t            },\r\n\t            style: {\r\n\t                stroke: '#0704EC',\r\n\t                lineType : 'solid',// default solid\r\n\t                fill: null\r\n\t            }        \r\n\t        });        \r\n\t        this.add(lineKM);\r\n\t\r\n\t        _startY = _startY + _textH;\r\n\t        var textGB = new graphic.Text({\r\n\t            style: {\r\n\t                x: _startX,\r\n\t                y: _startY,\r\n\t                text: '万兆',\r\n\t                width: _textW,\r\n\t                height: _textH,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '10px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(textGB);\r\n\t\r\n\t        var lineGB = new graphic.Line({\r\n\t            shape: {\r\n\t                x1 : _startX + _textW,\r\n\t                y1 : _startY + 10 ,\r\n\t                x2 : _startX + _textW + 100,\r\n\t                y2 : _startY + 10,\r\n\t                lineWidth : 5,  \r\n\t                text : 'line'\r\n\t            },\r\n\t            style: {\r\n\t                stroke: '#070413',\r\n\t                lineType : 'solid',// default solid\r\n\t                fill: null\r\n\t            }        \r\n\t        });        \r\n\t        this.add(lineGB);\r\n\t\r\n\t        _startY =  _startY + _textH;\r\n\t        var textIB = new graphic.Text({\r\n\t            style: {\r\n\t                x: _startX,\r\n\t                y: _startY,\r\n\t                text: 'IB',\r\n\t                width: _textW,\r\n\t                height: _textH,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '10px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(textIB);\r\n\t\r\n\t        var lineIB = new graphic.Line({\r\n\t            shape: {\r\n\t                x1 : _startX + _textW,\r\n\t                y1 : _startY + 10,\r\n\t                x2 : _startX + _textW + 100,\r\n\t                y2 : _startY + 10,\r\n\t                lineWidth : 5,  \r\n\t                text : 'line'\r\n\t            },\r\n\t            style: {\r\n\t                stroke: '#9C8826',\r\n\t                lineType : 'solid',// default solid\r\n\t                fill: null\r\n\t            }        \r\n\t        });        \r\n\t        this.add(lineIB);\r\n\t\r\n\t        //主线布局\r\n\t        var lineOut = new graphic.Line({\r\n\t            shape: {\r\n\t                x1 : 50,\r\n\t                y1 : 70,\r\n\t                x2 : 50,\r\n\t                y2 : 650,\r\n\t                text : 'line'\r\n\t            },\r\n\t            style: {\r\n\t                stroke: '#000',\r\n\t                lineType : 'solid',// default solid\r\n\t                lineWidth : 3,  \r\n\t                fill: null\r\n\t            }        \r\n\t        });        \r\n\t        this.add(lineOut);\r\n\t\r\n\t        var lineUp = new graphic.Line({\r\n\t            shape: {\r\n\t                x1 : 50,\r\n\t                y1 : 250,\r\n\t                x2 : clentWidth - 50,\r\n\t                y2 : 250,\r\n\t                text : 'line'\r\n\t            },\r\n\t            style: {\r\n\t                stroke: '#000',\r\n\t                lineType : 'solid',// default solid\r\n\t                lineWidth : 3,  \r\n\t                fill: null\r\n\t            }        \r\n\t        });        \r\n\t        this.add(lineUp);\r\n\t\r\n\t        var lineDown = new graphic.Line({\r\n\t            shape: {\r\n\t                x1 : 50,\r\n\t                y1 : 450,\r\n\t                x2 : clentWidth - 50,\r\n\t                y2 : 450, \r\n\t                text : 'line'\r\n\t            },\r\n\t            style: {\r\n\t                stroke: '#000',\r\n\t                lineType : 'solid',// default solid\r\n\t                lineWidth : 3,  \r\n\t                fill: null\r\n\t            }        \r\n\t        });        \r\n\t        this.add(lineDown);\r\n\t\r\n\t         //循环添加topo图上的节点\r\n\t        var startComputeX = 70;\r\n\t        var startStorageX = 110; \r\n\t        var startSwitchX = 90; \r\n\t        for ( var i = 0; i < nodeList.length; i++ ) {\r\n\t            var nodeY = 145;\r\n\t            var modelObj = {};\r\n\t            var _typeNode = \"TopoDrawNode\";\r\n\t            if ( nodeList[i].nodetype === \"1\" ) {\r\n\t                if (nodeList[i].type  === \"ServerR730\" || nodeList[i].type  === \"ServerX3650\") {\r\n\t                    nodeY = 125;\r\n\t                }\r\n\t                _typeNode = nodeList[i].type + \"Node\";\r\n\t                modelObj = {\r\n\t                    resourceId: util.getUUID(),  \r\n\t                    bounds: {\r\n\t                        upperLeft: {x: startComputeX, y: nodeY}  \r\n\t                    },\r\n\t                    stencil: {type: _typeNode}\r\n\t                };\r\n\t                modelObj.width = serverWidth;\r\n\t                startComputeX += serverWidth + 20;\r\n\t            } else if (nodeList[i].nodetype === \"2\" ) {           \r\n\t                nodeY = 550;\r\n\t                _typeNode = nodeList[i].type + \"Node\";\r\n\t                modelObj = {\r\n\t                    resourceId: util.getUUID(),  \r\n\t                    bounds: {\r\n\t                        upperLeft: {x: startStorageX, y: nodeY}  \r\n\t                    },\r\n\t                    stencil: {type: _typeNode}\r\n\t                };\r\n\t                modelObj.width = serverWidth;\r\n\t                startStorageX += serverWidth + 20;\r\n\t            } else if (nodeList[i].nodetype === \"3\" ) {\r\n\t                _typeNode = nodeList[i].type + \"Node\";\r\n\t                nodeY = 335;\r\n\t                modelObj = {\r\n\t                    resourceId: util.getUUID(),  \r\n\t                    bounds: {\r\n\t                        upperLeft: {x: startSwitchX, y: nodeY}  \r\n\t                    },\r\n\t                    stencil: {type: _typeNode}\r\n\t                }; \r\n\t                if ( nodeList[i].type  === \"SwitchHalfIB\" ) {\r\n\t                    modelObj.width = switchWidth / 2;\r\n\t                    startSwitchX += switchWidth / 2 + 50;\r\n\t                } else {\r\n\t                    modelObj.width = switchWidth;\r\n\t                    startSwitchX += switchWidth + 50;\r\n\t                } \r\n\t            }\r\n\t            modelObj.name = nodeList[i].reourceName;\r\n\t            modelObj.nodetype = nodeList[i].nodetype;\r\n\t            modelObj.height =  15;\r\n\t            if ( nodeList[i].cards != undefined ) {\r\n\t                modelObj.cards = nodeList[i].cards;\r\n\t            }\r\n\t            \r\n\t\r\n\t            //判断是否band悬浮事件\r\n\t            modelObj.showTip = _showTip;\r\n\t            var serverModel = new NetworkModel(modelObj);\r\n\t            this.addNodeByModel(serverModel, api);\r\n\t        }\r\n\t        for ( var ps = 0; ps < this.portList.length; ps++ ) {\r\n\t            var startNode = this.portList[ps];\r\n\t            var endNode = null;\r\n\t            for ( var pe = 0; pe < this.portList.length; pe++ ) {\r\n\t                if (startNode.lineInfo.targetReource === this.portList[pe].lineInfo.sourceReource \r\n\t                    && startNode.lineInfo.targetPort === this.portList[pe].lineInfo.sourcePort ) {\r\n\t                    endNode = this.portList[pe];\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            //连线\r\n\t            if( endNode !== null && startNode != null ) {\r\n\t                this.drawLine(startNode, endNode, api);\r\n\t            }\r\n\t\r\n\t\r\n\t        }\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    TopoDrawNode.prototype.getWidth = function( p_nodeList, p_serverW, p_switchW ) {\r\n\t        var computeCount = 0;\r\n\t        var storageCount = 0; \r\n\t        var switchCount = 0; \r\n\t        for ( var i = 0; i < p_nodeList.length; i++ ) {\r\n\t            if ( p_nodeList[i].nodetype === \"1\" ) {\r\n\t               computeCount++;\r\n\t            } else if (p_nodeList[i].nodetype === \"2\" ) {           \r\n\t                storageCount++;\r\n\t            } else if (p_nodeList[i].nodetype === \"3\" ) {\r\n\t                switchCount++;\r\n\t            }\r\n\t        }\r\n\t        var serverCount = computeCount > storageCount ? computeCount : storageCount; \r\n\t        var w1 = 60 + serverCount * (p_serverW + 50) + 150;\r\n\t        var s1 = 40 + switchCount * (p_switchW + 50) + 150;\r\n\t        return w1 > s1 ? w1 : s1;\r\n\t    };\r\n\t\r\n\t    TopoDrawNode.prototype.addNodeByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, api);\r\n\t            this.add(node);\r\n\t            if( node.portNodeList !== undefined && node.portNodeList.length > 0 ) {\r\n\t                for (var i = 0; i < node.portNodeList.length; i++ ) {\r\n\t                    this.portList.push(node.portNodeList[i]);\r\n\t                }\r\n\t                //this.portList.concat(node.portNodeList);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    TopoDrawNode.prototype.drawLine = function( p_startNode, p_endNode, api ) {\r\n\t        var fleftx = p_startNode.position[0] + p_startNode.parent.position[0] + p_startNode.parent.parent.position[0];\r\n\t        var flefty = p_startNode.position[1] + p_startNode.parent.position[1] + p_startNode.parent.parent.position[1];\r\n\t        var fwidth = p_startNode.model.get(\"width\");\r\n\t        var fheight = p_startNode.model.get(\"height\");\r\n\t\r\n\t        var torightx = p_endNode.position[0] + p_endNode.parent.position[0];\r\n\t        var torighty = p_endNode.position[1] + p_endNode.parent.position[1];\r\n\t        var towidth = p_endNode.model.get(\"width\");\r\n\t        var toheight =p_endNode.model.get(\"height\");\r\n\t        var moddleY = 250;\r\n\t        var nodetype = p_startNode.model.get(\"lineInfo\").nodetype;\r\n\t        if( nodetype === \"2\" ) {\r\n\t            moddleY = 450;\r\n\t        }\r\n\t\r\n\t        var _moddleX = p_startNode.lineInfo.moddleX;\r\n\t        var defaultOption = {\r\n\t            fromBounds : {x: fleftx, y: flefty, width: fwidth, height: fheight},\r\n\t            toBounds: {x: torightx, y: torighty, width: towidth, height: toheight},\r\n\t            moddleY: moddleY,\r\n\t            style : {\r\n\t                lineWidth : 1,\r\n\t                stroke: '#62A4DD'//,\r\n\t                //fill: '#9699DD'\r\n\t            },\r\n\t            hoverStyle : {\r\n\t                lineWidth : 2,\r\n\t                stroke: 'red'//,\r\n\t                //fill:'#2FDE92'\r\n\t            }\r\n\t        };\r\n\t        if ( _moddleX !== undefined ) {\r\n\t            defaultOption.moddleX =  _moddleX;\r\n\t        }\r\n\t        var netWorkLineModel = new NetWorkLineModel(defaultOption);\r\n\t        var netWorkLineNode = new NetWorkLineNode(netWorkLineModel);\r\n\t        this.add(netWorkLineNode);\r\n\t        netWorkLineNode.on(\"mouseover\", function(e) {\r\n\t            var params = {};\r\n\t                params.event = e;\r\n\t                params.x = e.offsetX;\r\n\t                params.y = e.offsetY;\r\n\t                params.width = 150;\r\n\t                params.height = 170;\r\n\t                params.eWidth =  5 ;\r\n\t                params.parmDate = e.target.parmDate;\r\n\t                api.showTipWindow(params);\r\n\t\r\n\t        });\r\n\t        netWorkLineNode.on(\"mouseout\", function(e) {\r\n\t             api.hideTipWindow(e.event.target);\r\n\t        });\r\n\t        // //线 bind 事件\r\n\t        // var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];\r\n\t        // //绑定悬浮事件\r\n\t        // zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n\t        //     netWorkLineNode.on(eveName, function (e) {\r\n\t\r\n\t        //     }, this);\r\n\t        // }, this);\r\n\t\r\n\t\r\n\t    }\r\n\t    zrUtil.inherits(TopoDrawNode, NetworkNode);\r\n\t    module.exports = TopoDrawNode;\r\n\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t\tvar Node = __webpack_require__(74);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t\tvar Util = __webpack_require__(67);\r\n\t\tvar graphic = __webpack_require__(3);\r\n\t    var Point = __webpack_require__(68);\r\n\t    var Connector = __webpack_require__(84);\r\n\t\r\n\t\tfunction NetWorkLineNode(model,api) {\r\n\t\t\tNode.call(this);\r\n\t        this.model = model;  // NetWorkLineModal\r\n\t        this.con = null;        \r\n\t\t\tthis.render();\r\n\t\t\tthis.refreshLine();\r\n\t        \r\n\t\t};\r\n\t\r\n\t\tNetWorkLineNode.prototype.render = function() {\r\n\t            var parmData = {};\r\n\t            if ( this.model.get(\"isVector\") ) {\r\n\t                 parmData.symbol = {type:\"arrow\", size: 10, color:\"#000000\"};\r\n\t            } else {\r\n\t                 parmData.symbol = {type:\"\"};\r\n\t            }\r\n\t            var _style = this.model.get(\"style\");\r\n\t            var _hoverStyle = this.model.get(\"hoverStyle\");\r\n\t            parmData.style = _style;\r\n\t            parmData.hoverStyle = _hoverStyle;\r\n\t            \r\n\t            var _isEdit = this.model.get(\"isEdit\");\r\n\t            parmData.isEdit = _isEdit;\r\n\t            \r\n\t            this.con =  new Connector(parmData);  //\"arrow\"\r\n\t            this.add(this.con);\r\n\t\t};\r\n\t\r\n\t    NetWorkLineNode.prototype.refreshLine = function () {\r\n\t        var moddleY = this.model.get(\"moddleY\");\r\n\t        var moddleX = this.model.get(\"moddleX\");\r\n\t\r\n\t        var sRect = this.model.get(\"fromBounds\");\r\n\t        var sBounds = [sRect.x, sRect.y, sRect.x + sRect.width, sRect.y + sRect.height];\r\n\t\r\n\t        var eRect = this.model.get(\"toBounds\");\r\n\t        var eBounds = [eRect.x, eRect.y, eRect.x + eRect.width, eRect.y + eRect.height];\r\n\t\r\n\t        var sConnectorPoint = Util.getConnectorPoints(sRect);\r\n\t        var eConnectorPoint = Util.getConnectorPoints(eRect);\r\n\t\r\n\t        var startPoint = null;\r\n\t        var endPoint = null;\r\n\t        if (sRect.y < eRect.y) {\r\n\t            startPoint = sConnectorPoint.bottom;\r\n\t            endPoint = eConnectorPoint.top;\r\n\t        } else {\r\n\t            startPoint = sConnectorPoint.top;\r\n\t            endPoint = eConnectorPoint.bottom;\r\n\t        }\r\n\t\r\n\t        var solutions = this.connector2Points(startPoint, endPoint, moddleX, \r\n\t                        moddleY, sBounds, eBounds);\r\n\t            //adjust connector\r\n\t        //  console.info(\"connector2Points() -> Solution: \" + solutions[0][2]);\r\n\t        // var points = Util.traslatePoints(solutions[0][2]);\r\n\t\r\n\t        //this.line.attr('shape', {points: points});\r\n\t        this.con.refresh(solutions[0][2]);\r\n\t    };\r\n\t\r\n\t    NetWorkLineNode.prototype.connector2Points = function(startPoint, endPoint, moddleX, middleY, sBounds, eBounds ){\r\n\t        var solutions = [];\r\n\t        //Basic solution 最基本的解决方案   为其他解决方案做准备\r\n\t        var s = [startPoint];\r\n\t        if ( moddleX !== undefined && moddleX !== null ) {\r\n\t             s.push(new Point(startPoint.x - moddleX, startPoint.y));\r\n\t             s.push(new Point(startPoint.x - moddleX, middleY));\r\n\t             s.push(new Point(endPoint.x, middleY)); \r\n\t        } else {\r\n\t            s.push(new Point(startPoint.x, middleY));\r\n\t            s.push(new Point(endPoint.x, middleY)); \r\n\t        }\r\n\t        s.push(endPoint);        \r\n\t\r\n\t        //SO - no additional points     S0 解决方案 \r\n\t        var s0 = Point.cloneArray(s);\r\n\t        solutions.push(['s0', 's0', s0]);\r\n\t        return solutions;\r\n\t        \r\n\t    };\r\n\t\r\n\t\tUtil.inherits(NetWorkLineNode, Node);\r\n\t\r\n\t\tmodule.exports = NetWorkLineNode;\r\n\t\r\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * 连接线\r\n\t * @author wang.xiaohu\r\n\t */\r\n\t\r\n\t    var Util = __webpack_require__(67);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var Node = __webpack_require__(74);\r\n\t    var symbolUtil = __webpack_require__(85);\r\n\t    var Handle = __webpack_require__(86);\r\n\t    var ConnectionPoint = __webpack_require__(87);\r\n\t    /**\r\n\t     * 构造函数\r\n\t     * @param {[type]} points [description]\r\n\t     */\r\n\t    function Connector(options) {\r\n\t        Node.call(this);\r\n\t        this.resourceId = Util.getUUID();  // 生成节点ID\r\n\t        var defaultOptions = {\r\n\t            symbol: {type:\"arrow\" , size: 10, color:\"#000000\"},  //箭头  可选值为： 'circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow'\r\n\t            style: {lineWidth:1, stroke:\"#000000\", lineType:Connector.TYPE_STRAIGHT},    //样式\r\n\t            hoverStyle: {lineWidth:2, stroke:\"lime\"}, //移上去的样式\r\n\t            arrowHoverStyle: {fill:\"lime\"},\r\n\t            shape: {points:null, smooth:false, smoothConstraint:null},//形状\r\n\t            position: [0,0],\r\n\t            isEdit: true,  //是否可编辑\r\n\t            text: {\r\n\t                text: \"\",\r\n\t                color: '#000000', // 文本颜色\r\n\t                textFont: '12px Microsoft YaHei'\r\n\t            }\r\n\t        }\r\n\t        var opt = options || {};\r\n\t        this.options = zrUtil.merge(defaultOptions, opt, true);\r\n\t        this.model = options.model;\r\n\t        this.handles = [];\r\n\t        this.connectionPoints = [];\r\n\t\r\n\t        this.conPointsGroup = null;\r\n\t        this.startNode = null;\r\n\t        this.endNode = null;\r\n\t        this.icons = [];\r\n\t        this.render();\r\n\t    };\r\n\t\r\n\t    Connector.TYPE_STRAIGHT = 'straight';\r\n\t\r\n\t    Connector.TYPE_JAGGED = 'jagged';\r\n\t\r\n\t    Connector.TYPE_ROUND = 'round';\r\n\t\r\n\t    Connector.RADIUS = 3;\r\n\t\r\n\t    Connector.START_NODE = \"startNode\";\r\n\t\r\n\t    Connector.END_NODE = \"endNode\";\r\n\t\r\n\t    Connector.LEFT = \"left\";\r\n\t\r\n\t    Connector.RIGHT = \"right\";\r\n\t\r\n\t    Connector.TOP = \"top\";\r\n\t\r\n\t    Connector.BOTTOM = \"bottom\";\r\n\t\r\n\t    Connector.BOTTOM = \"bottom\";\r\n\t\r\n\t    Connector.SEPERATOR = \"-\";\r\n\t    /**\r\n\t     * 重新画线，如果传空则根据turningPoints 重新画线\r\n\t     * @param  {[type]} points [description]\r\n\t     * @return {[type]}        [description]\r\n\t     */\r\n\t    Connector.prototype.refresh = function(points) {\r\n\t        if(points) {\r\n\t            this.turningPoints = points;\r\n\t        }\r\n\t        //将[x:0,y:0]转化为[0, 0]  给zrender使用\r\n\t        var points = Util.traslatePoints(this.turningPoints);\r\n\t        this.line.attr('shape', {points: points});\r\n\t\r\n\t        var symbolTo = this.childOfName('toSymbol');\r\n\t        if(symbolTo) {\r\n\t            symbolTo.attr('position', points[points.length -1]);\r\n\t            symbolTo.attr('rotation', Util.tangentRotation(this.turningPoints[this.turningPoints.length-2], this.turningPoints[this.turningPoints.length-1]));\r\n\t        };\r\n\t\r\n\t        var lineText = this.childOfName('lineText');\r\n\t        //开始没有创建文本，后来传进来text了，需要先创建文本\r\n\t        if (!lineText  && this.options.text.text) {\r\n\t            var text = this.drawText(\"lineText\", this.options.text.text,0, 0);\r\n\t            this.add(text.text);\r\n\t            lineText = this.childOfName('lineText');\r\n\t        };\r\n\t        if (lineText) {\r\n\t            lineText.setStyle(\"text\", this.options.text.text);\r\n\t            var middlePoint = this.middle(this.options.text);\r\n\t\r\n\t\r\n\t            if (this.options.style.lineType == Connector.TYPE_STRAIGHT ) {\r\n\t                //计算出极坐标的角度\r\n\t                var points  = Util.getMaxLineLength(this.turningPoints);\r\n\t                var angle = - Math.atan2(points[1].y - middlePoint[1], points[1].x - middlePoint[0]);\r\n\t                lineText.attr('rotation', angle);  //,Math.PI/2\r\n\t            }\r\n\t\r\n\t            lineText.attr(\"position\", middlePoint);\r\n\t        };\r\n\t   };\r\n\t    /**\r\n\t     * 渲染\r\n\t     * @return {[type]} [description]\r\n\t     */\r\n\t    Connector.prototype.render = function() {\r\n\t        var that = this;\r\n\t        this.line = new graphic.Polyline({\r\n\t            position: this.options.position,\r\n\t            shape: this.options.shape,\r\n\t            style: this.options.style,\r\n\t            z:0 //\r\n\t        });\r\n\t        this.add(this.line);\r\n\t        var MOUSE_EVENT_NAMES = ['dblclick', 'click'];//'click', 'dblclick', 'mouseover', 'mouseout'\r\n\t\r\n\t        zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n\t            that.line.on(eveName, function (e) {\r\n\t                var params = {};\r\n\t                params.event = e;\r\n\t                params.type = \"Connector:\" + eveName;\r\n\t                params.target = that;\r\n\t                that.trigger(params.type, params);\r\n\t                if(that.options.isEdit == false){return;}\r\n\t                if(that.options.isEdit && that.connectionPoints.length < 1 && that.turningPoints.length >=2) {\r\n\t                    that.createAllconnectionPoint()\r\n\t                }\r\n\t                if(that.handles.length < 1 ) {\r\n\t                    that.shapeSetHandle();\r\n\t                }\r\n\t\r\n\t\r\n\t            });\r\n\t        });\r\n\t\r\n\t        if(this.options.isEdit) {\r\n\t            this.conPointsGroup = new graphic.Group();\r\n\t            this.add(this.conPointsGroup);\r\n\t        }\r\n\t\r\n\t        var symbolTo = this.createSymbol('toSymbol', this.options.symbol.type, this.options.symbol.size, this.options.symbol.color); //arrow,triangle\r\n\t        if (symbolTo) {\r\n\t            this.add(symbolTo);\r\n\t        }\r\n\t\r\n\t        if (this.options.hoverStyle) {\r\n\t            var el = this.line;\r\n\t            graphic.setElementHoverStl(el, this.options.hoverStyle);\r\n\t            if(symbolTo){graphic.setElementHoverStl(symbolTo, this.options.arrowHoverStyle);}\r\n\t\r\n\t            el.on('mouseover', function() {\r\n\t                graphic.doEnterHover(el);\r\n\t                if(symbolTo){graphic.doEnterHover(symbolTo);}\r\n\t\r\n\t            })\r\n\t              .on('mouseout', function() {\r\n\t                graphic.doLeaveHover(el);\r\n\t                if(symbolTo){graphic.doLeaveHover(symbolTo);}\r\n\t\r\n\t            })\r\n\t        }\r\n\t\r\n\t        //创建文本\r\n\t        if (this.options.text.text && this.options.text.text != \"\") {\r\n\t            var text = this.drawText(\"lineText\", this.options.text.text,0, 0);\r\n\t            this.add(text.text);\r\n\t        };\r\n\t\r\n\t\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 创建Node的连接点\r\n\t     * @private\r\n\t     *\r\n\t     * @return {[type]} [description]\r\n\t     */\r\n\t    Connector.prototype.createAllconnectionPoint = function() {\r\n\t        var sRect = this.startNode.getRect? this.startNode.getRect().boundingRect : Util.getRect(this.startNode).boundingRect;\r\n\t\r\n\t        var eRect = this.endNode.getRect? this.endNode.getRect().boundingRect : Util.getRect(this.endNode).boundingRect;\r\n\t\r\n\t        var sConnectorPoint = Util.getConnectorPoints(sRect);\r\n\t        var eConnectorPoint = Util.getConnectorPoints(eRect);\r\n\t\r\n\t        this.connectionPointCreate(this.startNode, sConnectorPoint.left, Connector.START_NODE + Connector.SEPERATOR + Connector.LEFT);\r\n\t        this.connectionPointCreate(this.startNode, sConnectorPoint.right, Connector.START_NODE + Connector.SEPERATOR + Connector.RIGHT);\r\n\t        this.connectionPointCreate(this.startNode, sConnectorPoint.top, Connector.START_NODE + Connector.SEPERATOR + Connector.TOP);\r\n\t        this.connectionPointCreate(this.startNode, sConnectorPoint.bottom, Connector.START_NODE + Connector.SEPERATOR + Connector.BOTTOM);\r\n\t\r\n\t        this.connectionPointCreate(this.endNode, eConnectorPoint.left, Connector.END_NODE + Connector.SEPERATOR + Connector.LEFT);\r\n\t        this.connectionPointCreate(this.endNode, eConnectorPoint.right, Connector.END_NODE + Connector.SEPERATOR + Connector.RIGHT);\r\n\t        this.connectionPointCreate(this.endNode, eConnectorPoint.top, Connector.END_NODE + Connector.SEPERATOR + Connector.TOP);\r\n\t        this.connectionPointCreate(this.endNode, eConnectorPoint.bottom, Connector.END_NODE + Connector.SEPERATOR + Connector.BOTTOM);\r\n\t\r\n\t\r\n\t        this.connectionPointCreate(this, this.turningPoints[0].clone(), ConnectionPoint.TYPE_CONNECTOR);\r\n\t\r\n\t        this.connectionPointCreate(this, this.turningPoints[this.turningPoints.length-1].clone(), ConnectionPoint.TYPE_CONNECTOR);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 创建连接点\r\n\t     * @private\r\n\t     * @param  {[type]} shape [description]\r\n\t     * @param  {[type]} point [description]\r\n\t     * @param  {[type]} type  [description]\r\n\t     * @return {[type]}       [description]\r\n\t     */\r\n\t    Connector.prototype.connectionPointCreate = function(shape, point, type) {\r\n\t        var conPoint = new ConnectionPoint(this, point, type);\r\n\t        this.conPointsGroup.add(conPoint.shape);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 清空控制点\r\n\t     * @return {[type]} [description]\r\n\t     */\r\n\t    Connector.prototype.clearHandles = function() {\r\n\t        for (var i = 0; i < this.handles.length; i++) {\r\n\t            this.remove(this.handles[i].handleShape);\r\n\t        };\r\n\t        this.handles = [];\r\n\t        if (this.conPointsGroup) {\r\n\t            this.conPointsGroup.removeAll();\r\n\t        };\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 创建拆线 线断的控制点\r\n\t     * @return {[type]} [description]\r\n\t     */\r\n\t    Connector.prototype.shapeSetHandle = function() {\r\n\t        for(var i=1; i<this.turningPoints.length-2; i++){\r\n\t            var h;\r\n\t            var x, y;\r\n\t            //是否在一条线上\r\n\t            var isCollineaityFirst = Util.collinearity(this.turningPoints[i-1], this.turningPoints[i], this.turningPoints[i+1]);\r\n\t            var isCollineaitySecond = Util.collinearity(this.turningPoints[i], this.turningPoints[i+1], this.turningPoints[i+2]);\r\n\t            if( (!isCollineaityFirst && (!isCollineaitySecond || this.turningPoints[i+1].equals(this.turningPoints[i+2])))\r\n\t                || ( (!isCollineaityFirst || this.turningPoints[i-1].equals(this.turningPoints[i])) && !isCollineaitySecond )) {\r\n\t\r\n\t                if(this.turningPoints[i].x === this.turningPoints[i+1].x){ //same vertical\r\n\t                    x = this.turningPoints[i].x;\r\n\t                    y = (this.turningPoints[i].y + this.turningPoints[i+1].y) / 2;\r\n\t\r\n\t                    h = new Handle('h',x,y,this);\r\n\t\r\n\t\r\n\t                }\r\n\t                else if(this.turningPoints[i].y === this.turningPoints[i+1].y){ // same horizontal\r\n\t                    x = (this.turningPoints[i].x +  this.turningPoints[i+1].x) / 2;\r\n\t                    y = this.turningPoints[i].y;\r\n\t                    h =  new  Handle('v',x,y,this);\r\n\t                }\r\n\t                if (h) {\r\n\t                    this.add(h.handleShape);\r\n\t                    this.handles.push(h);\r\n\t                }\r\n\t\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    /**\r\n\t     * 创建箭头\r\n\t     * @param  {[type]} name       [description]\r\n\t     * @param  {[type]} symbolType [description]\r\n\t     * @param  {[type]} symbolSize [description]\r\n\t     * @param  {[type]} color      [description]\r\n\t     * @return {[type]}            [description]\r\n\t     */\r\n\t    Connector.prototype.createSymbol = function(name,symbolType, symbolSize, color) {\r\n\t        if (symbolType === 'none') {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        if (!zrUtil.isArray(symbolSize)) {\r\n\t            symbolSize = [symbolSize, symbolSize];\r\n\t        }\r\n\t        var symbolPath = symbolUtil.createSymbol(\r\n\t            symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2,\r\n\t            symbolSize[0], symbolSize[1], color\r\n\t        );\r\n\t        symbolPath.name = name;\r\n\t\r\n\t        return symbolPath;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 绘制线段上的文本\r\n\t     * @param  {[type]} content [description]\r\n\t     * @param  {[type]} x       [description]\r\n\t     * @param  {[type]} y       [description]\r\n\t     * @param  {[type]} color   [description]\r\n\t     * @return {[type]}         [description]\r\n\t     */\r\n\t    Connector.prototype.drawText = function (name,content, x, y, color) {\r\n\t        var text = new graphic.Text({\r\n\t            style: {\r\n\t                text: content,\r\n\t                x: x,\r\n\t                y: y,\r\n\t                fill: color ? color : this.options.text.color,\r\n\t                textFont: this.options.text.textFont\r\n\t            },\r\n\t            zlevel: 20\r\n\t        });\r\n\t        text.name = name;\r\n\t        return {\r\n\t            text: text,\r\n\t            rect: text.getBoundingRect()\r\n\t        };\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * 获取线段的中间值\r\n\t     * @param {[options {text:xx,textFont:xx}]} [可无 文本] [description]\r\n\t     * @return {[type]} [x, y]\r\n\t     */\r\n\t    Connector.prototype.middle = function(text){\r\n\t\r\n\t        if(this.options.style.lineType == Connector.TYPE_STRAIGHT){\r\n\t            var points  = Util.getMaxLineLength(this.turningPoints);\r\n\t            //如果是求线段上的文字的中间值\r\n\t            if(text) {\r\n\t                //取出字的长度，计算角度，\r\n\t                var textWidth = graphic.textContain.getWidth(text.text, text.textFont);\r\n\t                var angle = Util.getAngle(points[0],points[1]);\r\n\t                var length =  Util.distance(points[0],points[1])/2 - textWidth/2;\r\n\t                var newPoint = Util.getEndPoint(points[0], length, angle);\r\n\t                return [newPoint.x, newPoint.y];\r\n\t            } else {\r\n\t                var middleX = (points[0].x + points[1].x)/2;\r\n\t                var middleY = (points[0].y + points[1].y) /2;\r\n\t                return [middleX, middleY];\r\n\t            }\r\n\t        }\r\n\t        else if(this.options.style.lineType == Connector.TYPE_JAGGED){\r\n\t\r\n\t            //find total distance\r\n\t            var distance = 0;\r\n\t            for(var i=0; i<this.turningPoints.length-1; i++){\r\n\t                distance += Util.getLength(this.turningPoints[i], this.turningPoints[i+1]);\r\n\t            }\r\n\t\r\n\t            //find between what turning points the half distance is\r\n\t            var index = -1;\r\n\t            var ellapsedDistance = 0;\r\n\t            for(var i=0; i<this.turningPoints.length-1; i++){\r\n\t                index = i;\r\n\t                var segment = Util.getLength(this.turningPoints[i], this.turningPoints[i+1]);\r\n\t                if(ellapsedDistance + segment < distance /2){\r\n\t                    ellapsedDistance += segment;\r\n\t                }\r\n\t                else{\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t\r\n\t            //we have the middle distance somewhere between i(ndex) and i(ndex)+1\r\n\t            if(index != -1){\r\n\t                var missingDistance = distance / 2 - ellapsedDistance;\r\n\t                if( Util.round(this.turningPoints[index].x, 3) == Util.round(this.turningPoints[index + 1].x, 3) ){ //vertical segment (same x)\r\n\t                    return [this.turningPoints[index].x, Math.min(this.turningPoints[index].y, this.turningPoints[index + 1].y) + missingDistance];\r\n\t                } else if( Util.round(this.turningPoints[index].y, 3) == Util.round(this.turningPoints[index + 1].y, 3) ) { //horizontal segment (same y)\r\n\t                    return [Math.min(this.turningPoints[index].x, this.turningPoints[index + 1].x) + missingDistance, this.turningPoints[index].y];\r\n\t                } else{\r\n\t                    console.error(\"Connector:middle() - this should never happen \" + this.turningPoints[index] + \" \" + this.turningPoints[index + 1]\r\n\t                        + \" nr of points \" + this.turningPoints.length\r\n\t                        );\r\n\t                }\r\n\t\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return null;\r\n\t    },\r\n\t\r\n\t    /**\r\n\t     * 转JSON对象\r\n\t     * @return {[type]} [description]\r\n\t     */\r\n\t    Connector.prototype.toJSON = function() {\r\n\t\r\n\t        this.model.set(\"resourceId\", this.resourceId);\r\n\t        this.model.set(\"properties.type\", 14);\r\n\t\r\n\t        this.model.set(\"bounds.upperLeft.x\", this.position[0]);\r\n\t        this.model.set(\"bounds.upperLeft.y\", this.position[1]);\r\n\t        this.model.set(\"bounds.lowerRight.x\", this.position[0] + this.getBoundingRect().width);\r\n\t        this.model.set(\"bounds.lowerRight.y\", this.position[1] + this.getBoundingRect().height);\r\n\t        this.model.set(\"style.sPos\", this.sPos);\r\n\t        this.model.set(\"style.ePos\", this.ePos);\r\n\t        this.model.set(\"dockers\",this.turningPoints);\r\n\t        return this.model.option;\r\n\t    };\r\n\t\r\n\t     /**\r\n\t     * refreshModel\r\n\t     * @return {[type]} [description]\r\n\t     */\r\n\t    Connector.prototype.refreshModel = function() {\r\n\t        this.model.set(\"options.dockers\",this.turningPoints);\r\n\t    };\r\n\t\r\n\t    Util.inherits(Connector,Node);\r\n\t\r\n\t    module.exports = Connector;\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// Symbol factory\r\n\t\r\n\t\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var BoundingRect = __webpack_require__(25);\r\n\t    /**\r\n\t     * Triangle shape\r\n\t     * @inner\r\n\t     */\r\n\t    var Triangle = graphic.extendShape({\r\n\t        type: 'triangle',\r\n\t        shape: {\r\n\t            cx: 0,\r\n\t            cy: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\t        buildPath: function (path, shape) {\r\n\t            var cx = shape.cx;\r\n\t            var cy = shape.cy;\r\n\t            var width = shape.width / 2;\r\n\t            var height = shape.height / 2;\r\n\t            path.moveTo(cx, cy - height);\r\n\t            path.lineTo(cx + width, cy + height);\r\n\t            path.lineTo(cx - width, cy + height);\r\n\t            path.closePath();\r\n\t        }\r\n\t    });\r\n\t    /**\r\n\t     * Diamond shape\r\n\t     * @inner\r\n\t     */\r\n\t    var Diamond = graphic.extendShape({\r\n\t        type: 'diamond',\r\n\t        shape: {\r\n\t            cx: 0,\r\n\t            cy: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\t        buildPath: function (path, shape) {\r\n\t            var cx = shape.cx;\r\n\t            var cy = shape.cy;\r\n\t            var width = shape.width / 2;\r\n\t            var height = shape.height / 2;\r\n\t            path.moveTo(cx, cy - height);\r\n\t            path.lineTo(cx + width, cy);\r\n\t            path.lineTo(cx, cy + height);\r\n\t            path.lineTo(cx - width, cy);\r\n\t            path.closePath();\r\n\t        }\r\n\t    });\r\n\t\r\n\t    /**\r\n\t     * Pin shape\r\n\t     * @inner\r\n\t     */\r\n\t    var Pin = graphic.extendShape({\r\n\t        type: 'pin',\r\n\t        shape: {\r\n\t            // x, y on the cusp\r\n\t            x: 0,\r\n\t            y: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\t\r\n\t        buildPath: function (path, shape) {\r\n\t            var x = shape.x;\r\n\t            var y = shape.y;\r\n\t            var w = shape.width / 5 * 3;\r\n\t            // Height must be larger than width\r\n\t            var h = Math.max(w, shape.height);\r\n\t            var r = w / 2;\r\n\t\r\n\t            // Dist on y with tangent point and circle center\r\n\t            var dy = r * r / (h - r);\r\n\t            var cy = y - h + r + dy;\r\n\t            var angle = Math.asin(dy / r);\r\n\t            // Dist on x with tangent point and circle center\r\n\t            var dx = Math.cos(angle) * r;\r\n\t\r\n\t            var tanX = Math.sin(angle);\r\n\t            var tanY = Math.cos(angle);\r\n\t\r\n\t            path.arc(\r\n\t                x, cy, r,\r\n\t                Math.PI - angle,\r\n\t                Math.PI * 2 + angle\r\n\t            );\r\n\t\r\n\t            var cpLen = r * 0.6;\r\n\t            var cpLen2 = r * 0.7;\r\n\t            path.bezierCurveTo(\r\n\t                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\r\n\t                x, y - cpLen2,\r\n\t                x, y\r\n\t            );\r\n\t            path.bezierCurveTo(\r\n\t                x, y - cpLen2,\r\n\t                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\r\n\t                x - dx, cy + dy\r\n\t            );\r\n\t            path.closePath();\r\n\t        }\r\n\t    });\r\n\t\r\n\t    /**\r\n\t     * Arrow shape\r\n\t     * @inner\r\n\t     */\r\n\t    var Arrow = graphic.extendShape({\r\n\t\r\n\t        type: 'arrow',\r\n\t\r\n\t        shape: {\r\n\t            x: 0,\r\n\t            y: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\t\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var height = shape.height;\r\n\t            var width = shape.width;\r\n\t            var x = shape.x;\r\n\t            var y = shape.y;\r\n\t            var dx = width / 3 * 2;\r\n\t            ctx.moveTo(x, y);\r\n\t            ctx.lineTo(x + dx, y + height);\r\n\t            ctx.lineTo(x, y + height / 4 * 3);\r\n\t            ctx.lineTo(x - dx, y + height);\r\n\t            ctx.lineTo(x, y);\r\n\t            ctx.closePath();\r\n\t        }\r\n\t    });\r\n\t\r\n\t    /**\r\n\t     * Map of path contructors\r\n\t     * @type {Object.<string, module:zrender/graphic/Path>}\r\n\t     */\r\n\t    var symbolCtors = {\r\n\t        line: graphic.Line,\r\n\t\r\n\t        rect: graphic.Rect,\r\n\t\r\n\t        roundRect: graphic.Rect,\r\n\t\r\n\t        square: graphic.Rect,\r\n\t\r\n\t        circle: graphic.Circle,\r\n\t\r\n\t        diamond: Diamond,\r\n\t\r\n\t        pin: Pin,\r\n\t\r\n\t        arrow: Arrow,\r\n\t\r\n\t        triangle: Triangle\r\n\t    };\r\n\t\r\n\t    var symbolShapeMakers = {\r\n\t\r\n\t        line: function (x, y, w, h, shape) {\r\n\t            // FIXME\r\n\t            shape.x1 = x;\r\n\t            shape.y1 = y + h / 2;\r\n\t            shape.x2 = x + w;\r\n\t            shape.y2 = y + h / 2;\r\n\t        },\r\n\t\r\n\t        rect: function (x, y, w, h, shape) {\r\n\t            shape.x = x;\r\n\t            shape.y = y;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        },\r\n\t\r\n\t        roundRect: function (x, y, w, h, shape) {\r\n\t            shape.x = x;\r\n\t            shape.y = y;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t            shape.r = Math.min(w, h) / 4;\r\n\t        },\r\n\t\r\n\t        square: function (x, y, w, h, shape) {\r\n\t            var size = Math.min(w, h);\r\n\t            shape.x = x;\r\n\t            shape.y = y;\r\n\t            shape.width = size;\r\n\t            shape.height = size;\r\n\t        },\r\n\t\r\n\t        circle: function (x, y, w, h, shape) {\r\n\t            // Put circle in the center of square\r\n\t            shape.cx = x + w / 2;\r\n\t            shape.cy = y + h / 2;\r\n\t            shape.r = Math.min(w, h) / 2;\r\n\t        },\r\n\t\r\n\t        diamond: function (x, y, w, h, shape) {\r\n\t            shape.cx = x + w / 2;\r\n\t            shape.cy = y + h / 2;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        },\r\n\t\r\n\t        pin: function (x, y, w, h, shape) {\r\n\t            shape.x = x + w / 2;\r\n\t            shape.y = y + h / 2;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        },\r\n\t\r\n\t        arrow: function (x, y, w, h, shape) {\r\n\t            shape.x = x + w / 2;\r\n\t            shape.y = y + h / 2;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        },\r\n\t\r\n\t        triangle: function (x, y, w, h, shape) {\r\n\t            shape.cx = x + w / 2;\r\n\t            shape.cy = y + h / 2;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    var symbolBuildProxies = {};\r\n\t    for (var name in symbolCtors) {\r\n\t        symbolBuildProxies[name] = new symbolCtors[name]();\r\n\t    }\r\n\t\r\n\t    var Symbol = graphic.extendShape({\r\n\t\r\n\t        type: 'symbol',\r\n\t\r\n\t        shape: {\r\n\t            symbolType: '',\r\n\t            x: 0,\r\n\t            y: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\t\r\n\t        beforeBrush: function () {\r\n\t            var style = this.style;\r\n\t            var shape = this.shape;\r\n\t            // FIXME\r\n\t            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\r\n\t                style.textPosition = ['50%', '40%'];\r\n\t                style.textAlign = 'center';\r\n\t                style.textVerticalAlign = 'middle';\r\n\t            }\r\n\t        },\r\n\t\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var symbolType = shape.symbolType;\r\n\t            var proxySymbol = symbolBuildProxies[symbolType];\r\n\t            if (shape.symbolType !== 'none') {\r\n\t                if (!proxySymbol) {\r\n\t                    // Default rect\r\n\t                    symbolType = 'rect';\r\n\t                    proxySymbol = symbolBuildProxies[symbolType];\r\n\t                }\r\n\t                symbolShapeMakers[symbolType](\r\n\t                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\r\n\t                );\r\n\t                proxySymbol.buildPath(ctx, proxySymbol.shape);\r\n\t            }\r\n\t        }\r\n\t    });\r\n\t\r\n\t    // Provide setColor helper method to avoid determine if set the fill or stroke outside\r\n\t    var symbolPathSetColor = function (color) {\r\n\t        if (this.type !== 'image') {\r\n\t            var symbolStyle = this.style;\r\n\t            var symbolShape = this.shape;\r\n\t            if (symbolShape && symbolShape.symbolType === 'line') {\r\n\t                symbolStyle.stroke = color;\r\n\t            }\r\n\t            else if (this.__isEmptyBrush) {\r\n\t                symbolStyle.stroke = color;\r\n\t                symbolStyle.fill = '#fff';\r\n\t            }\r\n\t            else {\r\n\t                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\r\n\t                symbolStyle.fill && (symbolStyle.fill = color);\r\n\t                symbolStyle.stroke && (symbolStyle.stroke = color);\r\n\t            }\r\n\t            this.dirty();\r\n\t        }\r\n\t    };\r\n\t\r\n\t    var symbolUtil = {\r\n\t        /**\r\n\t         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n\t         * @param {string} symbolType\r\n\t         * @param {number} x\r\n\t         * @param {number} y\r\n\t         * @param {number} w\r\n\t         * @param {number} h\r\n\t         * @param {string} color\r\n\t         */\r\n\t        createSymbol: function (symbolType, x, y, w, h, color) {\r\n\t            var isEmpty = symbolType.indexOf('empty') === 0;\r\n\t            if (isEmpty) {\r\n\t                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\r\n\t            }\r\n\t            var symbolPath;\r\n\t\r\n\t            if (symbolType.indexOf('image://') === 0) {\r\n\t                symbolPath = new graphic.Image({\r\n\t                    style: {\r\n\t                        image: symbolType.slice(8),\r\n\t                        x: x,\r\n\t                        y: y,\r\n\t                        width: w,\r\n\t                        height: h\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t            else if (symbolType.indexOf('path://') === 0) {\r\n\t                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\r\n\t            }\r\n\t            else {\r\n\t                symbolPath = new Symbol({\r\n\t                    shape: {\r\n\t                        symbolType: symbolType,\r\n\t                        x: x,\r\n\t                        y: y,\r\n\t                        width: w,\r\n\t                        height: h\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t\r\n\t            symbolPath.__isEmptyBrush = isEmpty;\r\n\t\r\n\t            symbolPath.setColor = symbolPathSetColor;\r\n\t\r\n\t            symbolPath.setColor(color);\r\n\t\r\n\t            return symbolPath;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.exports = symbolUtil;\r\n\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * 画句柄\r\n\t * @author wang.xiaohu\r\n\t */\r\n\t\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var Util = __webpack_require__(67);\r\n\t    function Handle(type, x, y, connector){\r\n\t        this.type = type;\r\n\t\r\n\t        this.x = x;\r\n\t        \r\n\t        this.y = y;\r\n\t        \r\n\t        this.visible = true;\r\n\t\r\n\t        this.connector = connector;\r\n\t\r\n\t        this.handleShape = new graphic.Circle({\r\n\t            shape: {\r\n\t                cx: x,\r\n\t                cy: y,\r\n\t                r: Handle.RADIUS\r\n\t            },\r\n\t\r\n\t            style: {\r\n\t                fill: \"rgb(0,255,0)\",\r\n\t                stroke:\"rgb(0,0,0)\"\r\n\t            },\r\n\t            z : 2,  //节点Z为1 线段为0;\r\n\t            draggable:true\r\n\t        }); \r\n\t\r\n\t        var that = this\r\n\t        this.handleShape.on(\"drag\", function(e) {\r\n\t            that.actionConnector(e.offsetX,e.offsetY);\r\n\t        })\r\n\t       // return this.circle;\r\n\t    }\r\n\t\r\n\t    Handle.RADIUS = 4;\r\n\t\r\n\t    Handle.prototype = {\r\n\t        \r\n\t        constructor : Handle,\r\n\t        \r\n\t        equals : function(anotherHandle){\r\n\t            if(!anotherHandle instanceof Handle){\r\n\t                return false;\r\n\t            }\r\n\t\r\n\t            return this.type == anotherHandle.type\r\n\t            && this.x == anotherHandle.x\r\n\t            && this.y == anotherHandle.y\r\n\t            && this.visible == anotherHandle.visible;        \r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * 移动句柄\r\n\t         * @param  {[type]} newX [description]\r\n\t         * @param  {[type]} newY [description]\r\n\t         * @return {[type]}      [description]\r\n\t         */\r\n\t        actionConnector: function(newX, newY){\r\n\t            switch(this.type){\r\n\t                case 'v':\r\n\t                    var index;\r\n\t                    // 找出两个转折点（可移动句柄在这两个转折点中间）\r\n\t                    for(var i = 1; i < this.connector.turningPoints.length-1; i++){\r\n\t                        if(this.connector.turningPoints[i-1].y == this.connector.turningPoints[i].y\r\n\t                            && this.connector.turningPoints[i].y == this.y\r\n\t                            && Math.min(this.connector.turningPoints[i].x, this.connector.turningPoints[i-1].x) <= this.x\r\n\t                            && Math.max(this.connector.turningPoints[i].x, this.connector.turningPoints[i-1].x) >= this.x)\r\n\t                        {\r\n\t                            index = i;\r\n\t                        }\r\n\t                    }\r\n\t                    var deltaY = newY - this.y;   \r\n\t                    var translationMatrix = Util.translationMatrix(0, deltaY);   \r\n\t                    \r\n\t                    this.connector.turningPoints[index-1].transform(translationMatrix);\r\n\t                    this.connector.turningPoints[index].transform(translationMatrix);\r\n\t                    this.connector.refresh();\r\n\t                    this.y = newY;  //将句柄新的位置赋值给y\r\n\t\r\n\t                    break;\r\n\t\r\n\t                case 'h':\r\n\t                    var index;\r\n\t                    // 找出两个转折点（可移动句柄在这两个转折点中间）\r\n\t                    for(var i = 1; i < this.connector.turningPoints.length-1; i++){\r\n\t                        if(this.connector.turningPoints[i-1].x == this.connector.turningPoints[i].x\r\n\t                            && this.connector.turningPoints[i].x == this.x\r\n\t                            && Math.min(this.connector.turningPoints[i].y, this.connector.turningPoints[i-1].y) <= this.y\r\n\t                            && Math.max(this.connector.turningPoints[i].y, this.connector.turningPoints[i-1].y) >= this.y)\r\n\t                            {\r\n\t                            index = i;\r\n\t                        }\r\n\t                    }\r\n\t                    var deltaX = newX-this.x;    \r\n\t                    var translationMatrix = Util.translationMatrix(deltaX, 0);    \r\n\t                    this.connector.turningPoints[index-1].transform(translationMatrix);\r\n\t                    this.connector.turningPoints[index].transform(translationMatrix);\r\n\t                    this.connector.refresh();\r\n\t                    this.x = newX; //将句柄新的位置赋值给x\r\n\t\r\n\t                    break;\r\n\t            }\r\n\t           //. this.shape.updateMiddleText();\r\n\t        },    \r\n\t    }\r\n\t    module.exports = Handle;\r\n\t\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * 控制点\r\n\t * @author wang.xiaohu\r\n\t */\r\n\t\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var Util = __webpack_require__(67);\r\n\t    function ConnectionPoint(connector, point, type){\r\n\t        this.connector = connector;\r\n\t\r\n\t        this.point = point.clone();\r\n\t\r\n\t        this.type = type;\r\n\t\r\n\t        this.color = ConnectionPoint.NORMAL_COLOR;\r\n\t\r\n\t        this.oType = 'ConnectionPoint'; \r\n\t\r\n\t        this.shape = new graphic.Circle({\r\n\t            shape: {\r\n\t                cx: this.point.x,\r\n\t                cy: this.point.y,\r\n\t                r: ConnectionPoint.RADIUS\r\n\t            },\r\n\t\r\n\t            style: {\r\n\t                fill: this.color,\r\n\t                stroke:'#000000'\r\n\t            },\r\n\t            z : 2  //节点Z为1 线段为0;\r\n\t        }); \r\n\t        this.shape.type =  this.type;\r\n\t\r\n\t        this.shape.connector = connector;\r\n\t        //return this.circle;\r\n\t    }\r\n\t\r\n\t    ConnectionPoint.NORMAL_COLOR = \"#FFFF33\"; //yellow.\r\n\t\r\n\t    ConnectionPoint.OVER_COLOR = \"#FF9900\"; //orange\r\n\t\r\n\t    ConnectionPoint.CONNECTED_COLOR = \"#ff0000\"; //red\r\n\t\r\n\t    ConnectionPoint.RADIUS = 4;\r\n\t\r\n\t    ConnectionPoint.TYPE_FIGURE = 'figure';\r\n\t\r\n\t    ConnectionPoint.TYPE_CONNECTOR = 'connector';\r\n\t\r\n\t    ConnectionPoint.prototype = {\r\n\t        \r\n\t        constructor : ConnectionPoint,\r\n\t        \r\n\t        equals : function(anotherConnectionPoint){\r\n\t            return this.point.equals(anotherConnectionPoint.point)\r\n\t            && this.connector == anotherConnectionPoint.connector\r\n\t            && this.type == anotherConnectionPoint.type\r\n\t            && this.color == anotherConnectionPoint.color\r\n\t            && this.radius == anotherConnectionPoint.radius;        \r\n\t        },\r\n\t\r\n\t \r\n\t    }\r\n\t    module.exports = ConnectionPoint;\r\n\t\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Network model\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t    var Model = __webpack_require__(71);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t\r\n\t    var NetWorkLineModel = Model.extend({\r\n\t        /**\r\n\t         * @type {Object}\r\n\t         * @protected\r\n\t         */\r\n\t        defaultOption: {\r\n\t            fromBounds: {x:0, y:0, width:0, height:0},  // [左上角X, 左上角Y, 宽度 , 高度]\r\n\t            toBounds: {x:0, y:0, width:0, height:0},  // [左上角X, 左上角Y, 宽度 , 高度]\r\n\t            moddleX: 0,  // 中间线的Y坐标\r\n\t            moddleY: 0,  // 中间线的Y坐标\r\n\t            style: {\r\n\t                lineWidth:1,  // 线宽度\r\n\t                stroke: \"#FFFFFF\",  //线颜色\r\n\t            },\r\n\t            hoverStyle: {\r\n\t                lineWidth:1,  // 线宽度\r\n\t                stroke: \"#FFFFFF\",  //线颜色                \r\n\t            },\r\n\t            isVector: false\r\n\t        },\r\n\t\r\n\t        init: function (option, parentModel, extraOpt) {\r\n\t            zrUtil.merge(option, this.getDefaultOption());\r\n\t        },\r\n\t\r\n\t        getDefaultOption: function () {\r\n\t            if (!this.hasOwnProperty('__defaultOption')) {\r\n\t                var optList = [];\r\n\t                var Class = this.constructor;\r\n\t                while (Class) {\r\n\t                    var opt = Class.prototype.defaultOption;\r\n\t                    opt && optList.push(opt);\r\n\t                    Class = Class.superClass;\r\n\t                }\r\n\t\r\n\t                var defaultOption = {};\r\n\t                for (var i = optList.length - 1; i >= 0; i--) {\r\n\t                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n\t                }\r\n\t                this.__defaultOption = defaultOption;\r\n\t            }\r\n\t            return this.__defaultOption;                \r\n\t        }\r\n\t\r\n\t    });\r\n\t    module.exports = NetWorkLineModel;\r\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var ServerTopoNode = __webpack_require__(90);\r\n\t    \r\n\t    function ServerR630Node(model,api) {\r\n\t        ServerTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ServerR630Node\" };    \r\n\t        this.model = model;\r\n\t        this.portNodeList = [];\r\n\t        this.cardNodeList = [];\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ServerR630Node.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t        var _width = model.get(\"width\");\r\n\t        var _height = 20;\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: _height,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var serverNodeB = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR630b.png',\r\n\t                width: _width,\r\n\t                height:  _height\r\n\t            },\r\n\t            z: 1000,\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t        var serverNodeA = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR630a.png',\r\n\t                width: _width,\r\n\t                height:  _height\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t\r\n\t        serverNodeB.on(\"mouseover\", function(params){\r\n\t            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeA.attr(\"position\", [0,0]);\r\n\t          //  serverNodeA.show();\r\n\t        });\r\n\t        serverNodeA.on(\"mouseout\", function(params){\r\n\t            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeB.attr(\"position\", [0,0]);\r\n\t        });\r\n\t\r\n\t        this.add(serverNodeA);\r\n\t        this.add(serverNodeB);\r\n\t        \r\n\t        var cardList = model.get(\"cards\");\r\n\t        var defaultPorts = [];\r\n\t        if ( cardList !== undefined ) {\r\n\t             for ( var c = 0; c < cardList.length; c++ ) {\r\n\t                if ( cardList[c].type === \"default\" ) {\r\n\t                    defaultPorts = cardList[c].ports !== undefined ? cardList[c].ports : undefined;\r\n\t\r\n\t                    var portModel = {};\r\n\t                    portModel = {\r\n\t                        resourceId: util.getUUID(),  \r\n\t                        bounds: {\r\n\t                            upperLeft: {x: 14, y: _height / 2.5}  \r\n\t                        },\r\n\t                        stencil: {type: \"PointNode\"}\r\n\t                    };\r\n\t                    portModel.height = 7;\r\n\t                    portModel.width = 7;\r\n\t                    var _linInfo = {};\r\n\t                    _linInfo.sourceReource = this.model.get(\"name\");\r\n\t                    _linInfo.sourcePort = i;\r\n\t                    _linInfo.cardNo = 0;\r\n\t                    _linInfo.nodetype = this.model.get(\"nodetype\");\r\n\t                    if( defaultPorts !== undefined && defaultPorts[0] !== undefined ) {\r\n\t                        _linInfo.targetReource = defaultPorts[0].target !== undefined ? defaultPorts[0].target.reourceName : \"\";\r\n\t                        _linInfo.targetPort = defaultPorts[0].target !== undefined ? defaultPorts[0].target.port : \"\";\r\n\t                    }\r\n\t                    portModel.lineInfo = _linInfo;\r\n\t                    var pModel = new NetworkModel(portModel);\r\n\t                    this.addPortByModel(pModel, api);\r\n\t\r\n\t                    var _kmx = 70;\r\n\t                    for ( var i = 1; i < 5; i++ ) {\r\n\t                        var portModel = {};\r\n\t                        portModel = {\r\n\t                            resourceId: util.getUUID(),  \r\n\t                            bounds: {\r\n\t                                upperLeft: {x: _kmx, y: _height / 2.5}  \r\n\t                            },\r\n\t                            stencil: {type: \"PointNode\"}\r\n\t                        };\r\n\t                        portModel.height = 7;\r\n\t                        portModel.width = 7;\r\n\t                        var _linInfo = {};\r\n\t                        _linInfo.sourceReource = this.model.get(\"name\");\r\n\t                        _linInfo.sourcePort = i;\r\n\t                        _linInfo.sourceCardNo = 0;\r\n\t                        _linInfo.nodetype = this.model.get(\"nodetype\");\r\n\t                        var _index = i;\r\n\t                        if( defaultPorts !== undefined && defaultPorts[_index] !== undefined ) {\r\n\t                            _linInfo.targetReource = defaultPorts[_index].target !== undefined ? defaultPorts[_index].target.reourceName : \"\";\r\n\t                            _linInfo.targetPort = defaultPorts[_index].target !== undefined ? defaultPorts[_index].target.port : \"\";\r\n\t                        }\r\n\t                        portModel.lineInfo = _linInfo;\r\n\t                        var pModel = new NetworkModel(portModel);\r\n\t                        this.addPortByModel(pModel, api);\r\n\t                        _kmx = _kmx + 11;\r\n\t                    }\r\n\t\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t       \r\n\t\r\n\t        var ports = model.get('ports');\r\n\t        if ( ports !== undefined && ports.card1 !== undefined && ports.card1.length < 3) {\r\n\t\r\n\t        }\r\n\t\r\n\t\r\n\t        \r\n\t\r\n\t        \r\n\t\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    ServerR630Node.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this._api);\r\n\t            this.portNodeList.push(node);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ServerR630Node, NetworkNode);\r\n\t    module.exports = ServerR630Node;\r\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    \r\n\t    function ServerTopoNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ServerTopoNode\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ServerTopoNode.prototype.render = function(model, api) {\r\n\t     \r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ServerTopoNode, NetworkNode);\r\n\t    module.exports = ServerTopoNode;\r\n\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var CardModel = __webpack_require__(92);\r\n\t    var ServerTopoNode = __webpack_require__(90);\r\n\t    \r\n\t    function ServerR730Node(model,api) {\r\n\t        ServerTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ServerR730Node\" };    \r\n\t        this.model = model;\r\n\t        this.portNodeList = [];\r\n\t        this.cardNodeList = [];\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ServerR730Node.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t        var me = this;\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var serverNodeB = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR730b.jpg',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  40,\r\n\t            },\r\n\t            z: 1000,\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t        var serverNodeA = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR730a.jpg',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  40\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t\r\n\t        serverNodeB.on(\"mouseover\", function(params){\r\n\t            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeA.attr(\"position\", [0,0]);\r\n\t            if ( me.cardNodeList.length > 0 ) {\r\n\t                for ( var j = 0; j < me.cardNodeList.length; j++ ) {\r\n\t                    me.cardNodeList[j]._children[0].show();\r\n\t                }\r\n\t            }\r\n\t          //  serverNodeA.show();\r\n\t        });\r\n\t        serverNodeA.on(\"mouseout\", function(params){\r\n\t            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeB.attr(\"position\", [0,0]);\r\n\t            if ( me.cardNodeList.length > 0 ) {\r\n\t                for ( var j = 0; j < me.cardNodeList.length; j++ ) {\r\n\t                    me.cardNodeList[j]._children[0].hide();\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        this.add(serverNodeA);\r\n\t        this.add(serverNodeB);\r\n\t        \r\n\t        var cardList = model.get(\"cards\");\r\n\t        var defaultPorts = [];\r\n\t        if ( cardList !== undefined ) {\r\n\t             for ( var c = 0; c < cardList.length; c++ ) {\r\n\t                if ( cardList[c].type === \"default\" ) {\r\n\t                    defaultPorts = cardList[c].ports !== undefined ? cardList[c].ports : undefined;\r\n\t                    var _kmx = 75;\r\n\t                    for (var i = 1; i < 5; i++ ) {\r\n\t                        var portModel = {};\r\n\t                        portModel = {\r\n\t                            resourceId: util.getUUID(),  \r\n\t                            bounds: {\r\n\t                                upperLeft: {x: _kmx, y: 26}  \r\n\t                            },\r\n\t                            stencil: {type: \"PointNode\"}\r\n\t                        };\r\n\t                        portModel.height = 7;\r\n\t                        portModel.width = 7;\r\n\t\r\n\t                        var _linInfo = {};\r\n\t                        _linInfo.sourceReource = this.model.get(\"name\");\r\n\t                        _linInfo.sourcePort = i;\r\n\t                        _linInfo.nodetype = this.model.get(\"nodetype\");\r\n\t                        var _index = i - 1;\r\n\t                        if( defaultPorts !== undefined && defaultPorts[_index] !== undefined ) {\r\n\t                            _linInfo.targetReource = defaultPorts[_index].target !== undefined ? defaultPorts[_index].target.reourceName : \"\";\r\n\t                            _linInfo.targetPort = defaultPorts[_index].target !== undefined ? defaultPorts[_index].target.port : \"\";\r\n\t                        }\r\n\t                        portModel.lineInfo = _linInfo;\r\n\t\r\n\t                        var pModel = new NetworkModel(portModel);\r\n\t                        this.addPortByModel(pModel, api);\r\n\t                        _kmx = _kmx + 10;\r\n\t                    } \r\n\t                }\r\n\t\r\n\t                var cardX,cardY,cardWidth,cardHeight,_direction,_No;\r\n\t                // 一号卡槽\r\n\t                if ( cardList[c].No === 1 ) {\r\n\t                    cardX = 15;\r\n\t                    cardY = 3;\r\n\t                    cardWidth = 33;\r\n\t                    cardHeight = 8;\r\n\t                    _direction = \"leftRight\";\r\n\t                    _No = \"1\";\r\n\t                } else if ( cardList[c].No === 2  ) {\r\n\t                    cardX = 15;\r\n\t                    cardY = 12;\r\n\t                    cardWidth = 33;\r\n\t                    cardHeight = 8;\r\n\t                    _direction = \"leftRight\";\r\n\t                    _No = \"2\";\r\n\t                } else if ( cardList[c].No === 3 ) {\r\n\t                    cardX = 15;\r\n\t                    cardY = 20;\r\n\t                    cardWidth = 33;\r\n\t                    cardHeight = 8;\r\n\t                    _direction = \"leftRight\";\r\n\t                    _No = \"3\";\r\n\t                } else if ( cardList[c].No === 4 ) {\r\n\t                    cardX = 60;\r\n\t                    cardY = 3;\r\n\t                    cardWidth = 50;\r\n\t                    cardHeight = 8;\r\n\t                    _direction = \"leftRight\";\r\n\t                    _No = \"4\";\r\n\t                } else if ( cardList[c].No === 5  ) {\r\n\t                    cardX = 60;\r\n\t                    cardY = 12;\r\n\t                    cardWidth = 50;\r\n\t                    cardHeight = 8;\r\n\t                    _direction = \"leftRight\";\r\n\t                    _No = \"5\";\r\n\t                } else if ( cardList[c].No === 6 ) {\r\n\t                    cardX = 15;\r\n\t                    cardY = 3;\r\n\t                    cardWidth = 50;\r\n\t                    cardHeight = 8;\r\n\t                    _direction = \"leftRight\";\r\n\t                    _No = \"6\";\r\n\t                } \r\n\t\r\n\t                var portModel = {};\r\n\t                    portModel = {\r\n\t                        resourceId: util.getUUID(),  \r\n\t                        bounds: {\r\n\t                            upperLeft: {x: cardX, y: cardY}  \r\n\t                        },\r\n\t                        stencil: {type: \"CardNode\"}\r\n\t                    };\r\n\t                    portModel.No = _No;\r\n\t                    portModel.height = cardHeight;\r\n\t                    portModel.width = cardWidth;\r\n\t                    portModel.type = cardList[c].type;\r\n\t                    portModel.portData = cardList[c].ports;\r\n\t                    portModel.direction = _direction;//updown\r\n\t                    portModel.resourcesName = model.get(\"name\");\r\n\t                    portModel.resourceNodeType = model.get(\"nodetype\");\r\n\t                    var pModel = new CardModel(portModel);\r\n\t\r\n\t                    this.addNodeByModel(pModel, api);\r\n\t\r\n\t            }\r\n\t        }     \r\n\t        \r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    ServerR730Node.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this._api);\r\n\t            this.portNodeList.push(node);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    ServerR730Node.prototype.addNodeByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, api);\r\n\t            var pointList = node.pointList;\r\n\t            if ( pointList !== undefined && pointList.length > 0 ) {\r\n\t                for( var i = 0; i < pointList.length; i++ ) {\r\n\t                    if ( pointList[i].lineInfo.sourceCardNo === \"1\" ) {\r\n\t                        pointList[i].lineInfo.moddleX = 35;\r\n\t                    } else if( pointList[i].lineInfo.sourceCardNo === \"2\" ) {\r\n\t                        pointList[i].lineInfo.moddleX = 25;\r\n\t                    } else if( pointList[i].lineInfo.sourceCardNo === \"3\" ) {\r\n\t\r\n\t                    } else if( pointList[i].lineInfo.sourceCardNo === \"4\" ) {\r\n\t                        pointList[i].lineInfo.moddleX = 25;\r\n\t                    }else if( pointList[i].lineInfo.sourceCardNo === \"5\" ) {\r\n\t\r\n\t                    }\r\n\t                  this.portNodeList.push(pointList[i]);   \r\n\t                }\r\n\t            }\r\n\t            this.add(node);\r\n\t            this.cardNodeList.push(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ServerR730Node, NetworkNode);\r\n\t    module.exports = ServerR730Node;\r\n\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t\r\n\t    var Model = __webpack_require__(71);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t\r\n\t    var CardModel = NetworkModel.extend({\r\n\t        No: \"\",\r\n\t        resourcesName: \"\",\r\n\t        resourceNodeType : \"1\",\r\n\t        height: 5,\r\n\t        width: 5,\r\n\t        type: \"\",\r\n\t        direction: \"leftRight\",//updown\r\n\t        portData: []\r\n\t    });\r\n\t    module.exports = CardModel;\r\n\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var ServerTopoNode = __webpack_require__(90);\r\n\t    \r\n\t    function ServerX3550Node(model,api) {\r\n\t        ServerTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ServerX3550Node\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ServerX3550Node.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var serverNodeB = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/xIBMX3550b.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  40\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t        var serverNodeA = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/xIBMX3550a.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  40\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t\r\n\t        serverNodeB.on(\"mouseover\", function(params){\r\n\t            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeA.attr(\"position\", [0,0]);\r\n\t        });\r\n\t        serverNodeA.on(\"mouseout\", function(params){\r\n\t            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeB.attr(\"position\", [0,0]);\r\n\t        });\r\n\t\r\n\t        this.add(serverNodeA);\r\n\t        this.add(serverNodeB);\r\n\t        \r\n\t        //画默认的以太网端口\r\n\t        var _kmx = 95;\r\n\t        for (var i = 0; i < 4; i++ ) {\r\n\t            var portModel = {};\r\n\t            portModel = {\r\n\t                resourceId: util.getUUID(),  \r\n\t                bounds: {\r\n\t                    upperLeft: {x: _kmx, y: 15}  \r\n\t                },\r\n\t                stencil: {type: \"PointNode\"}\r\n\t            };\r\n\t            portModel.height = 8;\r\n\t            portModel.width = 8;\r\n\t            var pModel = new NetworkModel(portModel);\r\n\t            this.addPortByModel(pModel, api);\r\n\t            _kmx = _kmx + 13;\r\n\t        }\r\n\t\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    ServerX3550Node.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this._api);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ServerX3550Node, NetworkNode);\r\n\t    module.exports = ServerX3550Node;\r\n\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var ServerTopoNode = __webpack_require__(90);\r\n\t    \r\n\t    function ServerX3650Node(model,api) {\r\n\t        ServerTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ServerX3650Node\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ServerX3650Node.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var serverNodeB = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/xIBMX3650b_8.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  80\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t        var serverNodeA = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/xIBMX3650a.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  80\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t\r\n\t        serverNodeB.on(\"mouseover\", function(params){\r\n\t            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeA.attr(\"position\", [0,0]);\r\n\t          //  serverNodeA.show();\r\n\t        });\r\n\t        serverNodeA.on(\"mouseout\", function(params){\r\n\t            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeB.attr(\"position\", [0,0]);\r\n\t        });\r\n\t\r\n\t        this.add(serverNodeA);\r\n\t        this.add(serverNodeB);\r\n\t        \r\n\t        //画默认的以太网端口\r\n\t        var _kmx = 165;\r\n\t        for (var i = 0; i < 4; i++ ) {\r\n\t            var portModel = {};\r\n\t            portModel = {\r\n\t                resourceId: util.getUUID(),  \r\n\t                bounds: {\r\n\t                    upperLeft: {x: _kmx, y: 55}  \r\n\t                },\r\n\t                stencil: {type: \"PointNode\"}\r\n\t            };\r\n\t            portModel.height = 10;\r\n\t            portModel.width = 10;\r\n\t            var pModel = new NetworkModel(portModel);\r\n\t            this.addPortByModel(pModel, api);\r\n\t            _kmx = _kmx + 13;\r\n\t        }\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    ServerX3650Node.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this._api);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ServerX3650Node, NetworkNode);\r\n\t    module.exports = ServerX3650Node;\r\n\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var ServerTopoNode = __webpack_require__(90);\r\n\t    \r\n\t    function ServerRD350Node(model,api) {\r\n\t        ServerTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ServerRD350Node\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ServerRD350Node.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var serverNodeB = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/lenovoRd350b.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  40\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t        var serverNodeA = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/lenovoRd350a.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  40\r\n\t            },\r\n\t            z: 1000,\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t\r\n\t        serverNodeB.on(\"mouseover\", function(params){\r\n\t            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeA.attr(\"position\", [0,0]);\r\n\t        });\r\n\t        serverNodeA.on(\"mouseout\", function(params){\r\n\t            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeB.attr(\"position\", [0,0]);\r\n\t        });\r\n\t\r\n\t        this.add(serverNodeA);\r\n\t        this.add(serverNodeB);\r\n\t        \r\n\t        //画默认的以太网端口\r\n\t        var _kmx = 95;\r\n\t        for (var i = 0; i < 4; i++ ) {\r\n\t            var portModel = {};\r\n\t            portModel = {\r\n\t                resourceId: util.getUUID(),  \r\n\t                bounds: {\r\n\t                    upperLeft: {x: _kmx, y: 15}  \r\n\t                },\r\n\t                stencil: {type: \"PointNode\"}\r\n\t            };\r\n\t            portModel.height = 8;\r\n\t            portModel.width = 8;\r\n\t            var pModel = new NetworkModel(portModel);\r\n\t            this.addPortByModel(pModel, api);\r\n\t            _kmx = _kmx + 13;\r\n\t        }\r\n\t\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    ServerRD350Node.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this._api);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ServerRD350Node, NetworkNode);\r\n\t    module.exports = ServerRD350Node;\r\n\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var ServerTopoNode = __webpack_require__(90);\r\n\t    \r\n\t    function ServerRD650Node(model,api) {\r\n\t        ServerTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ServerRD650Node\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ServerRD650Node.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var serverNodeB = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/lenovoRd650b.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  80\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t        var serverNodeA = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/lenovoRd650a.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  80\r\n\t            },\r\n\t            z: 1000,\r\n\t            draggable: false\r\n\t        }); \r\n\t\r\n\t\r\n\t        serverNodeB.on(\"mouseover\", function(params){\r\n\t            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeA.attr(\"position\", [0,0]);\r\n\t          //  serverNodeA.show();\r\n\t        });\r\n\t        serverNodeA.on(\"mouseout\", function(params){\r\n\t            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n\t            serverNodeB.attr(\"position\", [0,0]);\r\n\t        });\r\n\t\r\n\t        this.add(serverNodeA);\r\n\t        this.add(serverNodeB);\r\n\t        \r\n\t        //画默认的以太网端口\r\n\t        var portModel = {};\r\n\t        portModel = {\r\n\t            resourceId: util.getUUID(),  \r\n\t            bounds: {\r\n\t                upperLeft: {x: 88, y: 55}  \r\n\t            },\r\n\t            stencil: {type: \"PointNode\"}\r\n\t        };\r\n\t        portModel.height = 10;\r\n\t        portModel.width = 10;\r\n\t        var pModel = new NetworkModel(portModel);\r\n\t        this.addPortByModel(pModel, api);\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    ServerRD650Node.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this._api);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ServerRD650Node, NetworkNode);\r\n\t    module.exports = ServerRD650Node;\r\n\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    \r\n\t    function SwitchTopoNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"SwitchTopoNode\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    SwitchTopoNode.prototype.render = function(model, api) {\r\n\t        \r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(SwitchTopoNode, NetworkNode);\r\n\t    module.exports = SwitchTopoNode;\r\n\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var SwitchTopoNode = __webpack_require__(97);\r\n\t    \r\n\t    function SwitchHalfIBNode(model,api) {\r\n\t        SwitchTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"SwitchHalfIBNode\" };    \r\n\t        this.model = model;\r\n\t        this.portNodeList = [];\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    SwitchHalfIBNode.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var switchNode = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/IBSwitchHalf.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height:  40\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t        this.add(switchNode);\r\n\t\r\n\t        var _y = 12;\r\n\t        var _x = 70;\r\n\t        for (var i = 1; i < 5; i++ ) {\r\n\t            var portModel = {};\r\n\t            portModel = {\r\n\t                resourceId: util.getUUID(),  \r\n\t                bounds: {\r\n\t                    upperLeft: {x: _x, y: _y}  \r\n\t                },\r\n\t                stencil: {type: \"PointNode\"}\r\n\t            };\r\n\t            portModel.height = 6;\r\n\t            portModel.width = 11;\r\n\t            var _linInfo = {};\r\n\t            _linInfo.sourceReource = model.get(\"name\")\r\n\t            _linInfo.sourcePort = i.toString();\r\n\t            portModel.lineInfo = _linInfo;\r\n\t            var pModel = new NetworkModel(portModel);\r\n\t            this.addPortByModel(pModel, api);\r\n\t            _x = _x + portModel.width + 3;\r\n\t     \r\n\t        }\r\n\t        \r\n\t        _y = 22;\r\n\t        _x = 70;\r\n\t        for (var i = 5; i < 9; i++ ) {\r\n\t            var portModel = {};\r\n\t            portModel = {\r\n\t                resourceId: util.getUUID(),  \r\n\t                bounds: {\r\n\t                    upperLeft: {x: _x, y: _y}  \r\n\t                },\r\n\t                stencil: {type: \"PointNode\"}\r\n\t            };\r\n\t            portModel.height = 6;\r\n\t            portModel.width = 11;\r\n\t            var _linInfo = {};\r\n\t            _linInfo.sourceReource = model.get(\"name\")\r\n\t            _linInfo.sourcePort = i.toString();\r\n\t            portModel.lineInfo = _linInfo;\r\n\t            var pModel = new NetworkModel(portModel);\r\n\t            this.addPortByModel(pModel, api);\r\n\t            _x = _x + portModel.width + 3;     \r\n\t        }\r\n\t\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    SwitchHalfIBNode.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this._api);\r\n\t            this.add(node);\r\n\t            this.portNodeList.push(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(SwitchHalfIBNode, NetworkNode);\r\n\t    module.exports = SwitchHalfIBNode;\r\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var SwitchTopoNode = __webpack_require__(97);\r\n\t    \r\n\t    function SwitchFullIBNode(model,api) {\r\n\t        SwitchTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"SwitchFullIBNode\" };    \r\n\t        this.model = model;\r\n\t        this.portNodeList = [];\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    SwitchFullIBNode.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var switchNode = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/IBSwitchFull.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height: 40\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t        this.add(switchNode);\r\n\t\r\n\t        var _y = 14;\r\n\t        var _x = 18;\r\n\t        for (var i = 1; i < 19; i++ ) {\r\n\t            var portModel = {};\r\n\t            portModel = {\r\n\t                resourceId: util.getUUID(),  \r\n\t                bounds: {\r\n\t                    upperLeft: {x: _x, y: _y}  \r\n\t                },\r\n\t                stencil: {type: \"PointNode\"}\r\n\t            };\r\n\t            portModel.height = 6;\r\n\t            portModel.width = 11;\r\n\t            var _linInfo = {};\r\n\t            _linInfo.sourceReource = model.get(\"name\")\r\n\t            _linInfo.sourcePort = i.toString();\r\n\t            portModel.lineInfo = _linInfo;\r\n\t            var pModel = new NetworkModel(portModel);\r\n\t            this.addPortByModel(pModel, api);\r\n\t            if (i % 3 === 0 ) {\r\n\t                _x = _x + portModel.width + 5;\r\n\t            } else {\r\n\t                _x = _x + portModel.width + 2;\r\n\t            }       \r\n\t        }\r\n\t        \r\n\t        _y = 24;\r\n\t        _x = 18;\r\n\t        for (var i = 19; i < 37; i++ ) {\r\n\t            var portModel = {};\r\n\t            portModel = {\r\n\t                resourceId: util.getUUID(),  \r\n\t                bounds: {\r\n\t                    upperLeft: {x: _x, y: _y}  \r\n\t                },\r\n\t                stencil: {type: \"PointNode\"}\r\n\t            };\r\n\t            portModel.height = 6;\r\n\t            portModel.width = 11;\r\n\t            var _linInfo = {};\r\n\t            _linInfo.sourceReource = this.model.get(\"name\");\r\n\t            _linInfo.sourcePort = i.toString();\r\n\t            portModel.lineInfo = _linInfo;\r\n\t            var pModel = new NetworkModel(portModel);\r\n\t            this.addPortByModel(pModel, api);\r\n\t            if (i % 3 === 0 ) {\r\n\t                _x = _x + portModel.width + 5;\r\n\t            } else {\r\n\t                _x = _x + portModel.width + 2;\r\n\t            }       \r\n\t        }\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t     SwitchFullIBNode.prototype.addPortByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this._api);\r\n\t            this.portNodeList.push(node);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(SwitchFullIBNode, NetworkNode);\r\n\t    module.exports = SwitchFullIBNode;\r\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var SwitchTopoNode = __webpack_require__(97);\r\n\t    \r\n\t    function SwitchGMNode(model,api) {\r\n\t        SwitchTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"SwitchGMNode\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    SwitchGMNode.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var switchNode = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/GMSwitch.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height: 40\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t        this.add(switchNode);\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t   \r\n\t\r\n\t    zrUtil.inherits(SwitchGMNode, NetworkNode);\r\n\t    module.exports = SwitchGMNode;\r\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var SwitchTopoNode = __webpack_require__(97);\r\n\t    \r\n\t    function SwitchKMNode(model,api) {\r\n\t        SwitchTopoNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"SwitchKMNode\" };    \r\n\t        this.model = model;\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    SwitchKMNode.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t\r\n\t        var _title = new graphic.Text({\r\n\t            style: {\r\n\t                x: model.get(\"width\") / 2 - 10,\r\n\t                y: -20,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '12px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });\r\n\t        this.add(_title);\r\n\t\r\n\t        var switchNode = new graphic.Image({\r\n\t            position: [0, 0],\r\n\t            scale: [1, 1],\r\n\t            style: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/KMSwitch.png',\r\n\t                width: model.get(\"width\"),\r\n\t                height: 40\r\n\t            },\r\n\t            draggable: false\r\n\t        }); \r\n\t        this.add(switchNode);\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(SwitchKMNode, NetworkNode);\r\n\t    module.exports = SwitchKMNode;\r\n\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var NetWorkLineNode = __webpack_require__(83);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var DatabaseModel = __webpack_require__(103);\r\n\t\tvar AsmModel = __webpack_require__(104);\r\n\t\tvar ISEModel = __webpack_require__(105);\r\n\t    var NetWorkLineModel = __webpack_require__(88);\r\n\t\r\n\t\r\n\t    function ClusterDrawNode(model, api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.info = {type: -1, name: \"ClusterDrawNode\" };    \r\n\t        this.model = model;\r\n\t        this.databaseList = [];\r\n\t        this.dgList = [];\r\n\t        this.render(model, api);\r\n\t    };\r\n\t\r\n\t    ClusterDrawNode.prototype.render = function(model, api) {\r\n\t    \tvar nodeList = model.get(\"nodeList\");\r\n\t        var _showTip = model.get(\"showTip\");\r\n\t        var dataModelData = {};\r\n\t    \tvar asmModelData = {};\r\n\t    \tvar storageModelData = {};\r\n\t    \tvar _dgList = [];\r\n\t    \tfor( var i = 0; i < nodeList.length; i++ ) {\r\n\t    \t\tvar nodeY = 10;\r\n\t            var startX = 50;\r\n\t    \t\tif ( nodeList[i].type === \"database\" ) {\r\n\t    \t\t\tvar dbData = nodeList[i].dbData;\r\n\t    \t\t\tif ( dbData != undefined && dbData.length > 0 ) {\r\n\t                    dataModelData = {\r\n\t                        resourceId: util.getUUID(),  \r\n\t                        bounds: {\r\n\t                            upperLeft: {x: startX, y: nodeY}  \r\n\t                        },\r\n\t                        stencil: {type: \"ClusterDatabaseNode\"}\r\n\t                    };\r\n\t                    dataModelData.dbData = dbData;\r\n\t                    dataModelData.showTip = _showTip;\r\n\t    \t\t\t\tfor ( var d = 0; d < dbData.length; d++ ) {\r\n\t\t\t    //             var dgInfomation = {};\r\n\t\t\t\t\t\t\t// dgInfomation.dgList = dbData[d].dg;\r\n\t\t\t\t\t\t\t// var dgLineInfo = {};\r\n\t\t\t    //             dgLineInfo.source = dbData[d].name + \"dg\";\r\n\t\t\t    //             dgLineInfo.target = dbData[d].name;\r\n\t\t\t    //             dgInfomation.lineInfo = dgLineInfo;\r\n\t\r\n\t\t\t                _dgList.push(dbData[d].dg);\r\n\t\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\t\r\n\t    \t\t} else if( nodeList[i].type === \"asm\") {\r\n\t    \t\t\tvar startX = 50;\r\n\t    \t\t\tnodeY = 250;\r\n\t    \t\t\tasmModelData = {\r\n\t                    resourceId: util.getUUID(),  \r\n\t                    bounds: {\r\n\t                        upperLeft: {x: startX, y: nodeY}  \r\n\t                    },\r\n\t                    stencil: {type: \"ClusterAsmNode\"}\r\n\t                };\r\n\t                asmModelData.name = nodeList[i].name;\r\n\t                asmModelData.asmData = nodeList[i].asmData;\r\n\t                asmModelData.status = nodeList[i].status;\r\n\t                asmModelData.showTip = _showTip;\r\n\t    \t\t} else if( nodeList[i].type === \"storage\" ) {\r\n\t    \t\t\tvar startX = 50;\r\n\t    \t\t\tnodeY = 550;\r\n\t    \t\t\tstorageModelData = {\r\n\t                    resourceId: util.getUUID(),  \r\n\t                    bounds: {\r\n\t                        upperLeft: {x: startX, y: nodeY}  \r\n\t                    },\r\n\t                    stencil: {type: \"ClusterIseNode\"}\r\n\t                };\r\n\t                storageModelData.childNodeList = nodeList[i].iseData;\r\n\t                storageModelData.showTip = _showTip;\r\n\t    \t\t}\r\n\t\r\n\t    \t}\r\n\t\r\n\t        var databaseModel = new DatabaseModel(dataModelData);\r\n\t        this.addNodeByModel(databaseModel, api);\r\n\t\r\n\t        \r\n\t        //画矩形\r\n\t        var mangerNode = new graphic.Rect({\r\n\t            shape: {\r\n\t                x: 50,\r\n\t                y: 400,\r\n\t                width: api.getWidth() - 100,\r\n\t                height: 200\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#FFFFFF',\r\n\t                stroke: '#B3B3B3',\r\n\t                lineWidth: '1',\r\n\t                lineDash: [2]  \r\n\t            }          \r\n\t        });              \r\n\t        this.add(mangerNode);\r\n\t\r\n\t    \tasmModelData.dg = _dgList;\r\n\t    \tvar asmModel = new AsmModel(asmModelData);\r\n\t        this.addNodeByModel(asmModel, api);\r\n\t\r\n\t        var iseModel = new ISEModel(storageModelData);\r\n\t        this.addNodeByModel(iseModel, api);\r\n\t\r\n\t        //连线\r\n\t        for (var l = 0; l < this.databaseList.length; l++ ) {\r\n\t            this.drawLine(this.databaseList[l], this.dgList[l], api);\r\n\t        }\r\n\t\r\n\t    };\r\n\t\r\n\t    ClusterDrawNode.prototype.addNodeByModel = function( p_model, api) {\r\n\t        var MOUSE_EVENT_NAMES = ['click'];\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, api);\r\n\t            this.add(node);\r\n\t            // if ( p_model.get(\"showTip\") ) {\r\n\t            //     MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];\r\n\t            // }\r\n\t            // this.bind(node, MOUSE_EVENT_NAMES, api);\r\n\t\r\n\t            if ( api.getWidth()  < node.clientWidth ) {\r\n\t                api.resize(node.clientWidth, api.getHeight());\r\n\t            }\r\n\t            if( node.portNodeList !== undefined && node.portNodeList.length > 0 ) {\r\n\t                if ( node.info.name === \"ClusterDatabaseNode\" ) {\r\n\t                    for (var i = 0; i < node.portNodeList.length; i++ ) {\r\n\t                        this.databaseList.push(node.portNodeList[i]);\r\n\t                    }\r\n\t                } else if( node.info.name === \"ClusterAsmNode\" ) {\r\n\t                    for (var i = 0; i < node.portNodeList.length; i++ ) {\r\n\t                        this.dgList.push(node.portNodeList[i]);\r\n\t                    }\r\n\t                } \r\n\t            }\r\n\t        }\r\n\t\r\n\t    };\r\n\t\r\n\t    ClusterDrawNode.prototype.drawLine = function( p_startNode, p_endNode, api ) {\r\n\t        var fleftx = p_startNode.parent.position[0] + p_startNode.shape.x;\r\n\t        var flefty = p_startNode.parent.position[1] + p_startNode.shape.y;\r\n\t        var fwidth =  p_startNode.shape.width;\r\n\t        var fheight = p_startNode.shape.height;\r\n\t\r\n\t        var torightx = p_endNode.parent.position[0] + p_endNode.shape.x;\r\n\t        var torighty = p_endNode.parent.position[1] + p_endNode.shape.y;\r\n\t        var towidth =  p_endNode.shape.width;\r\n\t        var toheight = p_endNode.shape.height;\r\n\t        var moddleY = 200;\r\n\t     \r\n\t\r\n\t        var defaultOptionDatabase = {\r\n\t            fromBounds : {x: fleftx - 25, y: flefty, width: fwidth, height: fheight},\r\n\t            toBounds: {x: torightx - 25, y: torighty, width: towidth, height: toheight},\r\n\t            moddleY: moddleY,\r\n\t            style : {\r\n\t                lineWidth : 3,\r\n\t                stroke: '#0704EC'//,\r\n\t                //fill: '#9699DD'\r\n\t            },\r\n\t            hoverStyle : {\r\n\t                lineWidth : 3,\r\n\t                stroke: '#FF0000'//,\r\n\t                //fill:'#2FDE92'\r\n\t            },\r\n\t            isEdit: false,\r\n\t            isVector: true\r\n\t        }\r\n\t        var databaseModel = new NetWorkLineModel(defaultOptionDatabase);\r\n\t        var databaseNode = new NetWorkLineNode(databaseModel);\r\n\t        this.add(databaseNode);\r\n\t\r\n\t        var moddleX = api.getWidth() / 2; \r\n\t        var _moddleY = moddleY;\r\n\t        if ( torightx + 25 > moddleX ) {\r\n\t            _moddleY = moddleY + 20;\r\n\t        } else {\r\n\t            _moddleY = moddleY - 20;\r\n\t        }\r\n\t         var defaultOptionDg = {\r\n\t            fromBounds : {x: torightx + 25, y: torighty, width: towidth, height: toheight},\r\n\t            toBounds: {x: fleftx + 25, y: flefty, width: fwidth, height: fheight},\r\n\t            moddleY: _moddleY,\r\n\t            style : {\r\n\t                lineWidth : 3,\r\n\t                stroke: '#0704EC'//,\r\n\t                //fill: '#9699DD'\r\n\t            },\r\n\t            hoverStyle : {\r\n\t                lineWidth : 3,\r\n\t                stroke: '#FF0000'//,\r\n\t                //fill:'#2FDE92'\r\n\t            },\r\n\t            isEdit: false,\r\n\t            isVector: true\r\n\t        }\r\n\t        var dgModel = new NetWorkLineModel(defaultOptionDg);\r\n\t        var dgNode = new NetWorkLineNode(dgModel);\r\n\t        this.add(dgNode);\r\n\t\r\n\t\r\n\t    };\r\n\t\r\n\t    ClusterDrawNode.prototype.bind = function( p_node, p_eventList, api) {\r\n\t        if ( p_eventList != undefined && p_eventList.length > 0 ) {\r\n\t            //绑定悬浮事件\r\n\t            zrUtil.each(p_eventList, function (eveName) {\r\n\t                p_node.on(eveName, function (e) {\r\n\t                    if ( eveName === \"mouseover\") {\r\n\t                        var params = {};\r\n\t                        params.event = e;\r\n\t                        params.x = p_node.position[0] + e.target.shape.width;\r\n\t                        params.y = p_node.position[1] + e.target.shape.height / 2;\r\n\t                        params.width = 150;\r\n\t                        params.height = 170;\r\n\t                        params.eWidth =  5 ;\r\n\t                        params.parmDate = e.target.parmDate;\r\n\t                        api.showTipWindow(params);\r\n\t                    } else {\r\n\t                        api.hideTipWindow(e.event.target);\r\n\t                    }    \r\n\t                }, this);\r\n\t            }, this);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    zrUtil.inherits(ClusterDrawNode, NetworkNode);\r\n\t    module.exports = ClusterDrawNode;\r\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Server DatabaseModel\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t    var Model = __webpack_require__(71);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t\r\n\t    var DatabaseModel = NetworkModel.extend({  \r\n\t        name: \"\", \r\n\t    \theight: 200,\r\n\t        width: 190,\r\n\t        status : \"online\",\r\n\t        instanse: {},\r\n\t        dg: []\r\n\t    });\r\n\t    module.exports = DatabaseModel;\r\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Server AsmModel\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t    var Model = __webpack_require__(71);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t\r\n\t    var AsmModel = NetworkModel.extend({  \r\n\t        name: \"\", \r\n\t    \theight: 200,\r\n\t        width: 190,\r\n\t        status : \"online\",\r\n\t        asmData : [],\r\n\t        dg: []\r\n\t    });\r\n\t    module.exports = AsmModel;\r\n\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * ISE Model\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t    var Model = __webpack_require__(71);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t\r\n\t    var ISEModel = NetworkModel.extend({  \r\n\t        name: \"\", \r\n\t    \theight: 200,\r\n\t        width: 250,\r\n\t        status : \"online\",\r\n\t        childNodeList: []\r\n\t    });\r\n\t    module.exports = ISEModel;\r\n\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var ClusterDrawNode = __webpack_require__(102);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    \r\n\t    function ClusterDatabaseNode(model, api) {\r\n\t        ClusterDrawNode.call(this, model, api);\r\n\t        this.info = {type: -1, name: \"ClusterDatabaseNode\" };    \r\n\t        this.model = model;\r\n\t        this.lineInfo = model.get('lineInfo');\r\n\t        this.portNodeList = [];\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ClusterDatabaseNode.prototype.render = function(model, api) {\r\n\t        this.model = model;\r\n\t        var dbData = model.get(\"dbData\");\r\n\t        var _x = 0;\r\n\t        var _y = 0;\r\n\t        var _width = 280;\r\n\t        var _height = 80;\r\n\t        for ( var d = 0; d < dbData.length; d++ ) {\r\n\t             //创建数据库对象\r\n\t            var portNode = new graphic.Rect({\r\n\t                shape: {\r\n\t                    x: _x,\r\n\t                    y: _y,\r\n\t                    width: _width,\r\n\t                    height: _height\r\n\t                },\r\n\t                style: {\r\n\t                    fill: '#E2E3D9',\r\n\t                    stroke: '#B3B3B3',\r\n\t                    opacity: 1,\r\n\t                    lineWidth: '2'//,\r\n\t                }          \r\n\t            });  \r\n\t            portNode.lineInfo = this.lineInfo;            \r\n\t            this.add(portNode);\r\n\t\r\n\t            var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];   \r\n\t            zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n\t                 portNode.on(eveName, function (e) {\r\n\t                    if ( eveName === \"mouseover\") {\r\n\t                        var params = {};\r\n\t                        params.event = e;\r\n\t                        params.x = portNode.parent.position[0] + e.target.shape.x + e.target.shape.width;\r\n\t                        params.y = portNode.parent.position[1] + e.target.shape.y + e.target.shape.height / 2;\r\n\t                        params.width = 150;\r\n\t                        params.height = 170;\r\n\t                        params.eWidth =  5 ;\r\n\t                        params.parmDate = e.target.parmDate;\r\n\t                        if ( api.getWidth() - params.x < params.width ) {\r\n\t                            params.layout = \"left\";\r\n\t                        } else {\r\n\t                            params.layout = \"right\";\r\n\t                        }\r\n\t                        api.showTipWindow(params);\r\n\t                    } else {\r\n\t                        api.hideTipWindow(e.event.target);\r\n\t                    }    \r\n\t                }, this);\r\n\t            });\r\n\t           \r\n\t\r\n\t            this.portNodeList.push(portNode);\r\n\t\r\n\t            var _instanse = dbData[d].instanse;\r\n\t            //创建数据库实例对象\r\n\t            if( _instanse != undefined && _instanse.length > 0 ) {\r\n\t                var _instanseX = _x + 10;\r\n\t                var _instanseWidth = 80;\r\n\t                for (var i = 0; i < _instanse.length; i++ ) {\r\n\t\r\n\t                    var _instanseNode = new graphic.Rect({\r\n\t                        shape: {\r\n\t                            x: _instanseX,\r\n\t                            y: 10,\r\n\t                            width: _instanseWidth,\r\n\t                            height: 30\r\n\t                        },\r\n\t                        style: {\r\n\t                            fill: '#CFCFCF',\r\n\t                            stroke: '#B3B3B3',\r\n\t                            opacity: 1,\r\n\t                            lineWidth: '2'//,\r\n\t                        }          \r\n\t                    }); \r\n\t                    this.add(_instanseNode);\r\n\t\r\n\t                     //状态 \r\n\t                    var _instansestatusNode = new graphic.Circle({\r\n\t                         shape: {\r\n\t                            cx: _instanseX + 15,\r\n\t                            cy: 25,\r\n\t                            r: 5\r\n\t                        },\r\n\t                        style: {\r\n\t                            fill: '#00D407',\r\n\t                            stroke: '#B3B3B3',\r\n\t                            lineWidth: '2'//,\r\n\t                        } \r\n\t                    });\r\n\t                    if ( _instanse[i].status === \"offline\") {\r\n\t                        _instansestatusNode.style.fill = \"#CFB624\";\r\n\t                    }\r\n\t                    this.add(_instansestatusNode);\r\n\t\r\n\t                    //文字\r\n\t                    var _instanseTitle = new graphic.Text({\r\n\t                        style: {\r\n\t                            x: _instanseX + 25,\r\n\t                            y: 15,\r\n\t                            text: _instanse[i].name,\r\n\t                            width: 200,\r\n\t                            height: 20,\r\n\t                            fill: '#8F8B8A',\r\n\t                            textFont: '14px Microsoft Yahei',\r\n\t                            textBaseline: 'top'\r\n\t                        },\r\n\t                        draggable: true\r\n\t                    });       \r\n\t                    this.add(_instanseTitle);\r\n\t                    _instanseX = _instanseWidth + _instanseX + 10;\r\n\t                }\r\n\t            }\r\n\t\r\n\t\r\n\t            // //物理状态 \r\n\t            // var _phyStatus = new graphic.Rect({\r\n\t            //     shape: {\r\n\t            //         x: _instanseX,\r\n\t            //         y: 32,\r\n\t            //         width: 280,\r\n\t            //         height: 50\r\n\t            //     },\r\n\t            //     style: {\r\n\t            //         fill: '#CCCCCC',\r\n\t            //         stroke: '#B3B3B3',\r\n\t            //         lineWidth: '2'//,\r\n\t            //     }          \r\n\t            // }); \r\n\t            // if ( model.get(\"status\") === \"offline\") {\r\n\t            //     _phyStatus.style.fill = \"#CFB624\";\r\n\t            // }\r\n\t            // this.add(_phyStatus);\r\n\t\r\n\t            //状态 \r\n\t            var _status = new graphic.Circle({\r\n\t                 shape: {\r\n\t                    cx: _x + _width / 2,\r\n\t                    cy: 60,\r\n\t                    r: 5\r\n\t                },\r\n\t                style: {\r\n\t                    fill: '#00D407',\r\n\t                    stroke: '#B3B3B3',\r\n\t                    lineWidth: '2'//,\r\n\t                } \r\n\t            });\r\n\t            if ( model.get(\"status\") === \"offline\") {\r\n\t                _status.style.fill = \"#CFB624\";\r\n\t            }\r\n\t            this.add(_status);\r\n\t\r\n\t            var _title = new graphic.Text({\r\n\t                style: {\r\n\t                    x: _x + _width / 2 + 20,\r\n\t                    y: 50,\r\n\t                    text: dbData[d].name,\r\n\t                    width: 200,\r\n\t                    height: 20,\r\n\t                    fill: '#8F8B8A',\r\n\t                    textFont: '18px Microsoft Yahei',\r\n\t                    textBaseline: 'top'\r\n\t                },\r\n\t                draggable: true\r\n\t            });\r\n\t            this.add(_title);\r\n\t            _x = _x + _width + 50;\r\n\t        }\r\n\t        this.clientWidth = _x + 50;\r\n\t    \r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t   \r\n\t    zrUtil.inherits(ClusterDatabaseNode, NetworkNode);\r\n\t    module.exports = ClusterDatabaseNode;\r\n\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var ClusterDrawNode = __webpack_require__(102);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    \r\n\t    function ClusterAsmNode(model,api) {\r\n\t        ClusterDrawNode.call(this, model, api);\r\n\t        this.info = {type: -1, name: \"ClusterAsmNode\" };    \r\n\t        this.model = model;\r\n\t        this.lineInfo = model.get('lineInfo');\r\n\t        return this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ClusterAsmNode.prototype.render = function(model, api) {\r\n\t        var dgList = model.get(\"dg\");\r\n\t        var maxcount = 0;\r\n\t        for ( var c = 0; c < dgList.length; c++ ) {\r\n\t            maxcount = maxcount > dgList[c].length ? maxcount: dgList[c].length;\r\n\t        }\r\n\t        var dgHeight = this.getDgNodeHeight(maxcount, 30, 2);\r\n\t        var _dgW = 180;\r\n\t        var _startX = (api.getWidth() -  dgList.length * _dgW) / 2;\r\n\t\r\n\t        //dg Node\r\n\t        for ( var i = 0; i < dgList.length; i++ ) {\r\n\t            //创建dg对象\r\n\t            var dgNode = new graphic.Rect({\r\n\t                shape: {\r\n\t                    x: _startX,\r\n\t                    y: 0,\r\n\t                    width: _dgW,\r\n\t                    height: dgHeight\r\n\t                },\r\n\t                style: {\r\n\t                    fill: '#E2E3D9',\r\n\t                    stroke: '#B3B3B3',\r\n\t                    opacity: 1,\r\n\t                    lineWidth: '2'//,\r\n\t                }          \r\n\t            });\r\n\t            this.add(dgNode);\r\n\t            dgNode.lineInfo = this.lineInfo;\r\n\t            this.portNodeList.push(dgNode);  \r\n\t\r\n\t            var dg = dgList[i];\r\n\t            var _dgCellY = 2;\r\n\t            for ( var d = 0; d < dg.length; d++ ) {\r\n\t                var cellModelData = {\r\n\t                    resourceId: util.getUUID(), \r\n\t                    bounds: {\r\n\t                            upperLeft: {x: 0, y: 0}  \r\n\t                        }, \r\n\t                    stencil: {type: \"ClusterAsmCellNode\"}\r\n\t                };\r\n\t                \r\n\t                if ( d === 0 || d % 2 === 0 ) {\r\n\t                    cellModelData.bounds.upperLeft.x = _startX + 5;\r\n\t                } else {\r\n\t                    cellModelData.bounds.upperLeft.x = _startX + _dgW / 2 + 2;\r\n\t                }\r\n\t                if ( d !== 0 && d % 2 === 0 ) {\r\n\t                    _dgCellY = _dgCellY + 30 + 2;\r\n\t                }\r\n\t                cellModelData.bounds.upperLeft.y = _dgCellY + 2;\r\n\t                cellModelData.height = 30;\r\n\t                cellModelData.width = _dgW / 2 - 6;\r\n\t                cellModelData.title = dg[d].name;\r\n\t                cellModelData.status = dg[d].status;\r\n\t                var cellModel = new NetworkModel(cellModelData);\r\n\t                this.addNodeByModel(cellModel, api); \r\n\t\r\n\t            }\r\n\t            _startX = _startX + _dgW;\r\n\t        }\r\n\t      \r\n\t\r\n\t        \r\n\t        \r\n\t        //创建Asm Node\r\n\t        var _asmX = (api.getWidth() -  dgList.length * _dgW) / 2;\r\n\t        var asmNode = new graphic.Rect({\r\n\t            shape: {\r\n\t                x: _asmX,\r\n\t                y: dgHeight,\r\n\t                width: dgList.length * _dgW,\r\n\t                height: 100\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#E2E3D9',\r\n\t                stroke: '#B3B3B3',\r\n\t                opacity: 1,\r\n\t                lineWidth: '2'//,\r\n\t            }          \r\n\t        });              \r\n\t        this.add(asmNode);\r\n\t        var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];   \r\n\t            zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n\t                 asmNode.on(eveName, function (e) {\r\n\t                    if ( eveName === \"mouseover\") {\r\n\t                        var params = {};\r\n\t                        params.event = e;\r\n\t                        params.x = asmNode.parent.position[0] + e.target.shape.x + e.target.shape.width;\r\n\t                        params.y = asmNode.parent.position[1] + e.target.shape.y + e.target.shape.height / 2;\r\n\t                        params.width = 150;\r\n\t                        params.height = 170;\r\n\t                        params.eWidth =  5 ;\r\n\t                        params.parmDate = e.target.parmDate;\r\n\t                        if ( api.getWidth() - params.x < params.width ) {\r\n\t                            params.layout = \"left\";\r\n\t                        } else {\r\n\t                            params.layout = \"right\";\r\n\t                        }\r\n\t                        api.showTipWindow(params);\r\n\t                    } else {\r\n\t                        api.hideTipWindow(e.event.target);\r\n\t                    }    \r\n\t                }, this);\r\n\t            });\r\n\t\r\n\t        //遍历ASM实例对象\r\n\t        var asmData = model.get(\"asmData\");\r\n\t        var _asmInstanseX = _asmX + (dgList.length * _dgW - asmData.length * 100) / 2;\r\n\t        var _width = 100;\r\n\t        for ( var asmIn = 0; asmIn < asmData.length; asmIn++ ) {\r\n\t            //创建Asm Instance对象\r\n\t            var asmInsatanceNode = new graphic.Rect({\r\n\t                shape: {\r\n\t                    x: _asmInstanseX,\r\n\t                    y: dgHeight + 10,\r\n\t                    width: _width,\r\n\t                    height: 30\r\n\t                },\r\n\t                style: {\r\n\t                    fill: '#CFCFCF',\r\n\t                    stroke: '#B3B3B3',\r\n\t                    opacity: 1,\r\n\t                    lineWidth: '2'//,\r\n\t                }          \r\n\t            });              \r\n\t            this.add(asmInsatanceNode);\r\n\t            //状态 \r\n\t            var _asmInsatanceStatusNode = new graphic.Circle({\r\n\t                 shape: {\r\n\t                    cx: _asmInstanseX + 20,\r\n\t                    cy: dgHeight + 25,\r\n\t                    r: 5\r\n\t                },\r\n\t                style: {\r\n\t                    fill: '#00D407',\r\n\t                    stroke: '#B3B3B3',\r\n\t                    lineWidth: '2'//,\r\n\t                } \r\n\t            });\r\n\t            if ( model.get(\"status\") === \"offline\") {\r\n\t                _asmInsatanceStatusNode.style.fill = \"#CFB624\";\r\n\t            }\r\n\t            this.add(_asmInsatanceStatusNode);\r\n\t\r\n\t            var _asmInsatanceTitle = new graphic.Text({\r\n\t                style: {\r\n\t                    x: _asmInstanseX + 30,\r\n\t                    y: dgHeight + 15,\r\n\t                    text: asmData[asmIn].name,\r\n\t                    width: 200,\r\n\t                    height: 20,\r\n\t                    fill: '#8F8B8A',\r\n\t                    textFont: '14px Microsoft Yahei',\r\n\t                    textBaseline: 'top'\r\n\t                },\r\n\t                draggable: true\r\n\t            });       \r\n\t            this.add(_asmInsatanceTitle);\r\n\t            _asmInstanseX = _asmInstanseX + _width + 10;\r\n\t        }\r\n\t        //遍历ASM实例对象 end\r\n\t        \r\n\t        var _asmStatusX = dgList.length * _dgW / 2 + 150;\r\n\t        //状态 \r\n\t        var _asmStatusNode = new graphic.Circle({\r\n\t             shape: {\r\n\t                cx: _asmStatusX,\r\n\t                cy: dgHeight + 75,\r\n\t                r: 7\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#00D407',\r\n\t                stroke: '#B3B3B3',\r\n\t                lineWidth: '2'//,\r\n\t            } \r\n\t        });\r\n\t        if ( model.get(\"status\") === \"offline\") {\r\n\t            _asmStatusNode.style.fill = \"#CFB624\";\r\n\t        }\r\n\t        this.add(_asmStatusNode);\r\n\t\r\n\t        var _asmTitle = new graphic.Text({\r\n\t            style: {\r\n\t                x: _asmStatusX + 20,\r\n\t                y: dgHeight + 65,\r\n\t                text: model.get(\"name\"),\r\n\t                width: 200,\r\n\t                height: 20,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '18px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });       \r\n\t        this.add(_asmTitle);\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n\t        return dgHeight + 100;\r\n\t    };\r\n\t\r\n\t    ClusterAsmNode.prototype.addNodeByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this.api);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    ClusterAsmNode.prototype.getDgNodeHeight  = function( p_count, p_height, p_space) {\r\n\t        var returnValue = 0;\r\n\t        if(  p_count % 2 !== 0 ) {\r\n\t            returnValue =  ( (parseInt(p_count) - 1) / 2 + 1) * p_height;\r\n\t        } else {\r\n\t            returnValue =  ( parseInt(p_count) / 2) * p_height;\r\n\t        }\r\n\t        if( p_space !== undefined ) {\r\n\t            returnValue = returnValue + (p_count + 1) * p_space\r\n\t        }\r\n\t        return returnValue;\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ClusterAsmNode, NetworkNode);\r\n\t    module.exports = ClusterAsmNode;\r\n\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    \r\n\t    function ClusterAsmCellNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ClusterAsmCellNode\" };    \r\n\t        this.model = model;\r\n\t        this.lineInfo = model.get('lineInfo');\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ClusterAsmCellNode.prototype.render = function(model, api) {\r\n\t        var _y = model.get(\"bounds.upperLeft.y\");\r\n\t        var _x = model.get(\"bounds.upperLeft.x\");\r\n\t        var _width = model.get(\"width\");\r\n\t        var _height = model.get(\"height\");\r\n\t        var cellNode = new graphic.Rect({\r\n\t            shape: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                width: _width,\r\n\t                height: _height\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#CFCFCF',\r\n\t                stroke: '#B3B3B3',\r\n\t                opacity: 1,\r\n\t                lineWidth: '2'//,\r\n\t            }          \r\n\t        });              \r\n\t        this.add(cellNode);\r\n\t\r\n\t        //状态 \r\n\t        var cellNode = new graphic.Circle({\r\n\t             shape: {\r\n\t                cx: 10,\r\n\t                cy: 15,\r\n\t                r: _height / 2 - 10\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#00D407',\r\n\t                stroke: '#B3B3B3',\r\n\t                lineWidth: '2'//,\r\n\t            } \r\n\t        });\r\n\t        if ( model.get(\"status\") === \"offline\") {\r\n\t            cellNode.style.fill = \"#CFB624\";\r\n\t        }\r\n\t        this.add(cellNode);\r\n\t\r\n\t        var cellTitle = new graphic.Text({\r\n\t            style: {\r\n\t                x: 20,\r\n\t                y: 5,\r\n\t                text: model.get(\"title\"),\r\n\t                width: 50,\r\n\t                height: 30,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '14px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });       \r\n\t        this.add(cellTitle);\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\"), model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t\r\n\t    zrUtil.inherits(ClusterAsmCellNode, NetworkNode);\r\n\t    module.exports = ClusterAsmCellNode;\r\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    var ISEModel = __webpack_require__(105);\r\n\t    function ClusterIseNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ClusterIseNode\" };    \r\n\t        this.model = model;\r\n\t        this.lineInfo = model.get('lineInfo');\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ClusterIseNode.prototype.render = function(model, api) {\r\n\t        var iseList = model.get(\"childNodeList\");\r\n\t        var startX = 0;\r\n\t        var startY = 0;\r\n\t        var nodeWidth = 0;\r\n\t        for ( var i = 0; i < iseList.length; i++ ) {\r\n\t            var isedata = {\r\n\t                resourceId: util.getUUID(),  \r\n\t                bounds: {\r\n\t                    upperLeft: {x: startX, y: startY}  \r\n\t                },\r\n\t                stencil: {type: \"ClusterIseCellNode\"}\r\n\t            };\r\n\t            isedata.width = 100;\r\n\t            isedata.height = 150;\r\n\t            isedata.status = iseList[i].status;\r\n\t            isedata.title = iseList[i].name;\r\n\t            isedata.childNodeList = iseList[i].disk;\r\n\t            var iseCellModel = new ISEModel(isedata);\r\n\t            this.addNodeByModel(iseCellModel, api);\r\n\t            startX = startX + 100 + 50;\r\n\t            nodeWidth = nodeWidth + 150;\r\n\t        }\r\n\t\r\n\t        var _x = (api.getWidth() - nodeWidth) / 2;\r\n\t        this.position = [_x , model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t    ClusterIseNode.prototype.addNodeByModel = function( p_model, api) {\r\n\t        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n\t        var node = null;\r\n\t        if ( Shape ) {\r\n\t            node = new Shape(p_model, this.api);\r\n\t            this.add(node);\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    ClusterIseNode.prototype.getDgNodeWidth  = function( p_count, p_height, p_space) {\r\n\t        var returnValue = 0;\r\n\t       \r\n\t        return returnValue;\r\n\t    };\r\n\t\r\n\t    zrUtil.inherits(ClusterIseNode, NetworkNode);\r\n\t    module.exports = ClusterIseNode;\r\n\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t    var util = __webpack_require__(67);\r\n\t    var NetworkNode = __webpack_require__(73);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(3);\r\n\t    var NetworkModel = __webpack_require__(70);\r\n\t    \r\n\t    function ClusterIseCellNode(model,api) {\r\n\t        NetworkNode.call(this, model, api);\r\n\t        this.rackkInfo = {type: -1, name: \"ClusterIseCellNode\" };    \r\n\t        this.model = model;\r\n\t        this.lineInfo = model.get('lineInfo');\r\n\t        this.render(model,api);\r\n\t    };\r\n\t\r\n\t    ClusterIseCellNode.prototype.render = function(model, api) {\r\n\t        var isecellNode = new graphic.Rect({\r\n\t            shape: {\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                width: 80,\r\n\t                height: 100\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#CFCFCF',\r\n\t                stroke: '#B3B3B3',\r\n\t                opacity: 1,\r\n\t                lineWidth: '2'//,\r\n\t            }          \r\n\t        });              \r\n\t        this.add(isecellNode);\r\n\t\r\n\t        //状态 \r\n\t        var isecellStatus = new graphic.Circle({\r\n\t             shape: {\r\n\t                cx: 25,\r\n\t                cy: 45,\r\n\t                r: 5\r\n\t            },\r\n\t            style: {\r\n\t                fill: '#00D407',\r\n\t                stroke: '#B3B3B3',\r\n\t                lineWidth: '2'//,\r\n\t            } \r\n\t        });\r\n\t        if ( model.get(\"status\") === \"offline\") {\r\n\t            isecellStatus.style.fill = \"#CFB624\";\r\n\t        }\r\n\t        this.add(isecellStatus);\r\n\t\r\n\t        var isecellTitle = new graphic.Text({\r\n\t            style: {\r\n\t                x: 45,\r\n\t                y: 35,\r\n\t                text: model.get(\"title\"),\r\n\t                width: 50,\r\n\t                height: 30,\r\n\t                fill: '#8F8B8A',\r\n\t                textFont: '14px Microsoft Yahei',\r\n\t                textBaseline: 'top'\r\n\t            },\r\n\t            draggable: true\r\n\t        });       \r\n\t        this.add(isecellTitle);\r\n\t\r\n\t        this.position = [model.get(\"bounds.upperLeft.x\"), model.get(\"bounds.upperLeft.y\")];\r\n\t    };\r\n\t\r\n\t\r\n\t    zrUtil.inherits(ClusterIseCellNode, NetworkNode);\r\n\t    module.exports = ClusterIseCellNode;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2f5c55a29ab8d1bda82e\n **/","/**\r\n * Export fishTopo as CommonJS module\r\n */\r\nmodule.exports = require('./lib/fish-topo-network/lib/FishTopoNetwork.js');\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.network.js\n ** module id = 1\n ** module chunks = 0\n **/","\r\n    var graphic = require(\"../../fish-topo-core/lib/graphic.js\");\r\n    var ExtensionAPI = require('./ExtensionAPI');\r\n    var Eventful = require('zrender/lib/mixin/Eventful');\r\n    var zrender = require('zrender/lib/zrender');\r\n    var zrUtil = require('zrender/lib/core/util');  \r\n    var util = require(\"../../fish-topo-core/lib/util.js\");\r\n    var NetworkModel = require(\"./model/NetworkModel.js\");\r\n    var NetworkNode = require(\"./node/NetworkNode.js\");\r\n    var RackNode = require(\"./node/rack/RackNode.js\");\r\n    var NetworkUtil = require(\"./NetworkUtil.js\");\r\n\r\n    function FishTopoNetwork (dom, opts) {\r\n        /**\r\n         * @type {string}\r\n         */\r\n        this.id;\r\n        /**\r\n         * Group id\r\n         * @type {string}\r\n         */\r\n        this.group;\r\n\r\n        /**\r\n         * @type {HTMLDomElement}\r\n         * @private\r\n         */\r\n        this._dom = dom;\r\n\r\n        this.allNodes = [];\r\n\r\n        this._api = new ExtensionAPI(this);\r\n\r\n        this.tipNode = null;\r\n\r\n        /**\r\n         * @type {module:zrender/ZRender}\r\n         * @private\r\n         */\r\n        this._zr = init(this, opts); \r\n\r\n        Eventful.call(this);\r\n        NetworkUtil.registerNetworkNode(); \r\n\r\n    }\r\n\r\n    function init(p_this, p_opts) {\r\n\r\n        var topoDiv = '<div class=\"topoDiv\" id = \"topoDiv\" style=\"width:100%; height:100%; overflow:auto;\"></div>';\r\n        p_this._dom.innerHTML = topoDiv;\r\n        \r\n        var dom = document.getElementById(\"topoDiv\");\r\n\r\n        var zRenderer = zrender.init(dom, {\r\n            renderer: p_opts.renderer || 'canvas',\r\n            devicePixelRatio: p_opts.devicePixelRatio\r\n        });\r\n        return zRenderer;    \r\n    };\r\n\r\n    var fishTopoProto = FishTopoNetwork.prototype;\r\n\r\n    /**\r\n     * @return {HTMLDomElement}\r\n     */\r\n    fishTopoProto.getDom = function () {\r\n        return this._dom;\r\n    };\r\n\r\n    /**\r\n     * @return {module:zrender~ZRender}\r\n     */\r\n    fishTopoProto.getZr = function () {\r\n        return this._zr;\r\n    };\r\n    /**\r\n     * @return {number}\r\n     */\r\n    fishTopoProto.getWidth = function () {\r\n        return this._zr.getWidth();\r\n    };\r\n\r\n    /**\r\n     * @return {number}\r\n     */\r\n    fishTopoProto.getHeight = function () {\r\n        return this._zr.getHeight();\r\n    };\r\n\r\n    /**\r\n     * �����ߴ�  �ڴ��ڴ�С�����ı�ʱ��Ҫ�ֹ�����\r\n     */\r\n    fishTopoProto.resize = function ( p_width, p_height) {\r\n        p_width = p_width !== undefined ? p_width : this.getWidth;\r\n        p_height = p_height !== undefined ? p_height : this.getHeight() - 50;\r\n        this._zr.painter.resize(p_width, p_height);\r\n    }; \r\n\r\n    /**\r\n     * ����ģ�����ӽڵ�\r\n     * @param {[type]} model [description]\r\n     */\r\n    fishTopoProto.addNodeByModel = function(model) {\r\n        var that = this;\r\n        var Shape = NetworkNode.getClass(model.get(\"stencil.type\"));\r\n        if (Shape) {\r\n            node = new Shape(model, this._api);\r\n            this._zr.add(node); \r\n            node.on('mousedown',function(e){\r\n                //that.newDrag(this,e.event.clientX,e.event.clientY);   \r\n            });         \r\n        }         \r\n             \r\n    };  \r\n\r\n    fishTopoProto.getNodeClass = function (className) {\r\n        return NetworkNode.getClass(className);\r\n    };\r\n\r\n    /** \r\n     * ������ͣ��ʾ��չʾ\r\n     * @param {[type]} model [description]\r\n     */\r\n    fishTopoProto.showTipWindow = function(model) {\r\n        var Shape = NetworkNode.getClass(\"TipWindowNode\");\r\n        if (Shape) {\r\n            var height = this._zr.getHeight();           \r\n            if( this.allWidth != undefined ) {\r\n                this._zr.painter.resize( this.allWidth + model.width, 730);\r\n            }\r\n            \r\n            var node = new Shape(model, this._api);\r\n            this._zr.add(node); \r\n            this.tipNode = node;\r\n            node.on('mousedown',function(e){\r\n                //that.newDrag(this,e.event.clientX,e.event.clientY);   \r\n            });         \r\n        }         \r\n\r\n    };\r\n\r\n    /** \r\n     * ������ͣ��ʾ��չʾ\r\n     * @param {[type]} model [description]\r\n     */\r\n    fishTopoProto.hideTipWindow = function(model) { \r\n        if (this.tipNode && this.tipNode !== null ) {\r\n            this._zr.remove(this.tipNode);      \r\n        }         \r\n    };\r\n\r\n    fishTopoProto.init = function () {\r\n        var isSelected = this.isSelected;\r\n                \r\n    };\r\n\r\n    fishTopoProto.clear = function () {\r\n        this._zr.clear();\r\n    };   \r\n\r\n    fishTopoProto.exportJson = function() {\r\n        var networkModel = new NetworkModel({});\r\n        networkModel.set(\"resourceId\", util.getUUID());\r\n        return NetworkUtil.exportJson(networkModel, this.allNodes);\r\n    };\r\n\r\n    fishTopoProto.drawFromJson = function(json) {\r\n        var topoType = json.type;\r\n        if ( topoType === \"rack\" ) {\r\n            var clientWidth = this._zr.getWidth();\r\n            if ( (50 + (json.data.length * 250)) > clientWidth ) {\r\n                this._zr.painter.resize( 50 + (json.data.length * 250), 730);\r\n                if ( clientWidth < this._zr.getWidth() ) {\r\n                    this.allWidth = this._zr.getWidth();\r\n                }\r\n            } \r\n        } else if ( topoType === \"topo\" ) {\r\n            var clientWidth = this._zr.getWidth();\r\n            var clientHeight = 630;\r\n            this.width = clientWidth;\r\n            this.height = clientHeight;\r\n        }\r\n        else if ( topoType === \"cluster\" ) {\r\n            var clientWidth = this._zr.getWidth();\r\n            var clientHeight = 630;\r\n            this.width = clientWidth;\r\n            this.height = clientHeight;\r\n        }\r\n        return NetworkUtil.fromJson(this, json);\r\n    };  \r\n\r\n    zrUtil.mixin(FishTopoNetwork, Eventful);    \r\n\r\n    // ---------���Ⱪ¶fishTopoNetWork------------------\r\n    var idBase = new Date() - 0;\r\n    var instances = {};\r\n    var DOM_ATTRIBUTE_KEY = '_fishTopoNetwork_instance_';\r\n    var fishTopoNetWork = {\r\n        /**\r\n         * @type {number}\r\n         */\r\n        version: '1.0.0',\r\n        dependencies: {\r\n            zrender: '3.0.4'\r\n        }\r\n    }; \r\n    \r\n    /**\r\n     * @param {HTMLDomElement} dom\r\n     * @param {Object} opts\r\n     */\r\n    fishTopoNetWork.init = function (dom, opts) {\r\n        if (!dom) {\r\n            throw new Error('Initialize failed: invalid dom.');\r\n        }\r\n\r\n        opts = opts || {};\r\n        // Default value\r\n        zrUtil.defaults(opts,\r\n            {\r\n                type: \"bpmn\",\r\n                showGridLine: true,\r\n                devicePixelRatio: 1,\r\n                gridLineSpacing:10\r\n            }\r\n        );        \r\n\r\n        var fishTopoNetWork = new FishTopoNetwork(dom, opts);\r\n        fishTopoNetWork.init();\r\n\r\n        fishTopoNetWork.id = 'ft_' + idBase++;\r\n        instances[fishTopoNetWork.id] = fishTopoNetWork;\r\n\r\n        dom.setAttribute && dom.setAttribute(DOM_ATTRIBUTE_KEY, fishTopoNetWork.id);\r\n\r\n        return fishTopoNetWork;\r\n    };  \r\n\r\n\r\n    /**\r\n     * @param  {HTMLDomElement} dom\r\n     * @return {fishTopo}\r\n     */\r\n    fishTopoNetWork.getInstanceByDom = function (dom) {\r\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n        return instances[key];\r\n    };     \r\n\r\n    /**\r\n     * Dispose a fishTopo instance\r\n     * @param  {module:fishTopo|HTMLDomElement|string} fishTopo\r\n     */\r\n    fishTopoNetWork.dispose = function (chart) {\r\n        var topo;\r\n        if (zrUtil.isDom(chart)) {\r\n            topo = fishTopoNetWork.getInstanceByDom(chart);\r\n        }\r\n        else if (typeof chart === 'string') {\r\n            topo = instances[chart];\r\n        }\r\n        if ((topo instanceof fishTopoNetWork) && !topo.isDisposed()) {\r\n            topo.dispose();\r\n        }\r\n    };    \r\n\r\n    module.exports = fishTopoNetWork;    \r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/FishTopoNetwork.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var pathTool = require('zrender/lib/tool/path');\r\n    var round = Math.round;\r\n    var Path = require('zrender/lib/graphic/Path');\r\n    var colorTool = require('zrender/lib/tool/color');\r\n    var matrix = require('zrender/lib/core/matrix');\r\n    var vector = require('zrender/lib/core/vector');\r\n    var Gradient = require('zrender/lib/graphic/Gradient');\r\n\r\n    var graphic = {};\r\n    graphic.Util = zrUtil;\r\n    graphic.Group = require('zrender/lib/container/Group');\r\n\r\n    graphic.Image = require('zrender/lib/graphic/Image');\r\n\r\n    graphic.Text = require('zrender/lib/graphic/Text');\r\n\r\n    graphic.textContain = require('zrender/lib/contain/text');\r\n\r\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\r\n\r\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\r\n\r\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\r\n\r\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\r\n\r\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\r\n\r\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\r\n\r\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\r\n\r\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\r\n\r\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\r\n\r\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\r\n\r\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\r\n\r\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\r\n\r\n    /**\r\n     * Extend shape with parameters\r\n     */\r\n    graphic.extendShape = function (opts) {\r\n        return Path.extend(opts);\r\n    };\r\n\r\n    /**\r\n     * Extend path\r\n     */\r\n    graphic.extendPath = function (pathData, opts) {\r\n        return pathTool.extendFromString(pathData, opts);\r\n    };\r\n\r\n    /**\r\n     * Create a path element from path data string\r\n     * @param {string} pathData\r\n     * @param {Object} opts\r\n     * @param {module:zrender/core/BoundingRect} rect\r\n     * @param {string} [layout=cover] 'center' or 'cover'\r\n     */\r\n    graphic.makePath = function (pathData, opts, rect, layout) {\r\n        var path = pathTool.createFromString(pathData, opts);\r\n        var boundingRect = path.getBoundingRect();\r\n        if (rect) {\r\n            var aspect = boundingRect.width / boundingRect.height;\r\n\r\n            if (layout === 'center') {\r\n                // Set rect to center, keep width / height ratio.\r\n                var width = rect.height * aspect;\r\n                var height;\r\n                if (width <= rect.width) {\r\n                    height = rect.height;\r\n                }\r\n                else {\r\n                    width = rect.width;\r\n                    height = width / aspect;\r\n                }\r\n                var cx = rect.x + rect.width / 2;\r\n                var cy = rect.y + rect.height / 2;\r\n\r\n                rect.x = cx - width / 2;\r\n                rect.y = cy - height / 2;\r\n                rect.width = width;\r\n                rect.height = height;\r\n            }\r\n\r\n            this.resizePath(path, rect);\r\n        }\r\n        return path;\r\n    };\r\n\r\n    graphic.mergePath = pathTool.mergePath,\r\n\r\n    /**\r\n     * Resize a path to fit the rect\r\n     * @param {module:zrender/graphic/Path} path\r\n     * @param {Object} rect\r\n     */\r\n    graphic.resizePath = function (path, rect) {\r\n        if (!path.applyTransform) {\r\n            return;\r\n        }\r\n\r\n        var pathRect = path.getBoundingRect();\r\n\r\n        var m = pathRect.calculateTransform(rect);\r\n\r\n        path.applyTransform(m);\r\n    };\r\n\r\n    /**\r\n     * Sub pixel optimize line for canvas\r\n     *\r\n     * @param {Object} param\r\n     * @param {Object} [param.shape]\r\n     * @param {number} [param.shape.x1]\r\n     * @param {number} [param.shape.y1]\r\n     * @param {number} [param.shape.x2]\r\n     * @param {number} [param.shape.y2]\r\n     * @param {Object} [param.style]\r\n     * @param {number} [param.style.lineWidth]\r\n     * @return {Object} Modified param\r\n     */\r\n    graphic.subPixelOptimizeLine = function (param) {\r\n        var subPixelOptimize = graphic.subPixelOptimize;\r\n        var shape = param.shape;\r\n        var lineWidth = param.style.lineWidth;\r\n\r\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\r\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\r\n        }\r\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\r\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\r\n        }\r\n        return param;\r\n    };\r\n\r\n    /**\r\n     * Sub pixel optimize rect for canvas\r\n     *\r\n     * @param {Object} param\r\n     * @param {Object} [param.shape]\r\n     * @param {number} [param.shape.x]\r\n     * @param {number} [param.shape.y]\r\n     * @param {number} [param.shape.width]\r\n     * @param {number} [param.shape.height]\r\n     * @param {Object} [param.style]\r\n     * @param {number} [param.style.lineWidth]\r\n     * @return {Object} Modified param\r\n     */\r\n    graphic.subPixelOptimizeRect = function (param) {\r\n        var subPixelOptimize = graphic.subPixelOptimize;\r\n        var shape = param.shape;\r\n        var lineWidth = param.style.lineWidth;\r\n        var originX = shape.x;\r\n        var originY = shape.y;\r\n        var originWidth = shape.width;\r\n        var originHeight = shape.height;\r\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\r\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\r\n        shape.width = Math.max(\r\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\r\n            originWidth === 0 ? 0 : 1\r\n        );\r\n        shape.height = Math.max(\r\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\r\n            originHeight === 0 ? 0 : 1\r\n        );\r\n        return param;\r\n    };\r\n\r\n    /**\r\n     * Sub pixel optimize for canvas\r\n     *\r\n     * @param {number} position Coordinate, such as x, y\r\n     * @param {number} lineWidth Should be nonnegative integer.\r\n     * @param {boolean=} positiveOrNegative Default false (negative).\r\n     * @return {number} Optimized position.\r\n     */\r\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\r\n        // Assure that (position + lineWidth / 2) is near integer edge,\r\n        // otherwise line will be fuzzy in canvas.\r\n        var doubledPosition = round(position * 2);\r\n        return (doubledPosition + round(lineWidth)) % 2 === 0\r\n            ? doubledPosition / 2\r\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function doSingleEnterHover(el) {\r\n        if (el.__isHover) {\r\n            return;\r\n        }\r\n        if (el.__hoverStlDirty) {\r\n            var stroke = el.style.stroke;\r\n            var fill = el.style.fill;\r\n\r\n            // Create hoverStyle on mouseover\r\n            var hoverStyle = el.__hoverStl;\r\n            var lift = colorTool.lift;\r\n            hoverStyle.fill = hoverStyle.fill\r\n                || (fill && (fill instanceof Gradient ? fill : lift(fill, -0.1)));\r\n            hoverStyle.stroke = hoverStyle.stroke\r\n                || (stroke && (stroke instanceof Gradient ? stroke : lift(stroke, -0.1)));\r\n\r\n            var normalStyle = {};\r\n            for (var name in hoverStyle) {\r\n                if (hoverStyle.hasOwnProperty(name)) {\r\n                    normalStyle[name] = el.style[name];\r\n                }\r\n            }\r\n\r\n            el.__normalStl = normalStyle;\r\n\r\n            el.__hoverStlDirty = false;\r\n        }\r\n        el.setStyle(el.__hoverStl);\r\n        el.z2 += 1;\r\n\r\n        el.__isHover = true;\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function doSingleLeaveHover(el) {\r\n        if (!el.__isHover) {\r\n            return;\r\n        }\r\n\r\n        var normalStl = el.__normalStl;\r\n        normalStl && el.setStyle(normalStl);\r\n        el.z2 -= 1;\r\n\r\n        el.__isHover = false;\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function doEnterHover(el) {\r\n        el.type === 'group'\r\n            ? el.traverse(function (child) {\r\n                if (child.type !== 'group') {\r\n                    doSingleEnterHover(child);\r\n                }\r\n            })\r\n            : doSingleEnterHover(el);\r\n    }\r\n    graphic.doEnterHover = doEnterHover;\r\n    function doLeaveHover(el) {\r\n        el.type === 'group'\r\n            ? el.traverse(function (child) {\r\n                if (child.type !== 'group') {\r\n                    doSingleLeaveHover(child);\r\n                }\r\n            })\r\n            : doSingleLeaveHover(el);\r\n    }\r\n    graphic.doLeaveHover = doLeaveHover;\r\n    /**\r\n     * @inner\r\n     */\r\n    function setElementHoverStl(el, hoverStl) {\r\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\r\n        // Often used when item group has a label element and it's hoverStyle is different\r\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\r\n        el.__hoverStlDirty = true;\r\n    }\r\n    graphic.setElementHoverStl = setElementHoverStl;\r\n    /**\r\n     * @inner\r\n     */\r\n    function onElementMouseOver() {\r\n        // Only if element is not in emphasis status\r\n        !this.__isEmphasis && doEnterHover(this);\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function onElementMouseOut() {\r\n        // Only if element is not in emphasis status\r\n        !this.__isEmphasis && doLeaveHover(this);\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function enterEmphasis() {\r\n        this.__isEmphasis = true;\r\n        doEnterHover(this);\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function leaveEmphasis() {\r\n        this.__isEmphasis = false;\r\n        doLeaveHover(this);\r\n    }\r\n\r\n    /**\r\n     * Set hover style of element\r\n     * @param {module:zrender/Element} el\r\n     * @param {Object} [hoverStyle]\r\n     */\r\n    graphic.setHoverStyle = function (el, hoverStyle) {\r\n        el.type === 'group'\r\n            ? el.traverse(function (child) {\r\n                if (child.type !== 'group') {\r\n                    setElementHoverStl(child, hoverStyle);\r\n                }\r\n            })\r\n            : setElementHoverStl(el, hoverStyle);\r\n        // Remove previous bound handlers\r\n        el.on('mouseover', onElementMouseOver)\r\n          .on('mouseout', onElementMouseOut);\r\n\r\n        // Emphasis, normal can be triggered manually\r\n        el.on('emphasis', enterEmphasis)\r\n          .on('normal', leaveEmphasis);\r\n    };\r\n\r\n    /**\r\n     * Set text option in the style\r\n     * @param {Object} textStyle\r\n     * @param {module:echarts/model/Model} labelModel\r\n     * @param {string} color\r\n     */\r\n    graphic.setText = function (textStyle, labelModel, color) {\r\n        var labelPosition = labelModel.getShallow('position') || 'inside';\r\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\r\n        var textStyleModel = labelModel.getModel('textStyle');\r\n        zrUtil.extend(textStyle, {\r\n            textDistance: labelModel.getShallow('distance') || 5,\r\n            textFont: textStyleModel.getFont(),\r\n            textPosition: labelPosition,\r\n            textFill: textStyleModel.getTextColor() || labelColor\r\n        });\r\n    };\r\n\r\n    function animateOrSetProps(isUpdate, el, props, animatableModel, cb) {\r\n        var postfix = isUpdate ? 'Update' : '';\r\n        var duration = animatableModel\r\n            && animatableModel.getShallow('animationDuration' + postfix);\r\n        var animationEasing = animatableModel\r\n            && animatableModel.getShallow('animationEasing' + postfix);\r\n\r\n        animatableModel && animatableModel.getShallow('animation')\r\n            ? el.animateTo(props, duration, animationEasing, cb)\r\n            : (el.attr(props), cb && cb());\r\n    }\r\n    /**\r\n     * Update graphic element properties with or without animation according to the configuration in series\r\n     * @param {module:zrender/Element} el\r\n     * @param {Object} props\r\n     * @param {module:echarts/model/Model} [animatableModel]\r\n     * @param {Function} cb\r\n     */\r\n    graphic.updateProps = zrUtil.curry(animateOrSetProps, true);\r\n\r\n    /**\r\n     * Init graphic element properties with or without animation according to the configuration in series\r\n     * @param {module:zrender/Element} el\r\n     * @param {Object} props\r\n     * @param {module:echarts/model/Model} [animatableModel]\r\n     * @param {Function} cb\r\n     */\r\n    graphic.initProps = zrUtil.curry(animateOrSetProps, false);\r\n\r\n    /**\r\n     * Get transform matrix of target (param target),\r\n     * in coordinate of its ancestor (param ancestor)\r\n     *\r\n     * @param {module:zrender/mixin/Transformable} target\r\n     * @param {module:zrender/mixin/Transformable} ancestor\r\n     */\r\n    graphic.getTransform = function (target, ancestor) {\r\n        var mat = matrix.identity([]);\r\n\r\n        while (target && target !== ancestor) {\r\n            matrix.mul(mat, target.getLocalTransform(), mat);\r\n            target = target.parent;\r\n        }\r\n\r\n        return mat;\r\n    };\r\n\r\n    /**\r\n     * Apply transform to an vertex.\r\n     * @param {Array.<number>} vertex [x, y]\r\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n     * @param {boolean=} invert Whether use invert matrix.\r\n     * @return {Array.<number>} [x, y]\r\n     */\r\n    graphic.applyTransform = function (vertex, transform, invert) {\r\n        if (invert) {\r\n            transform = matrix.invert([], transform);\r\n        }\r\n        return vector.applyTransform([], vertex, transform);\r\n    };\r\n\r\n    /**\r\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\r\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n     * @param {boolean=} invert Whether use invert matrix.\r\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\r\n     */\r\n    graphic.transformDirection = function (direction, transform, invert) {\r\n\r\n        // Pick a base, ensure that transform result will not be (0, 0).\r\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\r\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\r\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\r\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\r\n\r\n        var vertex = [\r\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\r\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\r\n        ];\r\n\r\n        vertex = graphic.applyTransform(vertex, transform, invert);\r\n\r\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\r\n            ? (vertex[0] > 0 ? 'right' : 'left')\r\n            : (vertex[1] > 0 ? 'bottom' : 'top');\r\n    };\r\n\r\n    module.exports = graphic;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/graphic.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n */\n\n    var Gradient = require('../graphic/Gradient');\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * @param {*} source\n     * @return {*} 拷贝后的新对象\n     */\n    function clone(source) {\n        if (typeof source == 'object' && source !== null) {\n            var result = source;\n            if (source instanceof Array) {\n                result = [];\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n            else if (\n                !isBuildInObject(source)\n                // 是否为 dom 对象\n                && !isDom(source)\n            ) {\n                result = {};\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        result[key] = clone(source[key]);\n                    }\n                }\n            }\n\n            return result;\n        }\n\n        return source;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuildInObject(sourceProp)\n                    && !isBuildInObject(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/tool/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/tool/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/tool/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/tool/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {Function} func\n     * @param {...}\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuildInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)]\n            || (value instanceof Gradient);\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return value && value.nodeType === 1\n               && typeof(value.nodeName) == 'string';\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @param  {*...} values\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/tool/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuildInObject: isBuildInObject,\n        isDom: isDom,\n        retrieve: retrieve,\n        assert: assert,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/util.js\n ** module id = 4\n ** module chunks = 0\n **/","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Gradient.js\n ** module id = 5\n ** module chunks = 0\n **/","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n    var matrix = require('../core/matrix');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            var pathEl;\n            var i;\n            for (i = 0; i < len; i++) {\n                pathEl = pathEls[i];\n                if (pathEl.__dirty) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/tool/path.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Gradient = require('./Gradient');\n\n    function pathHasFill(style) {\n        var fill = style.fill;\n        return fill != null && fill !== 'none';\n    }\n\n    function pathHasStroke(style) {\n        var stroke = style.stroke;\n        return stroke != null && stroke !== 'none' && style.lineWidth > 0;\n    }\n\n    var abs = Math.abs;\n\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = new PathProxy();\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx) {\n            ctx.save();\n\n            var style = this.style;\n            var path = this.path;\n            var hasStroke = pathHasStroke(style);\n            var hasFill = pathHasFill(style);\n\n            if (this.__dirtyPath) {\n                // Update gradient because bounding rect may changed\n                if (hasFill && (style.fill instanceof Gradient)) {\n                    style.fill.updateCanvasGradient(this, ctx);\n                }\n                if (hasStroke && (style.stroke instanceof Gradient)) {\n                    style.stroke.updateCanvasGradient(this, ctx);\n                }\n            }\n\n            style.bind(ctx, this);\n            this.setTransform(ctx);\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath || (\n                lineDash && !ctxLineDash && hasStroke\n            )) {\n                path = this.path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape);\n\n                // Clear path dirty flag\n                this.__dirtyPath = false;\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n\n            ctx.restore();\n        },\n\n        buildPath: function (ctx, shapeCfg) {},\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            if (!rect) {\n                var path = this.path;\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape);\n                }\n                rect = path.getBoundingRect();\n            }\n            /**\n             * Needs update rect with stroke lineWidth when\n             * 1. Element changes scale or lineWidth\n             * 2. First create rect\n             */\n            if (pathHasStroke(style) && (this.__dirty || !this._rect)) {\n                var rectWithStroke = this._rectWithStroke\n                    || (this._rectWithStroke = rect.clone());\n                rectWithStroke.copy(rect);\n                // FIXME Must after updateTransform\n                var w = style.lineWidth;\n                // PENDING, Min line width is needed when line is horizontal or vertical\n                var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                // Only add extra hover lineWidth when there are no fill\n                if (!pathHasFill(style)) {\n                    w = Math.max(w, this.strokeContainThreshold);\n                }\n                // Consider line width\n                // Line scale can't be 0;\n                if (lineScale > 1e-10) {\n                    rectWithStroke.width += w / lineScale;\n                    rectWithStroke.height += w / lineScale;\n                    rectWithStroke.x -= w / lineScale / 2;\n                    rectWithStroke.y -= w / lineScale / 2;\n                }\n                return rectWithStroke;\n            }\n            this._rect = rect;\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (pathHasStroke(style)) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!pathHasFill(style)) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (pathHasFill(style)) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (arguments.length ===0) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        shape[name] = key[name];\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Path.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty();\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Displayable.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * @module zrender/graphic/Style\n */\n\n\n\n    var STYLE_LIST_COMMON = [\n        'lineCap', 'lineJoin', 'miterLimit',\n        'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'shadowColor'\n    ];\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el) {\n            var fill = this.fill;\n            var stroke = this.stroke;\n            for (var i = 0; i < STYLE_LIST_COMMON.length; i++) {\n                var styleName = STYLE_LIST_COMMON[i];\n\n                if (this[styleName] != null) {\n                    ctx[styleName] = this[styleName];\n                }\n            }\n            if (stroke != null) {\n                var lineWidth = this.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n            if (fill != null) {\n                 // Use canvas gradient if has\n                ctx.fillStyle = fill.canvasGradient ? fill.canvasGradient : fill;\n            }\n            if (stroke != null) {\n                 // Use canvas gradient if has\n                ctx.strokeStyle = stroke.canvasGradient ? stroke.canvasGradient : stroke;\n            }\n            this.opacity != null && (ctx.globalAlpha = this.opacity);\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    var name;\n    var i;\n    for (i = 0; i < STYLE_LIST_COMMON.length; i++) {\n        name = STYLE_LIST_COMMON[i];\n        if (!(name in styleProto)) {\n            styleProto[name] = null;\n        }\n    }\n\n    module.exports = Style;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Style.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty();\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n            this.dirty();\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty();\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty();\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Element.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n        var idStart = 0x0907;\n\n        module.exports = function () {\n            return 'zr_' + (idStart++);\n        };\n    \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/guid.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n    var zrUtil = require('../core/util');\n    var indexOf = zrUtil.indexOf;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            if (indexOf(_h[event], event) >= 0) {\n                return this;\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/mixin/Eventful.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = this.origin;\n\n        var scale = this.scale;\n        var rotation = this.rotation;\n        var position = this.position;\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        if (m) {\n            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/mixin/Transformable.js\n ** module id = 13\n ** module chunks = 0\n **/","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/matrix.js\n ** module id = 14\n ** module chunks = 0\n **/","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            out[0] = x || 0;\n            out[1] = y || 0;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/vector.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/mixin/Animatable.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len === arr1Len) {\n            return;\n        }\n        // FIXME Not work for TypedArray\n        var isPreviousLarger = arr0Len > arr1Len;\n        if (isPreviousLarger) {\n            // Cut the previous\n            arr0.length = arr1Len;\n        }\n        else {\n            // Fill the previous\n            for (var i = arr0Len; i < arr1Len; i++) {\n                arr0.push(\n                    arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                );\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        if (isValueArray) {\n            var lastValue = kfValues[trackLen - 1];\n            // Polyfill array\n            for (var i = 0; i < trackLen - 1; i++) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            fillArr(getter(animator._target, propName), lastValue, arrDim);\n        }\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            if (percent < lastFramePercent) {\n                // Start from next key\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/Animator.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (time) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = new Date().getTime() + this._delay;\n                this._initialized = true;\n            }\n\n            var percent = (time - this._startTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart();\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function() {\n            var time = new Date().getTime();\n            var remainder = (time - this._startTime) % this._life;\n            this._startTime = new Date().getTime() - remainder + this.gap;\n\n            this._needsRemove = false;\n        },\n\n        fire: function(eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/Clip.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/easing.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * @module zrender/tool/color\n */\n\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    /**\n     * @param {string} colorStr\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr) {\n        if (!colorStr) {\n            return;\n        }\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            return kCSSColorTable[str].slice();  // dup.\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                ];\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                ];\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return [\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    ];\n                case 'hsla':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    return hsla2rgba(params);\n                case 'hsl':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return hsla2rgba(params);\n                default:\n                    return;\n            }\n        }\n\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        var rgba = [\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\n        ];\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>}\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n        out = out || [0, 0, 0, 0];\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {Array<number>} interval  Array length === 2,\n     *                                  each item is normalized value ([0, 1]).\n     * @param {Array.<string>} colors Color list.\n     * @return {Array.<Object>} colors corresponding to the interval,\n     *                          each item is {color: 'xxx', offset: ...}\n     *                          where offset is between 0 and 1.\n     * @memberOf module:zrender/util/color\n     */\n    function mapIntervalToColor(interval, colors) {\n        if (interval.length !== 2 || interval[1] < interval[0]) {\n            return;\n        }\n\n        var info0 = mapToColor(interval[0], colors, true);\n        var info1 = mapToColor(interval[1], colors, true);\n\n        var result = [{color: info0.color, offset: 0}];\n\n        var during = info1.value - info0.value;\n        var start = Math.max(info0.value, info0.rightIndex);\n        var end = Math.min(info1.value, info1.leftIndex);\n\n        for (var i = start; during > 0 && i <= end; i++) {\n            result.push({\n                color: colors[i],\n                offset: (i - info0.value) / during\n            });\n        }\n        result.push({color: info1.color, offset: 1});\n\n        return result;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<string>} colors Color list.\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color.\n     */\n    function stringify(arrColor, type) {\n        if (type === 'rgb' || type === 'hsv' || type === 'hsl') {\n            arrColor = arrColor.slice(0, 3);\n        }\n        return type + '(' + arrColor.join(',') + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        mapIntervalToColor: mapIntervalToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/tool/color.js\n ** module id = 20\n ** module chunks = 0\n **/","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>' \n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/log.js\n ** module id = 21\n ** module chunks = 0\n **/","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/config.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function setTransform(ctx, m) {\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            var invTransform = this.invTransform;\n            if (transform) {\n                tmpRect.copy(rect);\n                tmpRect.applyTransform(transform);\n                rect = tmpRect;\n                // Transform back\n                setTransform(ctx, invTransform);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            ctx.textAlign = align;\n            if (verticalAlign) {\n                switch (verticalAlign) {\n                    case 'middle':\n                        y -= textRect.height / 2;\n                        break;\n                    case 'bottom':\n                        y -= textRect.height;\n                        break;\n                    // 'top'\n                }\n                // Ignore baseline\n                ctx.textBaseline = 'top';\n            }\n            else {\n                ctx.textBaseline = baseline;\n            }\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n            ctx.font = font;\n\n            // Text shadow\n            ctx.shadowColor = style.textShadowColor;\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n            for (var i = 0; i < textLines.length; i++) {\n                textFill && ctx.fillText(textLines[i], x, y);\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            // Transform again\n            transform && setTransform(ctx, transform);\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/mixin/RectText.js\n ** module id = 23\n ** module chunks = 0\n **/","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width =  Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var halfHeight = height / 2 - textHeight / 2;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'top'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} textFont\n     * @param  {string} containerWidth\n     * @param  {Object} [options]\n     * @param  {number} [options.ellipsis='...']\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minCharacters=3]\n     * @return {string}\n     */\n    function textEllipsis(text, textFont, containerWidth, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = util.defaults({\n            ellipsis: '...',\n            minCharacters: 3,\n            maxIterations: 3,\n            cnCharWidth: getTextWidth('国', textFont),\n            // FIXME\n            // 未考虑非等宽字体\n            ascCharWidth: getTextWidth('a', textFont)\n        }, options, true);\n\n        containerWidth -= getTextWidth(options.ellipsis);\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = textLineTruncate(\n                textLines[i], textFont, containerWidth, options\n            );\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function textLineTruncate(text, textFont, containerWidth, options) {\n        // FIXME\n        // 粗糙得写的，尚未考虑性能和各种语言、字体的效果。\n        for (var i = 0;; i++) {\n            var lineWidth = getTextWidth(text, textFont);\n\n            if (lineWidth < containerWidth || i >= options.maxIterations) {\n                text += options.ellipsis;\n                break;\n            }\n\n            var subLength = i === 0\n                ? estimateLength(text, containerWidth, options)\n                : Math.floor(text.length * containerWidth / lineWidth);\n\n            if (subLength < options.minCharacters) {\n                text = '';\n                break;\n            }\n\n            text = text.substr(0, subLength);\n        }\n\n        return text;\n    }\n\n    function estimateLength(text, containerWidth, options) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < containerWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127)\n                ? options.ascCharWidth : options.cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        ellipsis: textEllipsis,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont;\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/text.js\n ** module id = 24\n ** module chunks = 0\n **/","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathAbs = Math.abs;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var min = [];\n            var max = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                min[0] = this.x;\n                min[1] = this.y;\n                max[0] = this.x + this.width;\n                max[1] = this.y + this.height;\n\n                v2ApplyTransform(min, min, m);\n                v2ApplyTransform(max, max, m);\n\n                this.x = mathMin(min[0], max[0]);\n                this.y = mathMin(min[1], max[1]);\n                this.width = mathAbs(max[0] - min[0]);\n                this.height = mathAbs(max[1] - min[1]);\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        }\n    };\n\n    module.exports = BoundingRect;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/BoundingRect.js\n ** module id = 25\n ** module chunks = 0\n **/","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path data. Stored as flat array\n         * @type {Array.<Object>}\n         */\n        this.data = [];\n\n        this._len = 0;\n\n        this._ctx = null;\n\n        this._xi = 0;\n        this._yi = 0;\n\n        this._x0 = 0;\n        this._y0 = 0;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            // Reset\n            this._len = 0;\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            this.addData(CMD.L, x, y);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            this._xi = x;\n            this._yi = y;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._xi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx >= 0 && x <= x1) || (dx < 0 && x > x1)) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            for (var i = 0; i < this._len;) {\n                var cmd = d[i++];\n                switch (cmd) {\n                    case CMD.M:\n                        ctx.moveTo(d[i++], d[i++]);\n                        break;\n                    case CMD.L:\n                        ctx.lineTo(d[i++], d[i++]);\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, theta + dTheta, 1 - fs);\n                        }\n                        break;\n                    case CMD.R:\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/PathProxy.js\n ** module id = 26\n ** module chunks = 0\n **/","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/curve.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var xDim = [];\n        var yDim = [];\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var left, right, top, bottom;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n\n        for (i = 0; i < n; i++) {\n            xDim[i] = cubicAt(x0, x1, x2, x3, xDim[i]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            yDim[i] = cubicAt(y0, y1, y2, y3, yDim[i]);\n        }\n\n        xDim.push(x0, x3);\n        yDim.push(y0, y3);\n\n        left = mathMin.apply(null, xDim);\n        right = mathMax.apply(null, xDim);\n        top = mathMin.apply(null, yDim);\n        bottom = mathMax.apply(null, yDim);\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/bbox.js\n ** module id = 28\n ** module chunks = 0\n **/","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? 1 : -1;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? 1 : -1;\n                    }\n                    else {\n                        w += y3 < y1_ ? 1 : -1;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? 1 : -1;\n                    }\n                    else {\n                        w += y3 < y0_ ? 1 : -1;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >=0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ > x) {\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? 1 : -1;\n                    }\n                    else {\n                        w += y2 < y_ ? 1 : -1;\n                    }\n                }\n                return w;\n            }\n            else {\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ > x) {\n                    return 0;\n                }\n                return y2 < y0 ? 1 : -1;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                if (w !== 0) {\n                    return true;\n                }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x1, y1, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        if (w !== 0) {\n                            return true;\n                        }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/path.js\n ** module id = 29\n ** module chunks = 0\n **/","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/line.js\n ** module id = 30\n ** module chunks = 0\n **/","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/cubic.js\n ** module id = 31\n ** module chunks = 0\n **/","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/quadratic.js\n ** module id = 32\n ** module chunks = 0\n **/","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/arc.js\n ** module id = 33\n ** module chunks = 0\n **/","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/util.js\n ** module id = 34\n ** module chunks = 0\n **/","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/windingLine.js\n ** module id = 35\n ** module chunks = 0\n **/","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/tool/transformPath.js\n ** module id = 36\n ** module chunks = 0\n **/","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            this[key] = opts[key];\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToMap(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromMap(child.id);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromMap(child.id);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToMap(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            // TODO Transform\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/container/Group.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var roundRectHelper = require('./helper/roundRect');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var ZImage = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var width = style.width || image.width;\n                var height = style.height || image.height;\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n\n                ctx.save();\n\n                style.bind(ctx);\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.r) {\n                    // Border radius clipping\n                    // FIXME\n                    ctx.beginPath();\n                    roundRectHelper.buildPath(ctx, style);\n                    ctx.clip();\n                }\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                // 如果没设置宽和高的话自动根据图片宽高设置\n                if (style.width == null) {\n                    style.width = width;\n                }\n                if (style.height == null) {\n                    style.height = height;\n                }\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n                ctx.restore();\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Image.js\n ** module id = 38\n ** module chunks = 0\n **/","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/helper/roundRect.js\n ** module id = 39\n ** module chunks = 0\n **/","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function() {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function(val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function(entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function(entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function() {\n        return this._len;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function(val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function(maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     */\n    LRUProto.put = function(key, value) {\n        var list = this._list;\n        var map = this._map;\n        if (map[key] == null) {\n            var len = list.len();\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n            }\n\n            var entry = list.insert(value);\n            entry.key = key;\n            map[key] = entry;\n        }\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function(key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function() {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/LRU.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n            var textFill = style.fill;\n            var textStroke = style.stroke;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (text) {\n                ctx.save();\n\n                this.style.bind(ctx);\n                this.setTransform(ctx);\n\n                textFill && (ctx.fillStyle = textFill);\n                textStroke && (ctx.strokeStyle = textStroke);\n\n                ctx.font = style.textFont || style.font;\n                ctx.textAlign = style.textAlign;\n\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, ctx.font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    ctx.textBaseline = 'top';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height;\n                            break;\n                        // 'top'\n                    }\n                }\n                else {\n                    ctx.textBaseline = style.textBaseline;\n                }\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    textFill && ctx.fillText(textLines[i], x, y);\n                    textStroke && ctx.strokeText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                ctx.restore();\n            }\n        },\n\n        getBoundingRect: function () {\n            if (!this._rect) {\n                var style = this.style;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign, style.textBaseline\n                );\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                this._rect = rect;\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Text.js\n ** module id = 41\n ** module chunks = 0\n **/","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n        \n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n        buildPath : function (ctx, shape) {\n            // Better stroking in ShapeBundle\n            ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n            return;\n        }\n    });\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Circle.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n// FIXME clockwise seems wrong\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Sector.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Ring.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Polygon.js\n ** module id = 45\n ** module chunks = 0\n **/","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/helper/poly.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/helper/smoothSpline.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/helper/smoothBezier.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Polyline.js\n ** module id = 49\n ** module chunks = 0\n **/","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Rect.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Line.js\n ** module id = 51\n ** module chunks = 0\n **/","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n\n    var out = [];\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            if (cpx2 === null || cpy2 === null) {\n                return [\n                    quadraticAt(shape.x1, shape.cpx1, shape.x2, p),\n                    quadraticAt(shape.y1, shape.cpy1, shape.y2, p)\n                ];\n            }\n            else {\n                return [\n                    cubicAt(shape.x1, shape.cpx1, shape.cpx1, shape.x2, p),\n                    cubicAt(shape.y1, shape.cpy1, shape.cpy1, shape.y2, p)\n                ];\n            }\n        }\n    });\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/BezierCurve.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Arc.js\n ** module id = 53\n ** module chunks = 0\n **/","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops) {\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient,\n\n        type: 'linear',\n\n        updateCanvasGradient: function (shape, ctx) {\n            var rect = shape.getBoundingRect();\n            // var size =\n            var x = this.x * rect.width + rect.x;\n            var x2 = this.x2 * rect.width + rect.x;\n            var y = this.y * rect.height + rect.y;\n            var y2 = this.y2 * rect.height + rect.y;\n\n            var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n            var colorStops = this.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n\n            this.canvasGradient = canvasGradient;\n        }\n\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/LinearGradient.js\n ** module id = 54\n ** module chunks = 0\n **/","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     */\n    var RadialGradient = function (x, y, r, colorStops) {\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient,\n\n        type: 'radial',\n\n        updateCanvasGradient: function (shape, ctx) {\n            var rect = shape.getBoundingRect();\n\n            var width = rect.width;\n            var height = rect.height;\n            var min = Math.min(width, height);\n            // var max = Math.max(width, height);\n\n            var x = this.x * width + rect.x;\n            var y = this.y * height + rect.y;\n            var r = this.r * min;\n\n            var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n            var colorStops = this.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n\n            this.canvasGradient = canvasGradient;\n        }\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/RadialGradient.js\n ** module id = 55\n ** module chunks = 0\n **/","'use strict';\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var apiList = [\r\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction',\r\n        'on', 'off', 'trigger', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getNodeClass', 'showTipWindow', 'hideTipWindow', 'resize', 'clear'\r\n    ];\r\n\r\n    function ExtensionAPI(instance) {\r\n        zrUtil.each(apiList, function (name) {\r\n            this[name] = zrUtil.bind(instance[name], instance);\r\n        }, this);\r\n    }\r\n\r\n    module.exports = ExtensionAPI;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/ExtensionAPI.js\n ** module id = 56\n ** module chunks = 0\n **/","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.0.4';\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                instances[key].dispose();\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * 获取zrender实例\n     * @param {string} id ZRender对象索引\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n        if (!env.node) {\n            this.handler = new Handler(painter.getViewportRoot(), storage, painter);\n        }\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: function () {\n                    if (self._needsRefresh) {\n                        self.refreshImmediately();\n                    }\n                }\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromMap = storage.delFromMap;\n        var oldAddToMap = storage.addToMap;\n\n        storage.delFromMap = function (elId) {\n            var el = storage.get(elId);\n\n            oldDelFromMap.call(storage, elId);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToMap = function (el) {\n            oldAddToMap.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {string|module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {string|module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 修改指定zlevel的绘制配置项\n         *\n         * @param {string} zLevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 视图更新\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * 标记视图在浏览器下一帧需要绘制\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 调整视图大小\n         */\n        resize: function() {\n            this.painter.resize();\n            this.handler && this.handler.resize();\n        },\n\n        /**\n         * 停止所有动画\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * 获取视图宽度\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * 获取视图高度\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * 图像导出\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff'] 背景色\n         * @return {string} 图片的Base64 url\n         */\n        toDataURL: function(type, backgroundColor, args) {\n            return this.painter.toDataURL(type, backgroundColor, args);\n        },\n\n        /**\n         * 将常规shape转成image shape\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, width, height) {\n            var id = guid();\n            return this.painter.pathToImage(id, e, width, height);\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} cursorStyle 例如 crosshair\n         */\n        setDefaultCursorStyle: function (cursorStyle) {\n            this.handler.setDefaultCursorStyle(cursorStyle);\n        },\n\n        /**\n         * 事件绑定\n         *\n         * @param {string} eventName 事件名称\n         * @param {Function} eventHandler 响应函数\n         * @param {Object} [context] 响应函数\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler && this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * 事件解绑定，参数为空则解绑所有自定义事件\n         *\n         * @param {string} eventName 事件名称\n         * @param {Function} eventHandler 响应函数\n         */\n        off: function(eventName, eventHandler) {\n            this.handler && this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * 事件触发\n         *\n         * @param {string} eventName 事件名称，resize，hover，drag，etc\n         * @param {event=} event event dom事件对象\n         */\n        trigger: function (eventName, event) {\n            this.handler && this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * 清除当前ZRender下所有类图的数据和显示，clear后MVC和已绑定事件均还存在在，ZRender可用\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * 释放当前ZR实例（删除包括dom，数据、显示和事件绑定），dispose后ZR不可用\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler && this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/zrender.js\n ** module id = 57\n ** module chunks = 0\n **/","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        var touchpad = webos && ua.match(/TouchPad/);\n        var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        var silk = ua.match(/Silk\\/([\\d._]+)/);\n        var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        var playbook = ua.match(/PlayBook/);\n        var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        if (android) os.android = true, os.version = android[2];\n        if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        if (webos) os.webos = true, os.version = webos[2];\n        if (touchpad) os.touchpad = true;\n        if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        if (bb10) os.bb10 = true, os.version = bb10[2];\n        if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        if (playbook) browser.playbook = true;\n        if (kindle) os.kindle = true, os.version = kindle[1];\n        if (silk) browser.silk = true, browser.version = silk[1];\n        if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) browser.firefox = true, browser.version = firefox[1];\n        if (ie) browser.ie = true, browser.version = ie[1];\n        if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        if (webview) browser.webview = true;\n        if (ie) browser.ie = true, browser.version = ie[1];\n        if (edge) browser.edge = true, browser.version = edge[1];\n\n        os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n            (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 ||\n            (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n            (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default,\n                // only MS browsers are reliable on pointer events currently.\n                && (browser.edge || (browser.ie && browser.version >= 10))\n        };\n    }\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/env.js\n ** module id = 58\n ** module chunks = 0\n **/","'use strict';\n/**\n * Handler控制模块\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var env = require('./core/env');\n    var eventTool = require('./core/event');\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n    var GestureMgr = require('./core/GestureMgr');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout'\n    ];\n    !usePointerEvent() && mouseHandlerNames.push(\n        'mouseup', 'mousedown', 'mousemove'\n    );\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerHandlerNames = [\n        'pointerdown', 'pointerup', 'pointermove'\n    ];\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    // touch指尖错觉的尝试偏移量配置\n    // var MOBILE_TOUCH_OFFSETS = [\n    //     { x: 10 },\n    //     { x: -20 },\n    //     { x: 10, y: 10 },\n    //     { y: -20 }\n    // ];\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    function makeEventPacket(eveType, target, event) {\n        return {\n            type: eveType,\n            event: event,\n            target: target,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta\n        };\n    }\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.root, event);\n\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var hovered = this.findHover(x, y, null);\n            var lastHovered = this._hovered;\n\n            this._hovered = hovered;\n\n            this.root.style.cursor = hovered ? hovered.cursor : this._defaultCursorStyle;\n            // Mouse out on previous hovered element\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n                this._dispatchProxy(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this._dispatchProxy(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hovered && hovered !== lastHovered) {\n                this._dispatchProxy(hovered, 'mouseover', event);\n            }\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.root, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.root) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.root) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this._dispatchProxy(this._hovered, 'mouseout', event);\n\n            this.trigger('globalout', {\n                event: event\n            });\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // FIXME\n            // 移动端可能需要default行为，例如静态图表时。\n            // eventTool.stop(event);// 阻止浏览器默认事件，重要\n            event = normalizeEvent(this.root, event);\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // 平板补充一次findHover\n            // this._mobileFindFixed(event);\n            // Trigger mousemove and mousedown\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n            // eventTool.stop(event);// 阻止浏览器默认事件，重要\n            event = normalizeEvent(this.root, event);\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n            // eventTool.stop(event);// 阻止浏览器默认事件，重要\n            event = normalizeEvent(this.root, event);\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                // this._mobileFindFixed(event);\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.root, event);\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY, null);\n            this._dispatchProxy(hovered, name, event);\n        };\n    });\n\n    // Pointer event handlers\n    // util.each(['pointerdown', 'pointermove', 'pointerup'], function (name) {\n    //     domHandlers[name] = function (event) {\n    //         var mouseName = name.replace('pointer', 'mouse');\n    //         domHandlers[mouseName].call(this, event);\n    //     };\n    // });\n\n    function processGesture(zrHandler, event, stage) {\n        var gestureMgr = zrHandler._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            zrHandler.findHover(event.zrX, event.zrY, null)\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        if (gestureInfo) {\n            // eventTool.stop(event);\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            zrHandler._dispatchProxy(gestureInfo.target, type, gestureInfo.event);\n        }\n    }\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        var handlerNames = touchHandlerNames.concat(pointerHandlerNames);\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            instance._handlers[name] = util.bind(domHandlers[name], instance);\n        }\n\n        for (var i = 0; i < mouseHandlerNames.length; i++) {\n            var name = mouseHandlerNames[i];\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        }\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {HTMLElement} root Main HTML element for painting.\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     */\n    var Handler = function(root, storage, painter) {\n        Eventful.call(this);\n\n        this.root = root;\n        this.storage = storage;\n        this.painter = painter;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._hovered;\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._defaultCursorStyle = 'default';\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        /**\n         * @private\n         * @type {Array.<Function>}\n         */\n        this._handlers = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        initDomHandler(this);\n\n        if (usePointerEvent()) {\n            mountHandlers(pointerHandlerNames, this);\n        }\n        else if (useTouchEvent()) {\n            mountHandlers(touchHandlerNames, this);\n\n            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n            // addEventListener(root, 'mouseout', this._mouseoutHandler);\n        }\n\n        // Considering some devices that both enable touch and mouse event (like MS Surface\n        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n        // mouse event can not be handle in those devices.\n        mountHandlers(mouseHandlerNames, this);\n\n        Draggable.call(this);\n\n        function mountHandlers(handlerNames, instance) {\n            util.each(handlerNames, function (name) {\n                addEventListener(root, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = null;\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this._handlers[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n            var root = this.root;\n\n            var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n            for (var i = 0; i < handlerNames.length; i++) {\n                var name = handlerNames[i];\n                removeEventListener(root, eventNameFix(name), this._handlers[name]);\n            }\n\n            this.root =\n            this.storage =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} cursorStyle 例如 crosshair\n         */\n        setDefaultCursorStyle: function (cursorStyle) {\n            this._defaultCursorStyle = cursorStyle;\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetEl 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        _dispatchProxy: function (targetEl, eventName, event) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\n            var el = targetEl;\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                if (!list[i].silent\n                 && list[i] !== exclude\n                 // getDisplayList may include ignored item in VML mode\n                 && !list[i].ignore\n                 && isHover(list[i], x, y)) {\n                    return list[i];\n                }\n            }\n        }\n    };\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var p = displayable.parent;\n            while (p) {\n                if (p.clipPath && !p.clipPath.contain(x, y))  {\n                    // Clipped by parents\n                    return false;\n                }\n                p = p.parent;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n    /**\n     * Althought MS Surface support screen touch, IE10/11 do not support\n     * touch event and MS Edge supported them but not by default (but chrome\n     * and firefox do). Thus we use Pointer event on MS browsers to handle touch.\n     */\n    function usePointerEvent() {\n        // TODO\n        // pointermove event dont trigger when using finger.\n        // We may figger it out latter.\n        return false;\n        // return env.pointerEventsSupported\n            // In no-touch device we dont use pointer evnets but just\n            // use mouse event for avoiding problems.\n            // && window.navigator.maxTouchPoints;\n    }\n\n    function useTouchEvent() {\n        return env.touchEventsSupported;\n    }\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Handler.js\n ** module id = 59\n ** module chunks = 0\n **/","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : { left: 0, top: 0};\n    }\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标\n     */\n    function normalizeEvent(el, e) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            var box = getBoundingClientRect(el);\n            e.zrX = e.clientX - box.left;\n            e.zrY = e.clientY - box.top;\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                            ? e.targetTouches[0]\n                            : e.changedTouches[0];\n            if (touch) {\n                var rBounding = getBoundingClientRect(el);\n                // touch事件坐标是全屏的~\n                e.zrX = touch.clientX - rBounding.left;\n                e.zrY = touch.clientY - rBounding.top;\n            }\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * 停止冒泡和阻止默认行为\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/event.js\n ** module id = 60\n ** module chunks = 0\n **/","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this._dispatchProxy(draggingTarget, 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this._dispatchProxy(draggingTarget, 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget);\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this._dispatchProxy(lastDropTarget, 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this._dispatchProxy(dropTarget, 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this._dispatchProxy(draggingTarget, 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this._dispatchProxy(this._dropTarget, 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    module.exports = Draggable;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/mixin/Draggable.js\n ** module id = 61\n ** module chunks = 0\n **/","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target) {\n            this._doTrack(event, target);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                trackItem.points.push([touch.clientX, touch.clientY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/GestureMgr.js\n ** module id = 62\n ** module chunks = 0\n **/","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n\n    var Group = require('./container/Group');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                if (a.z2 === b.z2) {\n                    return a.__renderidx - b.__renderidx;\n                }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        // 所有常规形状，id索引的map\n        this._elements = {};\n\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            for (var i = 0, len = displayList.length; i < len; i++) {\n                displayList[i].__renderidx = i;\n            }\n\n            displayList.sort(shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            el.update();\n\n            el.afterUpdate();\n\n            var clipPath = el.clipPath;\n            if (clipPath) {\n                // clipPath 的变换是基于 group 的变换\n                clipPath.parent = el;\n                clipPath.updateTransform();\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                    clipPaths.push(clipPath);\n                }\n                else {\n                    clipPaths = [clipPath];\n                }\n            }\n\n            if (el.type == 'group') {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    child.__dirty = el.__dirty || child.__dirty;\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        delRoot: function (elId) {\n            if (elId == null) {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToMap: function (el) {\n            if (el instanceof Group) {\n                el.__storage = this;\n            }\n            el.dirty();\n\n            this._elements[el.id] = el;\n\n            return this;\n        },\n\n        get: function (elId) {\n            return this._elements[elId];\n        },\n\n        delFromMap: function (elId) {\n            var elements = this._elements;\n            var el = elements[elId];\n            if (el) {\n                delete elements[elId];\n                if (el instanceof Group) {\n                    el.__storage = null;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._elements =\n            this._renderList =\n            this._roots = null;\n        }\n    };\n\n    module.exports = Storage;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Storage.js\n ** module id = 63\n ** module chunks = 0\n **/","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time = 0;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime();\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    self._update();\n                }\n            }\n\n            this._time = new Date().getTime();\n            requestAnimationFrame(step);\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        animate: function (target, options) {\n            options = options || {};\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/Animation.js\n ** module id = 64\n ** module chunks = 0\n **/","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n\n    var Layer = require('./Layer');\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.isBuildin) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        layer.__dirty = false;\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            var m;\n            if (clipPath.transform) {\n                m = clipPath.transform;\n                ctx.transform(\n                    m[0], m[1],\n                    m[2], m[3],\n                    m[4], m[5]\n                );\n            }\n            var path = clipPath.path;\n            path.beginPath(ctx);\n            clipPath.buildPath(path, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            if (clipPath.transform) {\n                m = clipPath.invTransform;\n                ctx.transform(\n                    m[0], m[1],\n                    m[2], m[3],\n                    m[4], m[5]\n                );\n            }\n        }\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        opts = opts || {};\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        // In node environment using node-canvas\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] = 'none';\n            rootStyle['user-select'] = 'none';\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        if (!singleCanvas) {\n            var width = this._getWidth();\n            var height = this._getHeight();\n            this._width = width;\n            this._height = height;\n\n            var domRoot = document.createElement('div');\n            this._domRoot = domRoot;\n            var domRootStyle = domRoot.style;\n\n            // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domRootStyle.position = 'relative';\n            domRootStyle.overflow = 'hidden';\n            domRootStyle.width = this._width + 'px';\n            domRootStyle.height = this._height + 'px';\n            root.appendChild(domRoot);\n\n            /**\n             * @type {Object.<key, module:zrender/Layer>}\n             * @private\n             */\n            this._layers = {};\n            /**\n             * @type {Array.<number>}\n             * @private\n             */\n            this._zlevelList = [];\n        }\n        else {\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            this._layers = {\n                0: mainLayer\n            };\n            this._zlevelList = [0];\n        }\n\n        this._layerConfig = {};\n\n        this.pathToImage = this._createPathToImage();\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._singleCanvas ? this._layers[0].dom : this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n            var list = this.storage.getDisplayList(true);\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.isBuildin && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            return this;\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            var viewWidth = this._width;\n            var viewHeight = this._height;\n\n            this.eachBuildinLayer(preProcessLayer);\n\n            // var invTransform = [];\n            var prevElClipPaths = null;\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.isBuildin) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (\n                    (currentLayer.__dirty || paintAll)\n                    // Ignore invisible element\n                    && !el.invisible\n                    // Ignore transparent element\n                    && el.style.opacity !== 0\n                    // Ignore scale 0 element, in some environment like node-canvas\n                    // Draw a scale 0 element can cause all following draw wrong\n                    && el.scale[0] && el.scale[1]\n                    // Ignore culled element\n                    && !(el.culling && isDisplayableCulled(el, viewWidth, viewHeight))\n                ) {\n                    var clipPaths = el.__clipPaths;\n\n                    // Optimize when clipping on group with several elements\n                    if (isClipPathChanged(clipPaths, prevElClipPaths)) {\n                        // If has previous clipping state, restore from it\n                        if (prevElClipPaths) {\n                            ctx.restore();\n                        }\n                        // New clipping state\n                        if (clipPaths) {\n                            ctx.save();\n                            doClip(clipPaths, ctx);\n                        }\n                        prevElClipPaths = clipPaths;\n                    }\n                    // TODO Use events ?\n                    el.beforeBrush && el.beforeBrush(ctx);\n                    el.brush(ctx, false);\n                    el.afterBrush && el.afterBrush(ctx);\n                }\n\n                el.__dirty = false;\n            }\n\n            // If still has clipping state\n            if (prevElClipPaths) {\n                ctx.restore();\n            }\n\n            this.eachBuildinLayer(postProcessLayer);\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.isBuildin = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(\n                        layer.dom,\n                        prevDom.nextSibling\n                    );\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n\n            layersMap[zlevel] = layer;\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuildinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (! layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n\n            var elCounts = {};\n\n            this.eachBuildinLayer(function (layer, z) {\n                elCounts[z] = layer.elCount;\n                layer.elCount = 0;\n            });\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                if (layer) {\n                    layer.elCount++;\n                    // 已经被标记为需要刷新\n                    if (layer.__dirty) {\n                        continue;\n                    }\n                    layer.__dirty = el.__dirty;\n                }\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuildinLayer(function (layer, z) {\n                if (elCounts[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuildinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            width = width || this._getWidth();\n            height = height || this._getHeight();\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    this._layers[id].resize(width, height);\n                }\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            var ctx = imageLayer.ctx;\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                if (!el.invisible) {\n                    el.beforeBrush && el.beforeBrush(ctx);\n                    // TODO Check image cross origin\n                    el.brush(ctx, false);\n                    el.afterBrush && el.afterBrush(ctx);\n                }\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getWidth: function () {\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            // FIXME Better way to get the width and height when element has not been append to the document\n            return ((root.clientWidth || parseInt10(stl.width) || parseInt10(root.style.width))\n                    - (parseInt10(stl.paddingLeft) || 0)\n                    - (parseInt10(stl.paddingRight) || 0)) | 0;\n        },\n\n        _getHeight: function () {\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return ((root.clientHeight || parseInt10(stl.height) || parseInt10(root.style.height))\n                    - (parseInt10(stl.paddingTop) || 0)\n                    - (parseInt10(stl.paddingBottom) || 0)) | 0;\n        },\n\n        _pathToImage: function (id, path, width, height, dpr) {\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.clearRect(0, 0, width * dpr, height * dpr);\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [0, 0, 0];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                id: id,\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        },\n\n        _createPathToImage: function () {\n            var me = this;\n\n            return function (id, e, width, height) {\n                return me._pathToImage(\n                    id, e, width, height, me.dpr\n                );\n            };\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Painter.js\n ** module id = 65\n ** module chunks = 0\n **/","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            var dpr = this.dpr;\n            if (dpr != 1) {\n                this.ctx.scale(dpr, dpr);\n            }\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (dpr != 1) {\n                this.ctx.scale(dpr, dpr);\n            }\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var haveClearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width / dpr, height / dpr);\n            if (haveClearColor) {\n                ctx.save();\n                ctx.fillStyle = this.clearColor;\n                ctx.fillRect(0, 0, width / dpr, height / dpr);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Layer.js\n ** module id = 66\n ** module chunks = 0\n **/","/**\r\n * 工具方法类\r\n * @author wang.xiaohu\r\n */\r\n\r\n    var Point = require(\"./Point.js\");\r\n    var Line = require(\"./LineStruct.js\");\r\n    var graphic = require(\"./graphic.js\");\r\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    /**\r\n     * 构造类继承关系\r\n     *\r\n     * @param {Function} clazz 源类\r\n     * @param {Function} baseClazz 基类\r\n     */\r\n    function inherits(clazz, baseClazz) {\r\n        var clazzPrototype = clazz.prototype;\r\n\r\n        function F() {}\r\n        F.prototype = baseClazz.prototype;\r\n        clazz.prototype = new F();\r\n\r\n        for (var prop in clazzPrototype) {\r\n            clazz.prototype[prop] = clazzPrototype[prop];\r\n        }\r\n        clazz.prototype.constructor = clazz;\r\n        clazz.superClass = baseClazz;\r\n    };\r\n\r\n    function getUUID() {\r\n        var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split(''),\r\n            uuid = new Array(36),\r\n            rnd = 0,\r\n            r;\r\n        for (var i = 0; i < 36; i++) {\r\n            if (i == 8 || i == 13 || i == 18 || i == 23) {\r\n                uuid[i] = '-';\r\n            } else if (i == 14) {\r\n                uuid[i] = '4';\r\n            } else {\r\n                if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\r\n                r = rnd & 0xf;\r\n                rnd = rnd >> 4;\r\n                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n            }\r\n        }\r\n        return \"sid-\" + uuid.join('');\r\n    };\r\n\r\n\r\n    /**\r\n     * 计算两点之间的距离\r\n     *@param {Point} p1 - first {Point}\r\n     *@param {Point} p2 - second {Point}\r\n     *@return {Number} - the distance between those 2 points. It is always positive.\r\n     **/\r\n    function distance(p1, p2) {\r\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n    };\r\n\r\n    /**\r\n     * 返回一条折线 最长的两个点\r\n     * @param  {[type]} points [description]\r\n     * @return {[type]}        [description]\r\n     */\r\n    function getMaxLineLength(points) {\r\n        var m = distance(points[0], points[1]);\r\n        var result = [points[0], points[1]];\r\n        for (var i = 1; i < points.length - 1; i++) {\r\n\r\n            if (m < distance(points[i], points[i + 1])) {\r\n                m = distance(points[i], points[i + 1])\r\n                result = [points[i], points[i + 1]];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**Returns the length of a Polyline that would be created with a set of points\r\n     *@param {Array} v - an {Array} of {Points}\r\n     *@return {Number} - a positive number equal with total length*/\r\n    function getPolylineLength(v) {\r\n        var l = 0;\r\n        for (var i = 0; i < v.length - 1; i++) {\r\n            l += distance(v[i], v[i + 1]);\r\n        }\r\n\r\n        return l;\r\n    };\r\n\r\n\r\n    /**Returns the max of a vector\r\n     *@param {Array} v - vector of {Number}s\r\n     *@return {Number} - the maximum number from the vector or NaN if vector is empty\r\n     **/\r\n    function max(v) {\r\n        if (v.lenght == 0) {\r\n            return NaN;\r\n        } else {\r\n            var m = v[0];\r\n            for (var i = 0; i < v.length; i++) {\r\n                if (m < v[i]) {\r\n                    m = v[i];\r\n                }\r\n            }\r\n\r\n            return m;\r\n        }\r\n    };\r\n\r\n\r\n    /**Returns the min of a vector\r\n     *@param {Array} v - vector of {Number}s\r\n     *@return {Number} - the minimum number from the vector or NaN if vector is empty\r\n     *@author alex@scriptoid.com\r\n     **/\r\n    function min(v) {\r\n        if (v.lenght == 0) {\r\n            return NaN;\r\n        } else {\r\n            var m = v[0];\r\n            for (var i = 0; i < v.length; i++) {\r\n                if (m > v[i]) {\r\n                    m = v[i];\r\n                }\r\n            }\r\n\r\n            return m;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 判断 点数组 是否正交直线路径\r\n     *Tests if a vector of points is an orthogonal path (moving in multiples of 90 degrees)\r\n     *@param {Array} v - an {Array} of {Point}s\r\n     *@return {Boolean} - true if path is valid, false otherwise\r\n     **/\r\n    function orthogonalPath(v) {\r\n        if (v.length <= 1) {\r\n            return true;\r\n        }\r\n\r\n        for (var i = 0; i < v.length - 1; i++) {\r\n            if (v[i].x != v[i + 1].x && v[i].y != v[i + 1].y) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n    /**\r\n     *Test to see if 2 {Line}s intersects. They are considered finite segments\r\n     *and not the infinite lines from geometry\r\n     *@param {Line} l1 - fist line/segment\r\n     *@param {Line} l2 - last line/segment\r\n     *@return {Boolean} true - if the lines intersect or false if not\r\n     **/\r\n    function lineIntersectsLine(l1, l2) {\r\n        // check for two vertical lines\r\n        if (l1.startPoint.x == l1.endPoint.x && l2.startPoint.x == l2.endPoint.x) {\r\n            return l1.startPoint.x == l2.startPoint.x ? // if 'infinite 'lines do coincide,\r\n                // then check segment bounds for overlapping\r\n                l1.contains(l2.startPoint.x, l2.startPoint.y) ||\r\n                l1.contains(l2.endPoint.x, l2.endPoint.y) :\r\n                // lines are paralel\r\n                false;\r\n        }\r\n        // if one line is vertical, and another line is not vertical\r\n        else if (l1.startPoint.x == l1.endPoint.x || l2.startPoint.x == l2.endPoint.x) {\r\n            // let assume l2 is vertical, otherwise exchange them\r\n            if (l1.startPoint.x == l1.endPoint.x) {\r\n                var l = l1;\r\n                l1 = l2;\r\n                l2 = l;\r\n            }\r\n            // finding intersection of 'infinite' lines\r\n            // equation of the first line is y = ax + b, second: x = c\r\n            var a = (l1.endPoint.y - l1.startPoint.y) / (l1.endPoint.x - l1.startPoint.x);\r\n            var b = l1.startPoint.y - a * l1.startPoint.x;\r\n            var x0 = l2.startPoint.x;\r\n            var y0 = a * x0 + b;\r\n            return l1.contains(x0, y0) && l2.contains(x0, y0);\r\n        }\r\n\r\n        // check normal case - both lines are not vertical\r\n        else {\r\n            //line equation is : y = a*x + b, b = y - a * x\r\n            var a1 = (l1.endPoint.y - l1.startPoint.y) / (l1.endPoint.x - l1.startPoint.x);\r\n            var b1 = l1.startPoint.y - a1 * l1.startPoint.x;\r\n\r\n            var a2 = (l2.endPoint.y - l2.startPoint.y) / (l2.endPoint.x - l2.startPoint.x);\r\n            var b2 = l2.startPoint.y - a2 * l2.startPoint.x;\r\n\r\n            if (a1 == a2) { //paralel lines\r\n                return b1 == b2 ?\r\n                    // for coincide lines, check for segment bounds overlapping\r\n                    l1.contains(l2.startPoint.x, l2.startPoint.y) || l1.contains(l2.endPoint.x, l2.endPoint.y) :\r\n                    // not coincide paralel lines have no chance to intersect\r\n                    false;\r\n            } else { //usual case - non paralel, the 'infinite' lines intersects...we only need to know if inside the segment\r\n\r\n                /*\r\n                 * if one of the lines are vertical, then x0 is equal to their x,\r\n                 * otherwise:\r\n                 * y1 = a1 * x + b1\r\n                 * y2 = a2 * x + b2\r\n                 * => x0 = (b2 - b1) / (a1 - a2)\r\n                 * => y0 = a1 * x0 + b1\r\n                 **/\r\n                x0 = (b2 - b1) / (a1 - a2);\r\n                y0 = a1 * x0 + b1;\r\n                return l1.contains(x0, y0) && l2.contains(x0, y0);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \r\n     *Tests if a a polyline defined by a set of points intersects a rectangle\r\n     *@param {Array} points - and {Array} of {Point}s\r\n     *@param {Array} bounds - the bounds of the rectangle defined by (x1, y1, x2, y2)\r\n     *@param {Boolean} closedPolyline - incase polyline is closed figure then true, else false\r\n     * \r\n     *@return true - if line intersects the rectangle, false - if not\r\n     **/\r\n    function polylineIntersectsRectangle(points, bounds, closedPolyline) {\r\n\r\n\r\n        //get the 4 lines/segments represented by the bounds\r\n        var lines = [];\r\n        lines.push(new Line(new Point(bounds[0], bounds[1]), new Point(bounds[2], bounds[1])));\r\n        lines.push(new Line(new Point(bounds[2], bounds[1]), new Point(bounds[2], bounds[3])));\r\n        lines.push(new Line(new Point(bounds[2], bounds[3]), new Point(bounds[0], bounds[3])));\r\n        lines.push(new Line(new Point(bounds[0], bounds[3]), new Point(bounds[0], bounds[1])));\r\n\r\n        for (var k = 0; k < points.length - 1; k++) {\r\n            //create a line out of each 2 consecutive points            \r\n            var tempLine = new Line(points[k], points[k + 1]);\r\n\r\n            //see if that line intersect any of the line on bounds border\r\n            for (var i = 0; i < lines.length; i++) {\r\n                if (lineIntersectsLine(tempLine, lines[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        //check the closed figure - that is last point connected to the first\r\n        if (closedPolyline) {\r\n            //create a line out of each 2 consecutive points            \r\n            var tempLine = new Line(points[points.length - 1], points[0]);\r\n\r\n            //see if that line intersect any of the line on bounds border\r\n            for (var i = 0; i < lines.length; i++) {\r\n                if (lineIntersectsLine(tempLine, lines[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * 计算路径的分数\r\n     * Score a ortogonal path made out of Points\r\n     *Iterates over a set of points (minimum 3)\r\n     *For each 3 points (i, i+1, i+2) :\r\n     *  - if the 3rd one is after the 2nd on the same line we add +1 \r\n     *  - if the 3rd is up or down related to the 2nd we do not do anything +0\r\n     *  - if the 3rd goes back we imediatelly return -1\r\n     *@param {Array} v - an array of {Point}s\r\n     *@return {Number} - -1 if the path is wrong (goes back) or something >= 0 if is fine\r\n     *  The bigger the number the smooth the path is\r\n     **/\r\n    function scorePath(v) {\r\n        if (v.length <= 2) {\r\n            return -1;\r\n        }\r\n\r\n        var score = 0;\r\n        for (var i = 1; i < v.length - 1; i++) {\r\n            if (v[i - 1].x == v[i].x && v[i].x == v[i + 1].x) { //on the same vertical\r\n                if (signum(v[i + 1].y - v[i].y) == signum(v[i].y - v[i - 1].y)) { //same direction\r\n                    score++;\r\n                } else { //going back - no good\r\n                    return -1;\r\n                }\r\n            } else if (v[i - 1].y == v[i].y && v[i].y == v[i + 1].y) { //on the same horizontal\r\n                if (signum(v[i + 1].x - v[i].x) == signum(v[i].x - v[i - 1].x)) { //same direction\r\n                    score++;\r\n                } else { //going back - no good\r\n                    return -1;\r\n                }\r\n            } else { //not on same vertical nor horizontal\r\n                score--;\r\n            }\r\n        }\r\n\r\n        return score;\r\n    };\r\n\r\n    /**\r\n     * 返回数字符号（+ -)\r\n     * Returns the sign of a number\r\n     *@param {Number} x - the number\r\n     *@returns {Number}\r\n     *@see <a href=\"http://en.wikipedia.org/wiki/Sign_function\">http://en.wikipedia.org/wiki/Sign_function</a>\r\n     **/\r\n    function signum(x) {\r\n        if (x > 0)\r\n            return 1;\r\n        else if (x < 0)\r\n            return -1;\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    /**\r\n     * 判断 点数组 是不是有效路径（没有回路）\r\n     *Tests if a vector of points is a valid path (not going back)\r\n     *There are a few problems here. If you have p1, p2, p3 and p4 and p2 = p3 you need to ignore that\r\n     *@param {Array} v - an {Array} of {Point}s\r\n     *@return {Boolean} - true if path is valid, false otherwise\r\n     **/\r\n    function forwardPath(v) {\r\n        if (v.length <= 2) {\r\n            return true;\r\n        }\r\n\r\n        for (var i = 0; i < v.length - 2; i++) {\r\n            if (v[i].x == v[i + 1].x && v[i + 1].x == v[i + 2].x) { //on the same vertical\r\n                if (signum(v[i + 1].y - v[i].y) != 0) { //test only we have a progressing path\r\n                    if (signum(v[i + 1].y - v[i].y) == -1 * signum(v[i + 2].y - v[i + 1].y)) { //going back (ignore zero)\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (v[i].y == v[i + 1].y && v[i + 1].y == v[i + 2].y) { //on the same horizontal\r\n                if (signum(v[i + 1].x - v[i].x) != 0) { //test only we have a progressing path\r\n                    if (signum(v[i + 1].x - v[i].x) == -1 * signum(v[i + 2].x - v[i + 1].x)) { //going back (ignore zero)\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * 将[x:0,y:0]转化为[0, 0]  给zrender使用   \r\n     * @param  {[type]} points [description]\r\n     * @return {[type]}        [description]\r\n     */\r\n    function traslatePoints(points, isRevert) {\r\n        var newPoints = [];\r\n        if (isRevert) {\r\n            for (var i = 0; i < points.length; i++) {\r\n                var point = points[i];\r\n                newPoints.push(new Point(point[0], point[1]));\r\n            }\r\n            return newPoints;\r\n        } else {\r\n            for (var i = 0; i < points.length; i++) {\r\n                var point = points[i];\r\n                newPoints.push([point.x, point.y]);\r\n            }\r\n            return newPoints;\r\n        };\r\n\r\n\r\n    };\r\n\r\n    function rotationMatrix(angle) {\r\n        var mReturn = [\r\n            [Math.cos(angle), -Math.sin(angle), 0],\r\n            [Math.sin(angle), Math.cos(angle), 0],\r\n            [0, 0, 1]\r\n        ];\r\n        return mReturn;\r\n    };\r\n\r\n    function translationMatrix(dx, dy) {\r\n        return [\r\n            [1, 0, dx],\r\n            [0, 1, dy],\r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    function scaleMatrix(sx, sy) {\r\n        if (sy == null) {\r\n            sy = sx;\r\n        }\r\n        return [\r\n            [sx, 0, 0],\r\n            [0, sy, 0],\r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    /** It will return the end point of a line on a given angle (clockwise).\r\n     * @param {Point} startPoint - the start of the line\r\n     * @param {Number} length - the length of the line\r\n     * @param {Number} angle - the angle of the line in radians\r\n     * @return {Point} - the endPoint of the line\r\n     */\r\n    function getEndPoint(startPoint, length, angle) {\r\n        var endPoint = startPoint.clone();\r\n        endPoint.transform(translationMatrix(-startPoint.x, -startPoint.y));\r\n        endPoint.y -= length;\r\n        endPoint.transform(rotationMatrix(angle));\r\n        endPoint.transform(translationMatrix(startPoint.x, startPoint.y));\r\n        return endPoint;\r\n    };\r\n\r\n    /**\r\n     * 获取获取两个图形的外面四个连接点\r\n     * @param  {[type]} node [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    function getConnectorPoints(node) {\r\n        return {\r\n            left: new Point(node.x, node.y + node.height / 2), //矩形 左中的位置\r\n            top: new Point(node.x + node.width / 2, node.y), //矩形 上中的位置\r\n            right: new Point(node.x + node.width, node.y + node.height / 2), //矩形 右中的位置\r\n            bottom: new Point(node.x + node.width / 2, node.y + node.height), //矩形 下中的位置\r\n            center: new Point(node.x + node.width / 2, node.y + node.height / 2) //中间位置\r\n\r\n        };\r\n    };\r\n\r\n    /**\r\n     * 获取获取两个图形的外面四个连接点\r\n     * @param  {[type]} node [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    function getSoltPoints(node) {\r\n        return [\r\n            //top\r\n            [Math.round(node.getRect().width / 3 /10)*10, 0 ],\r\n            [Math.round(2*node.getRect().width / 3 /10)*10, 0 ],\r\n            //right\r\n            [node.getRect().width, Math.round(node.getRect().height / 3 /10)*10 ],\r\n            [node.getRect().width, Math.round(2*node.getRect().height / 3 /10)*10 ],\r\n            //bottom\r\n            [Math.round(node.getRect().width / 3 /10)*10, node.getRect().height ],\r\n            [Math.round(2*node.getRect().width / 3 /10)*10, node.getRect().height ],\r\n            //left\r\n            [0, Math.round(node.getRect().height / 3 /10)*10 ],\r\n            [0, Math.round(2*node.getRect().height / 3 /10)*10 ],\r\n\r\n        ]\r\n    };    \r\n\r\n    /**\r\n     * 计算 p1 p2两点所连接的直线的角度\r\n     * @param  {[type]} p1 [description]\r\n     * @param  {[type]} p2 [description]\r\n     * @return {[type]}    [description]\r\n     */\r\n    function tangentRotation(p1, p2) {\r\n        return -Math.PI / 2 - Math.atan2(\r\n            p2.y - p1.y, p2.x - p1.x\r\n        );\r\n    };\r\n\r\n    /**\r\n     * 判断3点是否在一条直线上\r\n     * Tests if 3 points are coliniar with matrix determinants.\r\n     * If the determinat of matrix \r\n     * /         \\\r\n     * | x1 y1 1 |\r\n     * | x2 y2 1 |\r\n     * | x3 y3 1 |\r\n     * \\         /\r\n     * is zero it means that the points are colinear\r\n     *@param {Point} p1 - first point\r\n     *@param {Point} p2 - second point\r\n     *@param {Point} p3 - third point\r\n     *@return {Boolean} - true if coliniar and false if not\r\n     *@author Alex\r\n     *@see http://en.wikipedia.org/wiki/Determinant\r\n     *@see https://people.richland.edu/james/lecture/m116/matrices/applications.html\r\n     **/\r\n    function collinearity(p1, p2, p3, precission) {\r\n        var determinant = (p1.x * p2.y + p1.y * p3.x + p2.x * p3.y) - (p2.y * p3.x + p1.y * p2.x + p1.x * p3.y);\r\n\r\n        if (precission) {\r\n            return Math.abs(determinant) <= precission;\r\n        } else {\r\n            return determinant === 0;\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * 四舍五入 保存decimals的小数\r\n     **/\r\n    function enhancedRound(number, decimals) {\r\n        return Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\r\n    };\r\n\r\n    /**\r\n     * 获取两点之间的长度\r\n     **/\r\n    function getLength(startPoint, endPoint) {\r\n        return Math.sqrt(Math.pow(startPoint.x - endPoint.x, 2) + Math.pow(startPoint.y - endPoint.y, 2));\r\n    };\r\n\r\n    /**\r\n     * 获取角度 \r\n     * @param  {[type]} centerPoint  [description]\r\n     * @param  {[type]} outsidePoint [description]\r\n     * @param  {[type]} round        [description]\r\n     * @return {[type]}              [description]\r\n     */\r\n    function getAngle(centerPoint, outsidePoint, round) {\r\n        centerPoint.x = enhancedRound(centerPoint.x, 5);\r\n        centerPoint.y = enhancedRound(centerPoint.y, 5);\r\n        outsidePoint.x = enhancedRound(outsidePoint.x, 5);\r\n        outsidePoint.y = enhancedRound(outsidePoint.y, 5);\r\n        var angle = Math.atan((outsidePoint.x - centerPoint.x) / (outsidePoint.y - centerPoint.y));\r\n        angle = -angle;\r\n\r\n        //endAngle+=90;\r\n        if (outsidePoint.x >= centerPoint.x && outsidePoint.y >= centerPoint.y) {\r\n            angle += Math.PI;\r\n        } else if (outsidePoint.x <= centerPoint.x && outsidePoint.y >= centerPoint.y) {\r\n            angle += Math.PI;\r\n        } else if (outsidePoint.x <= centerPoint.x && outsidePoint.y <= centerPoint.y) {\r\n            angle += Math.PI * 2;\r\n        }\r\n        while (angle >= Math.PI * 2) {\r\n            angle -= Math.PI * 2;\r\n        }\r\n        if (isNaN(angle)) { //Nan\r\n            angle = 0; //we are at center point;\r\n        }\r\n        if (round) {\r\n            angle = Math.round(angle / round) * round\r\n        }\r\n        return angle;\r\n    };\r\n\r\n    function getRect(node) {\r\n        var boundingRect = node.getBoundingRect();\r\n        //创建最小包围盒虚线\r\n        var points = [];\r\n        points[0] = [-boundingRect.width / 2, -boundingRect.height / 2];\r\n        points[1] = [boundingRect.width / 2, -boundingRect.height / 2];\r\n        points[2] = [boundingRect.width / 2, boundingRect.height / 2];\r\n        points[3] = [-boundingRect.width / 2, boundingRect.height / 2];\r\n        points[4] = [-boundingRect.width / 2, -boundingRect.height / 2];\r\n\r\n        var boundRect, cx, cy;\r\n        if (node instanceof graphic.Circle) {\r\n            //注: 因事件为圆形  所以 x y 为圆心的位置  包围矩形要减去宽度一半 \r\n            boundRect = new BoundingRect(node.position[0] - boundingRect.width / 2,\r\n                node.position[1] - boundingRect.height / 2,\r\n                boundingRect.width, boundingRect.height);\r\n            cx = node.position[0];\r\n            cy = node.position[1];\r\n        } else {\r\n            boundRect = new BoundingRect(node.position[0],\r\n                node.position[1],\r\n                boundingRect.width, boundingRect.height);\r\n            cx = node.position[0] + boundingRect.width / 2;\r\n            cy = node.position[1] + boundingRect.height / 2;\r\n        }\r\n        return {\r\n            x: cx,\r\n            y: cy,\r\n            width: boundingRect.width,\r\n            height: boundingRect.height,\r\n            points: points,\r\n            boundingRect: boundRect,\r\n        };\r\n    };\r\n\r\n    var StackedMap = {\r\n        createNew: function() {\r\n            var stack = [];\r\n\r\n            return {\r\n                add: function(key, value) {\r\n                    var arrKey = this.get(key);\r\n                    arrKey.push(value)\r\n\r\n                },\r\n                get: function(key) {\r\n                    for (var i = 0; i < stack.length; i++) {\r\n                        if (key == stack[i].key) {\r\n                            return stack[i].value;\r\n                        }\r\n                    }\r\n                    //如果没有找到的话，则创建一个新的数组\r\n                    var value = [];\r\n                    stack.push({ key: key, value: value });\r\n                    return value;\r\n                },\r\n                keys: function() {\r\n                    var keys = [];\r\n                    for (var i = 0; i < stack.length; i++) {\r\n                        keys.push(stack[i].key);\r\n                    }\r\n                    return keys;\r\n                },\r\n                top: function() {\r\n                    return stack[stack.length - 1];\r\n                },\r\n                remove: function(key) {\r\n                    var idx = -1;\r\n                    for (var i = 0; i < stack.length; i++) {\r\n                        if (key == stack[i].key) {\r\n                            idx = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    return stack.splice(idx, 1)[0];\r\n                },\r\n                removeTop: function() {\r\n                    return stack.splice(stack.length - 1, 1)[0];\r\n                },\r\n                length: function() {\r\n                    return stack.length;\r\n                }\r\n            };\r\n        }\r\n    };\r\n\r\n    function randomColor() {\r\n        var arrHex = [\"0\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\"],\r\n            strHex = \"#\",\r\n            index;\r\n        for (var i = 0; i < 6; i++) {\r\n            index = Math.round(Math.random() * 15);\r\n            strHex += arrHex[index];\r\n        }\r\n        return strHex;\r\n    };\r\n\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    };\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n        \"'\": \"'\",\r\n        '\\\\': '\\\\',\r\n        '\\r': 'r',\r\n        '\\n': 'n',\r\n        '\\u2028': 'u2028',\r\n        '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\r\n\r\n    var escapeChar = function(match) {\r\n        return '\\\\' + escapes[match];\r\n    };\r\n\r\n    // JavaScript micro-templating, similar to John Resig's implementation.\r\n    // Underscore templating handles arbitrary delimiters, preserves whitespace,\r\n    // and correctly escapes quotes within interpolated code.\r\n    // NB: `oldSettings` only exists for backwards compatibility.\r\n    function template(text, settings, oldSettings) {\r\n        if (!settings && oldSettings) settings = oldSettings;\r\n        settings = settings || {}\r\n        settings = zrUtil.defaults(settings, templateSettings, true);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n            (settings.escape || noMatch).source,\r\n            (settings.interpolate || noMatch).source,\r\n            (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n            source += text.slice(index, offset).replace(escaper, escapeChar);\r\n            index = offset + match.length;\r\n\r\n            if (escape) {\r\n                source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n            } else if (interpolate) {\r\n                source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n            } else if (evaluate) {\r\n                source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n            }\r\n\r\n            // Adobe VMs need the match returned to produce the correct offest.\r\n            return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n            source + 'return __p;\\n';\r\n\r\n        try {\r\n            var render = new Function(settings.variable || 'obj', source);\r\n        } catch (e) {\r\n            e.source = source;\r\n            throw e;\r\n        }\r\n\r\n        var template = function(data) {\r\n            return render.call(this, data);\r\n        };\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    };\r\n    module.exports = {\r\n        inherits: inherits,\r\n        getUUID: getUUID,\r\n        distance: distance,\r\n        getPolylineLength: getPolylineLength,\r\n        max: max,\r\n        min: min,\r\n        orthogonalPath: orthogonalPath,\r\n        polylineIntersectsRectangle: polylineIntersectsRectangle,\r\n        scorePath: scorePath,\r\n        forwardPath: forwardPath,\r\n        traslatePoints: traslatePoints,\r\n        getEndPoint: getEndPoint,\r\n        getConnectorPoints: getConnectorPoints,\r\n        tangentRotation: tangentRotation,\r\n        collinearity: collinearity,\r\n        translationMatrix: translationMatrix,\r\n        scaleMatrix: scaleMatrix,\r\n        round: enhancedRound,\r\n        getLength: getLength,\r\n        getAngle: getAngle,\r\n        getRect: getRect,\r\n        StackedMap: StackedMap,\r\n        getMaxLineLength: getMaxLineLength,\r\n        randomColor: randomColor,\r\n        template: template,\r\n        isUndefined: isUndefined,\r\n        getSoltPoints:getSoltPoints\r\n    };\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/util.js\n ** module id = 67\n ** module chunks = 0\n **/","\r\n\r\n    /**\r\n      * Creates an instance of Point\r\n      *\r\n      *\r\n      * @constructor\r\n      * @this {Point}\r\n      * @param {Number} x The x coordinate of point.\r\n      * @param {Number} y The y coordinate of point.\r\n      * Note: Even if it is named Point this class should be named Dot as Dot is closer\r\n      * then Point from math perspective.\r\n      **/\r\n    function Point(x, y){\r\n        /**The x coordinate of point*/\r\n        this.x = x;\r\n        \r\n        /**The y coordinate of point*/\r\n        this.y = y;\r\n        \r\n\r\n    }\r\n\r\n    /**Creates a {Point} out of JSON parsed object\r\n     *@param {JSONObject} o - the JSON parsed object\r\n     *@return {Point} a newly constructed Point\r\n     **/\r\n    Point.load = function(o){\r\n        var newPoint = new Point(Number(o.x), Number(o.y));\r\n        return newPoint;\r\n    }\r\n\r\n\r\n    /**Creates an array of points from an array of {JSONObject}s\r\n     *@param {Array} v - the array of JSONObjects\r\n     *@return an {Array} of {Point}s\r\n     **/\r\n    Point.loadArray = function(v){\r\n        var newPoints = [];\r\n        for(var i=0; i< v.length; i++){\r\n            newPoints.push(Point.load(v[i]));\r\n        }\r\n        return newPoints;\r\n    }\r\n\r\n\r\n    /**Clones an array of points\r\n     *@param {Array} v - the array of {Point}s\r\n     *@return an {Array} of {Point}s\r\n     **/\r\n    Point.cloneArray = function(v){\r\n        var newPoints = [];\r\n        for(var i=0; i< v.length; i++){\r\n            newPoints.push(v[i].clone());\r\n        }\r\n        return newPoints;\r\n    }\r\n\r\n    Point.prototype = {\r\n        constructor : Point,\r\n        \r\n        transform:function(matrix){\r\n            var oldX = this.x;\r\n            var oldY = this.y;\r\n            this.x = matrix[0][0] * oldX + matrix[0][1] * oldY + matrix[0][2];\r\n            this.y = matrix[1][0] * oldX + matrix[1][1] * oldY + matrix[1][2];\r\n        },\r\n        \r\n        /**Tests if this point is similar to other point\r\n         *@param {Point} anotherPoint - the other point\r\n         **/\r\n        equals:function(anotherPoint){\r\n            if(! (anotherPoint instanceof Point) ){\r\n                return false;\r\n            }\r\n            return (this.x == anotherPoint.x)\r\n            && (this.y == anotherPoint.y)\r\n        },\r\n\r\n        /**Clone current Point\r\n         **/\r\n        clone: function(){\r\n            var newPoint = new Point(this.x, this.y);\r\n            return newPoint;\r\n        },\r\n\r\n        /**Tests to see if a point (x, y) is within a range of current Point\r\n         *@param {Numeric} x - the x coordinate of tested point\r\n         *@param {Numeric} y - the x coordinate of tested point\r\n         *@param {Numeric} radius - the radius of the vicinity\r\n         **/\r\n        near:function(x, y, radius){\r\n            var distance = Math.sqrt(Math.pow(this.x - x, 2) + Math.pow(this.y - y, 2));\r\n\r\n            return (distance <= radius);\r\n        },\r\n\r\n        contains: function(x,y){\r\n            return this.x == x && this.y == y;\r\n        },\r\n\r\n        toString:function(){\r\n            return '[' + this.x + ',' + this.y + ']';\r\n        },\r\n\r\n        getPoints:function(){\r\n            return [this];\r\n        }\r\n    };\r\n    module.exports = Point;\r\n    \n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/Point.js\n ** module id = 68\n ** module chunks = 0\n **/","\r\n\r\n    /**\r\n      * Creates an instance of a Line. A Line is actually a segment and not a pure\r\n      * geometrical Line\r\n      *\r\n      * @constructor\r\n      * @this {Line}\r\n      * @param {Point} startPoint - starting point of the line\r\n      * @param {Point} endPoint - the ending point of the line\r\n      **/\r\n    function Line(startPoint, endPoint){\r\n        /**Starting {@link Point} of the line*/\r\n        this.startPoint = startPoint;\r\n        \r\n        /**Ending {@link Point} of the line*/\r\n        this.endPoint = endPoint;\r\n        \r\n        /**Serialization type*/\r\n        this.oType = 'Line'; //object type used for JSON deserialization\r\n    }\r\n\r\n    /**Creates a {Line} out of JSON parsed object\r\n     *@param {JSONObject} o - the JSON parsed object\r\n     *@return {Line} a newly constructed Line\r\n     **/\r\n    Line.load = function(o){\r\n        var newLine = new Line(\r\n            Point.load(o.startPoint),\r\n            Point.load(o.endPoint)\r\n        );\r\n\r\n        return newLine;\r\n    }\r\n\r\n    Line.prototype = {\r\n        contructor: Line,\r\n\r\n\r\n\r\n        clone:function(){\r\n            var ret = new Line(this.startPoint.clone(), this.endPoint.clone());\r\n            return ret;\r\n        },\r\n\r\n        equals:function(anotherLine){\r\n            if(!anotherLine instanceof Line){\r\n                return false;\r\n            }\r\n            return this.startPoint.equals(anotherLine.startPoint)\r\n            && this.endPoint.equals(anotherLine.endPoint)\r\n        },\r\n\r\n        /** Tests to see if a point belongs to this line (not as infinite line but more like a segment)\r\n         * Algorithm: Compute line's equation and see if (x, y) verifies it.\r\n         * @param {Number} x - the X coordinates\r\n         * @param {Number} y - the Y coordinates\r\n         **/\r\n        contains: function(x, y){\r\n            // if the point is inside rectangle bounds of the segment\r\n            if (Math.min(this.startPoint.x, this.endPoint.x) <= x\r\n                && x <= Math.max(this.startPoint.x, this.endPoint.x)\r\n                && Math.min(this.startPoint.y, this.endPoint.y) <= y\r\n                && y <= Math.max(this.startPoint.y, this.endPoint.y)) {\r\n\r\n                // check for vertical line\r\n                if (this.startPoint.x == this.endPoint.x) {\r\n                    return x == this.startPoint.x;\r\n                } else { // usual (not vertical) line can be represented as y = a * x + b\r\n                    var a = (this.endPoint.y - this.startPoint.y) / (this.endPoint.x - this.startPoint.x);\r\n                    var b = this.startPoint.y - a * this.startPoint.x;\r\n                    return y == a * x + b;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /*\r\n         *See if we are near a {Line} by a certain radius (also includes the extremities into computation)\r\n         *@param {Number} x - the x coordinates\r\n         *@param {Number} y - the y coordinates\r\n         *@param {Number} radius - the radius to search for\r\n         *@see http://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\r\n         *@see \"Mathematics for Computer Graphics, 2nd Ed., by John Vice, page 227\"\r\n         **/\r\n        near:function(x,y,radius){\r\n            \r\n            if(this.endPoint.x === this.startPoint.x){ //Vertical line, so the vicinity area is a rectangle\r\n                return ( (this.startPoint.y-radius<=y && this.endPoint.y+radius>=y) \r\n                        || (this.endPoint.y-radius<=y && this.startPoint.y+radius>=y))\r\n                && x > this.startPoint.x - radius && x < this.startPoint.x + radius ;\r\n            }\r\n            \r\n            if(this.startPoint.y === this.endPoint.y){ //Horizontal line, so the vicinity area is a rectangle\r\n                return ( (this.startPoint.x - radius<=x && this.endPoint.x+radius>=x) \r\n                        || (this.endPoint.x-radius<=x && this.startPoint.x+radius>=x))\r\n                        && y>this.startPoint.y-radius && y<this.startPoint.y+radius ;\r\n            }\r\n\r\n\r\n            var startX = Math.min(this.endPoint.x,this.startPoint.x);\r\n            var startY = Math.min(this.endPoint.y,this.startPoint.y);\r\n            var endX = Math.max(this.endPoint.x,this.startPoint.x);\r\n            var endY = Math.max(this.endPoint.y,this.startPoint.y);\r\n            \r\n            /*We will compute the distance from point to the line\r\n             * by using the algorithm from \r\n             * http://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\r\n             * */\r\n\r\n            //First we need to find a,b,c of the line equation ax + by + c = 0\r\n            var a = this.endPoint.y - this.startPoint.y;\r\n            var b = this.startPoint.x - this.endPoint.x;        \r\n            var c = -(this.startPoint.x * this.endPoint.y - this.endPoint.x * this.startPoint.y);\r\n\r\n            //Secondly we get the distance \"Mathematics for Computer Graphics, 2nd Ed., by John Vice, page 227\"\r\n            var d = Math.abs( (a*x + b*y + c) / Math.sqrt(Math.pow(a,2) + Math.pow(b,2)) );\r\n\r\n            //Thirdly we get coordinates of closest line's point to target point\r\n            //http://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line#Cartesian_coordinates\r\n            var closestX = (b * (b*x - a*y) - a*c) / ( Math.pow(a,2) + Math.pow(b,2) );\r\n            var closestY = (a * (-b*x + a*y) - b*c) / ( Math.pow(a,2) + Math.pow(b,2) );\r\n\r\n            var r = ( d <= radius && endX>=closestX && closestX>=startX && endY>=closestY && closestY>=startY ) //the projection of the point falls INSIDE of the segment\r\n                || this.startPoint.near(x,y,radius) || this.endPoint.near(x,y,radius); //the projection of the point falls OUTSIDE of the segment \r\n\r\n            return  r;\r\n\r\n        },\r\n\r\n        /**we need to create a new array each time, or we will affect the actual shape*/\r\n        getPoints:function(){\r\n            var points = [];\r\n            points.push(this.startPoint);\r\n            points.push(this.endPoint);\r\n            return points;\r\n        },\r\n        \r\n        /**Return the {Point} corresponding the t certain t value\r\n         * @param {Number} t the value of parameter t, where t in [0,1], t is like a percent*/\r\n        getPoint: function(t){\r\n            var Xp = t * (this.endPoint.x - this.startPoint.x) + this.startPoint.x;\r\n            var Yp = t * (this.endPoint.y - this.startPoint.y) + this.startPoint.y;\r\n            \r\n            return new Point(Xp, Yp);\r\n        },    \r\n        \r\n        // /**\r\n        //  * Returns the middle of the line\r\n        //  * @return {Point} the middle point\r\n        //  * */\r\n        // getMiddle : function(){\r\n        //     return Util.getMiddle(this.startPoint, this.endPoint);\r\n        // },\r\n        \r\n        \r\n        // getLength : function(){\r\n        //     return Util.getLength(this.startPoint, this.endPoint);\r\n        // },\r\n\r\n        // /**\r\n        //  *Get bounds for this line\r\n        //  *@author Alex Gheorghiu <alex@scriptoid.com>\r\n        //  **/\r\n        // getBounds:function(){\r\n        //     return Util.getBounds(this.getPoints());\r\n        // },\r\n\r\n        /**String representation*/\r\n        toString:function(){\r\n            return 'line(' + this.startPoint + ',' + this.endPoint + ')';\r\n        }\r\n    }\r\n    module.exports = Line;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/LineStruct.js\n ** module id = 69\n ** module chunks = 0\n **/","/**\r\n * Network model\r\n *\r\n */\r\n\r\n\r\n    var Model = require('../../../fish-topo-core/lib/Model');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var NetworkModel = Model.extend({\r\n        /**\r\n         * @type {Object}\r\n         * @protected\r\n         */\r\n        defaultOption: {\r\n        \tresourceId: \"\",  //资源ID\r\n            properties: {\r\n                type: -1,  //类型\r\n                name: \"\", //名称                \r\n                notes: \"\",  //备注\r\n                //no: \"\" \r\n                extProperties: {\r\n                },  //扩展属性\r\n                bounds: {\r\n                    upperLeft: {x: 0, y: 0},  //左上角坐标\r\n                    lowerRight: {x: 0, y: 0} //右下角坐标\r\n                }\r\n            },\r\n            stencil: {type: \"NextworkNode\"},\r\n            showTip: false\r\n        },\r\n\r\n        init: function (option, parentModel, extraOpt) {\r\n            zrUtil.merge(option, this.getDefaultOption());\r\n        },\r\n\r\n        getDefaultOption: function () {\r\n            if (!this.hasOwnProperty('__defaultOption')) {\r\n                var optList = [];\r\n                var Class = this.constructor;\r\n                while (Class) {\r\n                    var opt = Class.prototype.defaultOption;\r\n                    opt && optList.push(opt);\r\n                    Class = Class.superClass;\r\n                }\r\n\r\n                var defaultOption = {};\r\n                for (var i = optList.length - 1; i >= 0; i--) {\r\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n                }\r\n                this.__defaultOption = defaultOption;\r\n            }\r\n            return this.__defaultOption;                \r\n        }\r\n\r\n    });\r\n    module.exports = NetworkModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/model/NetworkModel.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\r\n * @module model/Model\r\n */\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var clazzUtil = require('./clazz');\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} option\r\n     * @param {module:model/Model} parentModel\r\n     * @param {Object} extraOpt\r\n     */\r\n    function Model(option, parentModel,  extraOpt) {\r\n        /**\r\n         * @type {module:model/Model}\r\n         * @readOnly\r\n         */\r\n        this.parentModel = parentModel;\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @protected\r\n         */\r\n        this.option = option;\r\n\r\n        // Simple optimization\r\n        if (this.init) {\r\n            if (arguments.length <= 3) {\r\n                this.init(option, parentModel,  extraOpt);\r\n            }\r\n            else {\r\n                this.init.apply(this, arguments);\r\n            }\r\n        }\r\n    }\r\n\r\n    Model.prototype = {\r\n\r\n        constructor: Model,\r\n\r\n        /**\r\n         * Model 的初始化函数\r\n         * @param {Object} option\r\n         */\r\n        init: function (option, parentModel, extraOpt) {\r\n            zrUtil.merge(option, this.getDefaultOption());\r\n        },\r\n\r\n        getDefaultOption: function () {\r\n            if (!this.hasOwnProperty('__defaultOption')) {\r\n                var optList = [];\r\n                var Class = this.constructor;\r\n                while (Class) {\r\n                    var opt = Class.prototype.defaultOption;\r\n                    opt && optList.push(opt);\r\n                    Class = Class.superClass;\r\n                }\r\n\r\n                var defaultOption = {};\r\n                for (var i = optList.length - 1; i >= 0; i--) {\r\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n                }\r\n                this.__defaultOption = defaultOption;\r\n            }\r\n            return this.__defaultOption;\r\n        },\r\n\r\n        /**\r\n         * 从新的 Option merge\r\n         */\r\n        mergeOption: function (option) {\r\n            zrUtil.merge(this.option, option, true);\r\n        },\r\n\r\n        /**\r\n         * @param {string} path\r\n         * @param {boolean} [ignoreParent=false]\r\n         * @return {*}\r\n         */\r\n        get: function (path, ignoreParent) {\r\n            if (!path) {\r\n                return this.option;\r\n            }\r\n\r\n            if (typeof path === 'string') {\r\n                path = path.split('.');\r\n            }\r\n\r\n            var obj = this.option;\r\n            var parentModel = this.parentModel;\r\n            for (var i = 0; i < path.length; i++) {\r\n                // obj could be number/string/... (like 0)\r\n                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;\r\n                if (obj == null) {\r\n                    break;\r\n                }\r\n            }\r\n            if (obj == null && parentModel && !ignoreParent) {\r\n                obj = parentModel.get(path);\r\n            }\r\n            return obj;\r\n        },\r\n\r\n        set: function (path, value) {\r\n            var obj = this.option;\r\n\r\n            if (path.indexOf(\".\") == -1) {\r\n                obj[path] = value;\r\n            } else {\r\n                var fieldArray  = path.split('.');\r\n                var n = fieldArray.length;\r\n                var currentRef = obj;\r\n                var fieldName;\r\n\r\n                for (var i = 0; i < n - 1; i++) {\r\n                    fieldName = fieldArray[i];\r\n                    if(currentRef[fieldName] == null) {\r\n                        currentRef[fieldName] = {};\r\n                    }\r\n                    currentRef = currentRef[fieldName];\r\n                }\r\n                fieldName = fieldArray[n-1];\r\n                currentRef[fieldName] = value;\r\n            }         \r\n        },\r\n\r\n        /**\r\n         * @param {string} key\r\n         * @param {boolean} [ignoreParent=false]\r\n         * @return {*}\r\n         */\r\n        getShallow: function (key, ignoreParent) {\r\n            var option = this.option;\r\n            var val = option && option[key];\r\n            var parentModel = this.parentModel;\r\n            if (val == null && parentModel && !ignoreParent) {\r\n                val = parentModel.getShallow(key);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * @param {string} path\r\n         * @param {module:model/Model} [parentModel]\r\n         * @return {module:model/Model}\r\n         */\r\n        getModel: function (path, parentModel) {\r\n            var obj = this.get(path, true);\r\n            var thisParentModel = this.parentModel;\r\n            var model = new Model(\r\n                obj, parentModel || (thisParentModel && thisParentModel.getModel(path))\r\n            );\r\n            return model;\r\n        },\r\n\r\n        /**\r\n         * If model has option\r\n         */\r\n        isEmpty: function () {\r\n            return this.option == null;\r\n        },\r\n\r\n        restoreData: function () {},\r\n\r\n        // Pending\r\n        clone: function () {\r\n            var Ctor = this.constructor;\r\n            return new Ctor(zrUtil.clone(this.option));\r\n        }\r\n    };\r\n\r\n    // Enable Model.extend.\r\n    clazzUtil.enableClassExtend(Model);\r\n\r\n    module.exports = Model;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/Model.js\n ** module id = 71\n ** module chunks = 0\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var clazz = {};\r\n\r\n    var TYPE_DELIMITER = '.';\r\n    var IS_CONTAINER = '___FT__COMPONENT__CONTAINER___';\r\n    /**\r\n     * @public\r\n     */\r\n    var parseClassType = clazz.parseClassType = function (componentType) {\r\n        var ret = {main: '', sub: ''};\r\n        if (componentType) {\r\n            componentType = componentType.split(TYPE_DELIMITER);\r\n            ret.main = componentType[0] || '';\r\n            ret.sub = componentType[1] || '';\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * @public  相比 直接用zrUtil.inherits 好处是  可以直接调用父类的构造函数\r\n     */\r\n    clazz.enableClassExtend = function (RootClass, preConstruct) {\r\n        RootClass.extend = function (proto) {\r\n            var ExtendedClass = function () {\r\n                preConstruct && preConstruct.apply(this, arguments);\r\n                RootClass.apply(this, arguments);\r\n            };\r\n\r\n            zrUtil.extend(ExtendedClass.prototype, proto);\r\n\r\n            ExtendedClass.extend = this.extend;\r\n            ExtendedClass.superCall = superCall;\r\n            ExtendedClass.superApply = superApply;\r\n            zrUtil.inherits(ExtendedClass, this);\r\n            ExtendedClass.superClass = this;\r\n\r\n            return ExtendedClass;\r\n        };\r\n    };\r\n\r\n    // superCall should have class info, which can not be fetch from 'this'.\r\n    // Consider this case:\r\n    // class A has method f,\r\n    // class B inherits class A, overrides method f, f call superApply('f'),\r\n    // class C inherits class B, do not overrides method f,\r\n    // then when method of class C is called, dead loop occured.\r\n    function superCall(context, methodName) {\r\n        var args = zrUtil.slice(arguments, 2);\r\n        return this.superClass.prototype[methodName].apply(context, args);\r\n    }\r\n\r\n    function superApply(context, methodName, args) {\r\n        return this.superClass.prototype[methodName].apply(context, args);\r\n    }\r\n\r\n    /**\r\n     * @param {Object} entity\r\n     * @param {Object} options\r\n     * @param {boolean} [options.registerWhenExtend]\r\n     * @public\r\n     */\r\n    clazz.enableClassManagement = function (entity, options) {\r\n        options = options || {};\r\n\r\n        /**\r\n         * Component model classes\r\n         * key: componentType,\r\n         * value:\r\n         *     componentClass, when componentType is 'xxx'\r\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\r\n         * @type {Object}\r\n         */\r\n        var storage = {};\r\n\r\n        entity.registerClass = function (Clazz, componentType) {\r\n            if (componentType) {\r\n                componentType = parseClassType(componentType);\r\n\r\n                if (!componentType.sub) {\r\n                    if (storage[componentType.main]) {\r\n                        //已经注册过了，直接返回\r\n                        return; \r\n                    }\r\n                    storage[componentType.main] = Clazz;\r\n                }\r\n                else if (componentType.sub !== IS_CONTAINER) {\r\n                    var container = makeContainer(componentType);\r\n                    container[componentType.sub] = Clazz;\r\n                }\r\n            }\r\n            return Clazz;\r\n        };\r\n\r\n        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {\r\n            var Clazz = storage[componentTypeMain];\r\n\r\n            if (Clazz && Clazz[IS_CONTAINER]) {\r\n                Clazz = subType ? Clazz[subType] : null;\r\n            }\r\n\r\n            if (throwWhenNotFound && !Clazz) {\r\n                throw new Error(\r\n                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'\r\n                );\r\n            }\r\n\r\n            return Clazz;\r\n        };\r\n\r\n        entity.getClassesByMainType = function (componentType) {\r\n            componentType = parseClassType(componentType);\r\n\r\n            var result = [];\r\n            var obj = storage[componentType.main];\r\n\r\n            if (obj && obj[IS_CONTAINER]) {\r\n                zrUtil.each(obj, function (o, type) {\r\n                    type !== IS_CONTAINER && result.push(o);\r\n                });\r\n            }\r\n            else {\r\n                result.push(obj);\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        entity.hasClass = function (componentType) {\r\n            // Just consider componentType.main.\r\n            componentType = parseClassType(componentType);\r\n            return !!storage[componentType.main];\r\n        };\r\n\r\n        /**\r\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\r\n         */\r\n        entity.getAllClassMainTypes = function () {\r\n            var types = [];\r\n            zrUtil.each(storage, function (obj, type) {\r\n                types.push(type);\r\n            });\r\n            return types;\r\n        };\r\n\r\n        /**\r\n         * If a main type is container and has sub types\r\n         * @param  {string}  mainType\r\n         * @return {boolean}\r\n         */\r\n        entity.hasSubTypes = function (componentType) {\r\n            componentType = parseClassType(componentType);\r\n            var obj = storage[componentType.main];\r\n            return obj && obj[IS_CONTAINER];\r\n        };\r\n\r\n        entity.parseClassType = parseClassType;\r\n\r\n        function makeContainer(componentType) {\r\n            var container = storage[componentType.main];\r\n            if (!container || !container[IS_CONTAINER]) {\r\n                container = storage[componentType.main] = {};\r\n                container[IS_CONTAINER] = true;\r\n            }\r\n            return container;\r\n        }\r\n\r\n        if (options.registerWhenExtend) {\r\n            var originalExtend = entity.extend;\r\n            if (originalExtend) {\r\n                entity.extend = function (proto) {\r\n                    var ExtendedClass = originalExtend.call(this, proto);\r\n                    return entity.registerClass(ExtendedClass, proto.type);\r\n                };\r\n            }\r\n        }\r\n\r\n        return entity;\r\n    };\r\n\r\n    module.exports = clazz;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/clazz.js\n ** module id = 72\n ** module chunks = 0\n **/","\r\n\tvar Node = require(\"../../../fish-topo-core/lib/Node\");\r\n\tvar zrUtil = require('zrender/lib/core/util');\r\n\tvar graphic = require(\"../../../fish-topo-core/lib/graphic.js\");\r\n\tvar clazzUtil = require('../../../fish-topo-core/lib/clazz');\r\n\t\r\n\t//创建Node类 所有形状都继承Node  包括fromJSON toJSON\r\n\tfunction NetworkNode(model, api) {\r\n\t\tNode.call(this);\r\n\t\tthis.model = model;\t\t\r\n\t\tthis.options =\r\n\t\t{\r\n\t\t\toutline: {\r\n\t\t\t\tenable: true, // 是否有外框\r\n\t\t\t\tradius: true, // 是否圆角\r\n\t\t\t\tinitVisible: false\r\n\t\t\t},\r\n\t\t\ttext: {\r\n\t\t\t\tcolor: '#000000', // 文本颜色\r\n\t\t\t\tlineHeight: 24 // 文本行高\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.nextworkInfo = {type: -1, name:\"NextworkNode\" };    //节点信息\r\n\t\tthis.portNodeList = [];\r\n\t\tthis.cardNodeList = [];\r\n\t\tthis.initEvent(api);\r\n\t};\r\n\r\n    NetworkNode.prototype.initEvent = function(api) {\r\n        var that = this;\r\n        var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];//'click', 'dblclick', 'mouseover', 'mouseout'\r\n        zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n            that.on(eveName, function (e) {\r\n\t            var params = {};\r\n\t            params.event = e;\r\n\t            params.type = eveName;\r\n\t            params.model = that.model\r\n\t            api.trigger(eveName, params); \r\n            }, this);\r\n        }, this);\r\n    };\t\r\n\r\n\tNetworkNode.prototype.render = function() {\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * drawText\r\n\t * @description 画一个文本\r\n\t * @param {string} content\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {string} color\r\n\t */\r\n\tNetworkNode.prototype.drawText = function (content, x, y, color) {\r\n\t\tvar text = new graphic.Text({\r\n\t\t\tstyle: {\r\n\t\t\t\ttext: content,\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y + 6,\r\n\t\t\t\tcolor: color ? color : this.options.text.color,\r\n\t\t\t\ttextFont: '12px Microsoft YaHei'\r\n\t\t\t},\r\n\t\t\tzlevel: 20\r\n\t\t});\r\n\t\treturn {\r\n\t\t\ttext: text,\r\n\t\t\trect: text.getBoundingRect()\r\n\t\t};\r\n\t};\t\r\n\r\n\r\n\tNetworkNode.prototype.toJSON = function() {\r\n\t\tthis.model.set(\"resourceId\", this.resourceId);\r\n\t\tthis.model.set(\"properties.type\", this.nextworkInfo.type);\r\n\t\tthis.model.set(\"stencil.type\", this.nextworkInfo.name);\r\n\t\tthis.model.set(\"bounds.upperLeft.x\", this.position[0]);\r\n\t\tthis.model.set(\"bounds.upperLeft.y\", this.position[1]);\r\n\t\tthis.model.set(\"bounds.lowerRight.x\", this.position[0] + this.getBoundingRect().width);\r\n\t\tthis.model.set(\"bounds.lowerRight.y\", this.position[1] + this.getBoundingRect().height);\r\n\t\treturn this.model.option;\r\n\t};\r\n\tzrUtil.inherits(NetworkNode,Node);\r\n\r\n\tclazzUtil.enableClassManagement(NetworkNode, {\r\n        registerWhenExtend: true\r\n    });\r\n\tmodule.exports = NetworkNode;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/NetworkNode.js\n ** module id = 73\n ** module chunks = 0\n **/","\r\n    var graphic = require('./graphic');\r\n    var util = require(\"./util.js\")\r\n    //创建Node类 所有形状都继承Node  包括fromJSON toJSON\r\n    function Node() {\r\n        this.resourceId = util.getUUID(); // 生成节点ID\r\n        graphic.Group.call(this);\r\n    };\r\n\r\n    /**\r\n     * 由父类实现\r\n     * @return {[type]} [description]\r\n     */\r\n    Node.prototype.render = function() {};\r\n\r\n    /**\r\n     * 由父类实现\r\n     * @param  {[type]} json [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    Node.prototype.getRect = function(json) {};\r\n\r\n    /**\r\n     * drawText\r\n     * @description 画一个文本\r\n     * @param {string} color\r\n     */\r\n    Node.prototype.drawText = function(name,color) {\r\n        var textName = this.bpmnInfo.name;\r\n        if(name != null){\r\n            textName = name;\r\n        }\r\n        var text = new graphic.Text({\r\n            style: {\r\n                text: textName,\r\n                color: color ? color : this.options.text.color,\r\n                textFont: '12px Microsoft YaHei'\r\n            },\r\n            zlevel: 20,\r\n        });\r\n        //文字绘制的位置  \r\n        //x = 中心点.x - 起始位置.x - 文字宽度的一半\r\n        var x = this.getRect().x - this.position[0] - text.getBoundingRect().width / 2;\r\n        //y = 中心点.y - 起始位置.y + 节点高度的一半 + 偏移值（6）\r\n        var y = this.getRect().y - this.position[1] + this.getBoundingRect().height / 2 + text.getBoundingRect().height + 6;\r\n        text.attr(\"style\", { x: x, y: y });\r\n        return {\r\n            text: text,\r\n            rect: text.getBoundingRect()\r\n        };\r\n    };\r\n    /**\r\n     * refreshText\r\n     * @description 刷新文本\r\n     */\r\n    Node.prototype.refreshText = function() {\r\n        var text = this.childOfName(\"Title\");\r\n        var x = this.getRect().x - this.position[0] - text.getBoundingRect().width / 2;\r\n        var y = this.getRect().y - this.position[1] + this.getBoundingRect().height / 2 + text.getBoundingRect().height + 6;\r\n        text.attr(\"style\", { x: x, y: y });\r\n    };\r\n    /**\r\n     * 由父类实现\r\n     * @return {[type]} [description]\r\n     */\r\n    Node.prototype.toJSON = function() {};\r\n\r\n    graphic.Util.inherits(Node, graphic.Group);\r\n    module.exports = Node;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/Node.js\n ** module id = 74\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    \r\n    function RackNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"RackNode\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    RackNode.prototype.render = function(model,api) {\r\n        this.model = model;\r\n        var _UData = model.get(\"UData\");\r\n        var _showTip = model.get(\"showTip\");\r\n        //title\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: 80,\r\n                y: -30,\r\n                text: '42U',\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '18px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n  \r\n        var rectOut = new graphic.Rect({\r\n            shape: {\r\n                x: 0,\r\n                y: 0,\r\n                width: model.get(\"width\"),\r\n                height: model.get(\"height\")\r\n            },\r\n            style: {\r\n                fill: '#FFFFFF',\r\n                stroke: '#B3B3B3',\r\n                lineWidth: '1'//,\r\n            }          \r\n        });        \r\n        this.add(rectOut);\r\n        var rectIn = new graphic.Rect({\r\n            shape: {\r\n                x: 5,\r\n                y: 5,\r\n                width: model.get(\"width\") - 10,\r\n                height: model.get(\"height\") - 10\r\n            },\r\n            style: {\r\n                fill: '#FFFFFF',\r\n                stroke: '#B3B3B3',\r\n                lineWidth: '1'//,\r\n            }          \r\n        });        \r\n        this.add(rectIn);\r\n\r\n        var j = 42;\r\n        while( j > 0 ) { \r\n            var _floorNum = 1;\r\n            var _isnullFloor = false;\r\n            for ( var f = 0; f < _UData.length; f++ ) {\r\n                if ( j === parseInt(_UData[f].floor) ) {\r\n                    _floorNum = parseInt(_UData[f].height);\r\n                    var modelObj = {\r\n                        resourceId: util.getUUID(),  \r\n                        properties: {\r\n                            type: \"Server\",         \r\n                            extProperties: {\r\n                            }  \r\n                        },\r\n                        bounds: {\r\n                            upperLeft: {x: 5, y: 5 + ((42 - j ) * 15)}  \r\n                        },\r\n                        stencil: {type: _UData[f].type + \"Node\"}\r\n                    };\r\n                    modelObj.height =  15 * _floorNum - 3;\r\n                    modelObj.width = model.get(\"width\") - 10;\r\n                    modelObj.parmDate = _UData[f];\r\n                    modelObj.floor = _UData[f].floor;\r\n                    modelObj.floorNum = _floorNum;\r\n                    if( _UData[f].column !== undefined) {\r\n                        modelObj.column = _UData[f].column;\r\n                    }\r\n                    //判断是否band悬浮事件\r\n                    modelObj.showTip = _showTip;\r\n                    var serverModel = new NetworkModel(modelObj);\r\n                    this.addNodeByModel(serverModel, api);\r\n\r\n                    var rectTray = new graphic.Rect({\r\n                        shape: {\r\n                            x: 5,\r\n                            y: 5 + ((42 - j ) * 15) + (15 * _floorNum) - 3 ,\r\n                            width: model.get(\"width\") - 10,\r\n                            height: 3\r\n                        },\r\n                        style: {\r\n                            fill: '#FFFFFF',\r\n                            stroke: '#B3B3B3',\r\n                            lineWidth: '1'//,\r\n                        }          \r\n                    });        \r\n                    this.add(rectTray);\r\n                    _isnullFloor = true;\r\n                }\r\n            }\r\n            if( !_isnullFloor ) {\r\n                  var rectTray = new graphic.Rect({\r\n                    shape: {\r\n                        x: 5,\r\n                        y: 5 + ((42 - j ) * 15) + 12,\r\n                        width: model.get(\"width\") - 10,\r\n                        height: 3\r\n                    },\r\n                    style: {\r\n                        fill: '#FFFFFF',\r\n                        stroke: '#B3B3B3',\r\n                        lineWidth: '1'//,\r\n                    }          \r\n                });        \r\n                this.add(rectTray);\r\n\r\n            }\r\n            j = j - _floorNum;\r\n        }\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    RackNode.prototype.addNodeByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this.api);\r\n            this.add(node);\r\n            var MOUSE_EVENT_NAMES = ['click'];\r\n            if ( p_model.get(\"showTip\") ) {\r\n                MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];\r\n            }\r\n            //绑定悬浮事件\r\n            zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n                node.on(eveName, function (e) {\r\n                    if ( eveName === \"mouseover\") {\r\n                        var params = {};\r\n                        params.event = e;\r\n                        params.x = node.parent.position[0] + e.target.position[0];\r\n                        params.y = node.parent.position[1] + e.target.position[1] + (e.target.style.height / 2);\r\n                        params.width = 150;\r\n                        params.height = 170;\r\n                        params.eWidth = e.target.style.width + 5 ;\r\n                        params.parmDate = e.target.parmDate;\r\n                        if ( api.getHeight() - params.y > params.height ) {\r\n                            params.layout = \"down\";\r\n                        } else {\r\n                            params.layout = \"up\";\r\n                        }\r\n                        api.showTipWindow(params);\r\n                    } else {\r\n                        api.hideTipWindow(e.event.target);\r\n                    }    \r\n                }, this);\r\n            }, this);\r\n\r\n        }\r\n    };\r\n\r\n    // RackNode.prototype.toJSON = function() {\r\n    //     // body...\r\n    //     return this.model.option;\r\n    // };\r\n    zrUtil.inherits(RackNode, NetworkNode);\r\n    module.exports = RackNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/rack/RackNode.js\n ** module id = 75\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"./node/NetworkNode.js\");\r\n    var NetworkModel = require(\"./model/NetworkModel.js\");\r\n    var RackNode = require(\"./node/rack/RackNode\");\r\n    var TipWindowNode = require(\"./node/TipWindowNode\");\r\n    var ServerNode = require(\"./node/rack/ServerNode\");\r\n    var SwitchNode = require(\"./node/rack/SwitchNode\");\r\n\r\n    var PointNode = require(\"./node/topo/PointNode\");\r\n    var CardNode =  require(\"./node/topo/CardNode\");\r\n    var TopoDrawNode = require(\"./node/topo/TopoDrawNode\");\r\n    var ServerR630Node = require(\"./node/topo/ServerR630Node\");\r\n    var ServerR730Node = require(\"./node/topo/ServerR730Node\");\r\n    var ServerX3550Node = require(\"./node/topo/ServerX3550Node\");\r\n    var ServerX3650Node = require(\"./node/topo/ServerX3650Node\");\r\n    var ServerRD350Node = require(\"./node/topo/ServerRD350Node\");\r\n    var ServerRD650Node = require(\"./node/topo/ServerRD650Node\");\r\n    var SwitchTopoNode = require(\"./node/topo/SwitchTopoNode\");\r\n    var SwitchHalfIBNode = require(\"./node/topo/SwitchHalfIBNode\");\r\n    var SwitchFullIBNode = require(\"./node/topo/SwitchFullIBNode\");\r\n    var SwitchGMNode = require(\"./node/topo/SwitchGMNode\");\r\n    var SwitchKMNode = require(\"./node/topo/SwitchKMNode\");\r\n\r\n    var ClusterDrawNode = require(\"./node/cluster/ClusterDrawNode\");\r\n    var ClusterDatabaseNode = require(\"./node/cluster/ClusterDatabaseNode\");\r\n    var ClusterAsmNode = require(\"./node/cluster/ClusterAsmNode\");\r\n    var ClusterAsmCellNode = require(\"./node/cluster/ClusterAsmCellNode\");\r\n    var ClusterIseNode = require(\"./node/cluster/ClusterIseNode\");\r\n    var ClusterIseCellNode =  require(\"./node/cluster/ClusterIseCellNode\");\r\n \r\n    /**\r\n     * 根据结点数组 导出JSON格式的数据\r\n     *\r\n     * @param {Array} nodes 结点数组\r\n     * @return {JSON} JSON格式的数据\r\n     */\r\n    function exportJson(networkModel, nodes) {\r\n        var jsonArr = [];\r\n        for(var i = 0; i < nodes.length;i++){\r\n            var node = nodes[i];\r\n            if( node && node.toJSON) {\r\n                jsonArr.push(node.toJSON());\r\n            }\r\n        }\r\n        networkModel.set(\"childShapes\", jsonArr)  \r\n\r\n        return networkModel.option;\r\n    };\r\n\r\n    /**\r\n     * 根据 JSON 生成节点\r\n     * @param  {[type]} fishTopoBpmn [description]\r\n     * @param  {[type]} json         [description]\r\n     * @return {[type]}              [description]\r\n     */\r\n    function fromJson(fishTopoNetwork, json) {\r\n        // 1.清空画布\r\n        fishTopoNetwork.clear();\r\n        if ( json.type === \"rack\" ) {\r\n            var _x = 50;\r\n            for(var i = 0; i < json.data.length; i++) {\r\n                var modelObj = {\r\n                    resourceId: util.getUUID(),\r\n                    properties: {\r\n                        type: json.data[i].rack\r\n                    },\r\n                    bounds: {\r\n                        upperLeft: {x: _x, y: 50} \r\n                    },\r\n                    stencil: {type: \"RackNode\"}\r\n                };\r\n                modelObj.height =  json.data[i].height != undefined ? json.data[i].height: 635;\r\n                modelObj.width = json.data[i].width != undefined ? json.data[i].width: 200;\r\n                modelObj.UData = json.data[i].UData;\r\n                modelObj.showTip = json.showTip;\r\n                var rackModel = new NetworkModel(modelObj);\r\n                fishTopoNetwork.addNodeByModel(rackModel);\r\n                _x += 250;\r\n           }\r\n        } else if( json.type === \"topo\" ) {\r\n            var modelObj = {\r\n                resourceId: util.getUUID(),\r\n                bounds: {\r\n                    upperLeft: {x: 0, y: 0} \r\n                },\r\n                stencil: {type: \"TopoDrawNode\"}\r\n            };\r\n            modelObj.height =  fishTopoNetwork.height;\r\n            modelObj.width = fishTopoNetwork.width;\r\n            modelObj.nodeList = json.data;\r\n            modelObj.showTip = json.showTip;\r\n            var topoModel = new NetworkModel(modelObj);\r\n            fishTopoNetwork.addNodeByModel(topoModel);\r\n        } else if( json.type === \"cluster\" ) {\r\n            var modelObj = {\r\n                resourceId: util.getUUID(),\r\n                bounds: {\r\n                    upperLeft: {x: 0, y: 0} \r\n                },\r\n                stencil: {type: \"ClusterDrawNode\"}\r\n            };\r\n            modelObj.height =  fishTopoNetwork.height;\r\n            modelObj.width = fishTopoNetwork.width;\r\n            modelObj.nodeList = json.data;\r\n            modelObj.showTip = json.showTip;\r\n            var clusterModel = new NetworkModel(modelObj);\r\n            fishTopoNetwork.addNodeByModel(clusterModel);\r\n        }\r\n        \r\n    }\r\n\r\n    function registerNetworkNode () {\r\n        NetworkNode.registerClass(RackNode, \"RackNode\");\r\n        NetworkNode.registerClass(TipWindowNode, \"TipWindowNode\");\r\n        NetworkNode.registerClass(ServerNode, \"ServerNode\");\r\n        NetworkNode.registerClass(SwitchNode, \"SwitchNode\");\r\n\r\n        NetworkNode.registerClass(TopoDrawNode, \"TopoDrawNode\");\r\n        NetworkNode.registerClass(ServerR630Node, \"ServerR630Node\");\r\n        NetworkNode.registerClass(ServerR730Node, \"ServerR730Node\");\r\n        NetworkNode.registerClass(PointNode, \"PointNode\"); \r\n        NetworkNode.registerClass(CardNode, \"CardNode\"); \r\n        NetworkNode.registerClass(ServerX3550Node, \"ServerX3550Node\"); \r\n        NetworkNode.registerClass(ServerX3650Node, \"ServerX3650Node\"); \r\n        NetworkNode.registerClass(ServerRD350Node, \"ServerRD350Node\");\r\n        NetworkNode.registerClass(ServerRD650Node, \"ServerRD650Node\");\r\n        NetworkNode.registerClass(SwitchFullIBNode, \"SwitchFullIBNode\");\r\n        NetworkNode.registerClass(SwitchHalfIBNode, \"SwitchHalfIBNode\");\r\n        NetworkNode.registerClass(SwitchKMNode, \"SwitchKMNode\");\r\n        NetworkNode.registerClass(SwitchGMNode, \"SwitchGMNode\"); \r\n        \r\n        NetworkNode.registerClass(ClusterDrawNode, \"ClusterDrawNode\"); \r\n        NetworkNode.registerClass(ClusterDatabaseNode, \"ClusterDatabaseNode\"); \r\n        NetworkNode.registerClass(ClusterAsmNode, \"ClusterAsmNode\");  \r\n        NetworkNode.registerClass(ClusterAsmCellNode, \"ClusterAsmCellNode\"); \r\n        NetworkNode.registerClass(ClusterIseNode, \"ClusterIseNode\"); \r\n        NetworkNode.registerClass(ClusterIseCellNode, \"ClusterIseCellNode\"); \r\n                     \r\n    }   \r\n\r\n    var NextWorkUtil = {\r\n        exportJson: exportJson,\r\n        fromJson: fromJson,\r\n        registerNetworkNode: registerNetworkNode\r\n    };\r\n    module.exports = NextWorkUtil;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/NetworkUtil.js\n ** module id = 76\n ** module chunks = 0\n **/","\r\n\tvar Node = require(\"../../../fish-topo-core/lib/Node\");\r\n\tvar zrUtil = require('zrender/lib/core/util');\r\n\tvar graphic = require(\"../../../fish-topo-core/lib/graphic.js\");\r\n\tvar clazzUtil = require('../../../fish-topo-core/lib/clazz');\r\n\t\r\n\t//创建Node类 所有形状都继承Node  包括fromJSON toJSON\r\n\tfunction TipWindowNode(model, api) {\r\n\t\tNode.call(this);\r\n\t\tthis.model = model;\t\t\r\n\t\tthis.nextworkInfo = {type: -1, name:\"TipWindowNodeDiagram\" };    //节点信息\r\n\t\tthis.initEvent(api);\r\n        this.render(model, api);\r\n\t};\r\n\r\n    TipWindowNode.prototype.initEvent = function(api) {\r\n        // var that = this;\r\n        // var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];//'click', 'dblclick', 'mouseover', 'mouseout'\r\n        // zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n        //     that.on(eveName, function (e) {\r\n\t       //      var params = {};\r\n\t       //      params.event = e;\r\n\t       //      params.type = eveName;\r\n\t       //      params.model = that.model\r\n\t       //      api.trigger(eveName, params); \r\n        //     }, this);\r\n        // }, this);\r\n    };\t\r\n\r\n\tTipWindowNode.prototype.render = function(model, api) {\r\n\t\tvar _x = model.x;\r\n        var _y = model.y;\r\n        var _xWidth = model.eWidth;\r\n        var _width = model.width;\r\n        var _height = model.height;\r\n\t\tvar points = [\r\n\t\t\t\t[_x + _xWidth + 20, _y],\r\n\t\t\t\t[_x + _xWidth, _y],\r\n\t\t\t\t[_x + _xWidth + 20, _y + 15],\t\r\n\t\t\t\t[_x + _xWidth + 20, _y + _height],\r\n\t\t\t\t[_x + _xWidth + _width, _y + _height],\r\n\t\t\t\t[_x + _xWidth + _width, _y]\r\n\t\t\t];\r\n\t\tif ( model.layout != undefined && model.layout === \"up\" ) {\r\n\t\t\tpoints = [\r\n\t\t\t\t[_x + _xWidth + 20, _y],\r\n\t\t\t\t[_x + _xWidth, _y],\r\n\t\t\t\t[_x + _xWidth + 20, _y - 15],\t\r\n\t\t\t\t[_x + _xWidth + 20, _y - _height],\r\n\t\t\t\t[_x + _xWidth + _width, _y - _height],\r\n\t\t\t\t[_x + _xWidth + _width, _y]\r\n\t\t\t];\r\n\t\t} \r\n\r\n\t\tif ( model.layout != undefined && model.layout === \"left\" ) {\r\n\t\t\tpoints = [\r\n\t\t\t\t[_x - 2 * _width - 10, _y],\r\n\t\t\t\t[_x - 2 * _width + 10, _y],\r\n\t\t\t\t[_x - 2 * _width - 10, _y + 15],\t\r\n\t\t\t\t[_x - 2 * _width - 10, _y + _height],\r\n\t\t\t\t[_x - 2 * _width - _width, _y + _height],\r\n\t\t\t\t[_x - 2 * _width - _width, _y]\r\n\t\t\t];\r\n\t\t}\t\r\n\t\tvar _tipContext = \"请查询数据\";\r\n\t\tif ( model.parmDate !== undefined ) {\r\n\t\t\t_tipContext = 'status: online \\n CPU:  \\n MEM:  \\n Ip address: \\n floor: ' + model.parmDate.floor +  '\\n height: ' + model.parmDate.height;\r\n\t\t\tif ( model.parmDate.tipContext !== undefined ) {\r\n\t\t\t\t_tipContext = model.parmDate.tipContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar tip = new graphic.Polygon({\r\n            shape: {\r\n                points: points\r\n            },\r\n            style: {\r\n\t\t\t\tstroke: 'rgba(20, 20, 20, 0.2)',\r\n\t\t\t\tfill: 'rgba(20, 20, 20, 0.1)',\r\n\t\t\t\tlineWidth: '1',\r\n\t\t\t\ttext: _tipContext,\r\n\t\t\t\tlineWidth: 3\r\n\t\t\t}        \r\n        });        \r\n        this.add(tip);\r\n\t};\r\n\r\n\tzrUtil.inherits(TipWindowNode, Node);\r\n\r\n\r\n\tmodule.exports = TipWindowNode;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/TipWindowNode.js\n ** module id = 77\n ** module chunks = 0\n **/","\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    function ServerNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.serverInfo = {type: -1, name: \"ServerNode\" };    //\r\n        this.model = model;\r\n        return this.render(model,api);\r\n    };\r\n\r\n    ServerNode.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var rectServer = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR630b.png',\r\n                width: model.get(\"width\"),\r\n                height:  15 * model.get(\"floorNum\") - 3\r\n            },\r\n            draggable: false,\r\n            parmDate: model.get(\"parmDate\")    \r\n        }); \r\n        rectServer.position = [model.get(\"bounds.upperLeft.x\"), model.get(\"bounds.upperLeft.y\")];\r\n        return rectServer;\r\n    };\r\n\r\n    zrUtil.inherits(ServerNode, NetworkNode);\r\n    module.exports = ServerNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/rack/ServerNode.js\n ** module id = 78\n ** module chunks = 0\n **/","\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    function SwitchNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.serverInfo = {type: -1, name: \"SwitchNode\" };    //\r\n        this.model = model;\r\n        return this.render(model,api);\r\n    };\r\n\r\n    SwitchNode.prototype.render = function(model,api) {\r\n        this.model = model;\r\n        var _px = model.get(\"bounds.upperLeft.x\");\r\n        var _py = model.get(\"bounds.upperLeft.y\");\r\n        var _height = model.get(\"height\");\r\n        var _width = model.get(\"width\");\r\n        if(model.get(\"column\") === undefined || model.get(\"column\") === \"all\" ) {\r\n            \r\n        } else {\r\n            _width = model.get(\"width\") / 2 - 5;\r\n            if ( model.get(\"column\") === \"right\" ) {\r\n                 _px = 5 + _width + 5;\r\n            }      \r\n        }\r\n        var rectSwitch = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/IBSwitchFull.png',\r\n                width: _width,\r\n                height:  _height\r\n            },\r\n            draggable: false,\r\n            parmDate : model.get(\"parmDate\")    \r\n            // _parmDate : \"111\"       \r\n        }); \r\n        rectSwitch.position = [ _px, _py]; \r\n        return rectSwitch;\r\n    };\r\n\r\n    zrUtil.inherits(SwitchNode, NetworkNode);\r\n    module.exports = SwitchNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/rack/SwitchNode.js\n ** module id = 79\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    \r\n    function PointNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"PointNode\" };    \r\n        this.model = model;\r\n        this.lineInfo = model.get('lineInfo');\r\n        this.render(model,api);\r\n    };\r\n\r\n    PointNode.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        // this.add(_title);\r\n\r\n        var portNode = new graphic.Rect({\r\n            shape: {\r\n                x: 0,\r\n                y: 0,\r\n                width: model.get(\"width\"),\r\n                height: model.get(\"height\")\r\n            },\r\n            style: {\r\n                fill: '#E2E3D9',\r\n                stroke: '#B3B3B3',\r\n                opacity: 0.1,\r\n                lineWidth: '1'//,\r\n            }          \r\n        });              \r\n        this.add(portNode);\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n   \r\n\r\n    zrUtil.inherits(PointNode, NetworkNode);\r\n    module.exports = PointNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/PointNode.js\n ** module id = 80\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    \r\n    function CardNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"CardNode\" };    \r\n        this.model = model;\r\n        this.lineInfo = model.get('lineInfo');\r\n        this.pointList = [];\r\n        this.render(model,api);\r\n    };\r\n\r\n    CardNode.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _portData = model.get(\"portData\");\r\n        var _type = model.get(\"type\");\r\n        var _direction = model.get(\"direction\");\r\n        var imgUrl = \"\";\r\n        if( _type === \"1\" || _type === \"3\" ) {\r\n            imgUrl = '../../../src/third-party/fish-topo/fish-topo-network/src/images/IB1.jpg';\r\n        }else if ( _type === \"5\" ) {\r\n            imgUrl = '../../../src/third-party/fish-topo/fish-topo-network/src/images/km2.jpg';\r\n        } else if( _type === \"6\" ) {\r\n            imgUrl = '../../../src/third-party/fish-topo/fish-topo-network/src/images/km4.jpg';\r\n        }\r\n\r\n\r\n         var rectServer = new graphic.Image({\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: imgUrl,\r\n                width: model.get(\"width\"),\r\n                height: model.get(\"height\")\r\n            },\r\n            draggable: false,\r\n            invisible: false,\r\n            parmDate: _portData\r\n        }); \r\n        this.add(rectServer);\r\n        rectServer.hide();\r\n\r\n        var _resourcesName = model.get(\"resourcesName\");\r\n        var _resourceNodeType = model.get(\"resourceNodeType\");\r\n        var _No = model.get(\"No\");\r\n        if ( _direction === \"leftRight\" ) {\r\n            var _x = 4;\r\n            var _y = 2;\r\n            var _width = 8;\r\n            var _height = 5; \r\n            if ( _type === \"1\" ||  _type === \"2\" ||  _type === \"3\" ||  _type === \"4\" ) {\r\n                _width = 20;\r\n            }\r\n            for( var i = 0; i < _portData.length; i++ ) {\r\n                var portModel = {};\r\n                portModel = {\r\n                    resourceId: util.getUUID(),  \r\n                    bounds: {\r\n                        upperLeft: {x: _x, y: _y}  \r\n                    },\r\n                    stencil: {type: \"PointNode\"}\r\n                };\r\n                portModel.height = _height;\r\n                portModel.width = _width;\r\n\r\n                var _linInfo = {};\r\n                _linInfo.sourceReource = _resourcesName;\r\n                _linInfo.sourceCardNo = _No;\r\n                _linInfo.sourcePort = i;\r\n                _linInfo.nodetype = _resourceNodeType; \r\n                _linInfo.sourceStatus =  _portData[i].status;        \r\n                _linInfo.targetReource = _portData[i].target.reourceName ;\r\n                _linInfo.targetPort = _portData[i].target.port;\r\n\r\n                portModel.lineInfo = _linInfo;\r\n                var pModel = new NetworkModel(portModel);\r\n                this.addPortByModel(pModel, api);\r\n                 _x = _x + _width + 2;\r\n            }    \r\n        } \r\n        \r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n   CardNode.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, api);\r\n            this.pointList.push(node);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(CardNode, NetworkNode);\r\n    module.exports = CardNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/CardNode.js\n ** module id = 81\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var NetWorkLineNode = require(\"../NetWorkLineNode.js\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var NetWorkLineModel = require(\"../../model/NetWorkLineModel.js\");\r\n\r\n    function TopoDrawNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"TopoDrawNode\" };    \r\n        this.model = model;\r\n        this.portList = [];\r\n        this.render(model,api);\r\n    };\r\n\r\n    TopoDrawNode.prototype.render = function(model, api) {\r\n        var nodeList = model.get(\"nodeList\");\r\n        var serverWidth = 216; //服务器宽度\r\n        var switchWidth = 300; //交换机宽度\r\n        //根据Node数量计算实际画布宽度\r\n        var clentWidth = this.getWidth(nodeList, serverWidth, switchWidth);\r\n        clentWidth = clentWidth > model.get(\"width\") ? clentWidth : model.get(\"width\");\r\n        api.resize(clentWidth, model.get(\"height\"));\r\n\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _startX = 100,\r\n            _textW = 30,\r\n            _startY = 10,\r\n            _textH = 20;\r\n        var textKM = new graphic.Text({\r\n            style: {\r\n                x: _startX,\r\n                y: _startY,\r\n                text: '千兆',\r\n                width: _textW,\r\n                height: _textH,\r\n                fill: '#8F8B8A',\r\n                textFont: '10px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(textKM);\r\n\r\n        var lineKM = new graphic.Line({\r\n            shape: {\r\n                x1 : _startX + _textW,\r\n                y1 : _startY + 10,\r\n                x2 : _startX + _textW + 100,\r\n                y2 : _startY + 10,\r\n                lineWidth : 5,  \r\n                text : 'line'\r\n            },\r\n            style: {\r\n                stroke: '#0704EC',\r\n                lineType : 'solid',// default solid\r\n                fill: null\r\n            }        \r\n        });        \r\n        this.add(lineKM);\r\n\r\n        _startY = _startY + _textH;\r\n        var textGB = new graphic.Text({\r\n            style: {\r\n                x: _startX,\r\n                y: _startY,\r\n                text: '万兆',\r\n                width: _textW,\r\n                height: _textH,\r\n                fill: '#8F8B8A',\r\n                textFont: '10px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(textGB);\r\n\r\n        var lineGB = new graphic.Line({\r\n            shape: {\r\n                x1 : _startX + _textW,\r\n                y1 : _startY + 10 ,\r\n                x2 : _startX + _textW + 100,\r\n                y2 : _startY + 10,\r\n                lineWidth : 5,  \r\n                text : 'line'\r\n            },\r\n            style: {\r\n                stroke: '#070413',\r\n                lineType : 'solid',// default solid\r\n                fill: null\r\n            }        \r\n        });        \r\n        this.add(lineGB);\r\n\r\n        _startY =  _startY + _textH;\r\n        var textIB = new graphic.Text({\r\n            style: {\r\n                x: _startX,\r\n                y: _startY,\r\n                text: 'IB',\r\n                width: _textW,\r\n                height: _textH,\r\n                fill: '#8F8B8A',\r\n                textFont: '10px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(textIB);\r\n\r\n        var lineIB = new graphic.Line({\r\n            shape: {\r\n                x1 : _startX + _textW,\r\n                y1 : _startY + 10,\r\n                x2 : _startX + _textW + 100,\r\n                y2 : _startY + 10,\r\n                lineWidth : 5,  \r\n                text : 'line'\r\n            },\r\n            style: {\r\n                stroke: '#9C8826',\r\n                lineType : 'solid',// default solid\r\n                fill: null\r\n            }        \r\n        });        \r\n        this.add(lineIB);\r\n\r\n        //主线布局\r\n        var lineOut = new graphic.Line({\r\n            shape: {\r\n                x1 : 50,\r\n                y1 : 70,\r\n                x2 : 50,\r\n                y2 : 650,\r\n                text : 'line'\r\n            },\r\n            style: {\r\n                stroke: '#000',\r\n                lineType : 'solid',// default solid\r\n                lineWidth : 3,  \r\n                fill: null\r\n            }        \r\n        });        \r\n        this.add(lineOut);\r\n\r\n        var lineUp = new graphic.Line({\r\n            shape: {\r\n                x1 : 50,\r\n                y1 : 250,\r\n                x2 : clentWidth - 50,\r\n                y2 : 250,\r\n                text : 'line'\r\n            },\r\n            style: {\r\n                stroke: '#000',\r\n                lineType : 'solid',// default solid\r\n                lineWidth : 3,  \r\n                fill: null\r\n            }        \r\n        });        \r\n        this.add(lineUp);\r\n\r\n        var lineDown = new graphic.Line({\r\n            shape: {\r\n                x1 : 50,\r\n                y1 : 450,\r\n                x2 : clentWidth - 50,\r\n                y2 : 450, \r\n                text : 'line'\r\n            },\r\n            style: {\r\n                stroke: '#000',\r\n                lineType : 'solid',// default solid\r\n                lineWidth : 3,  \r\n                fill: null\r\n            }        \r\n        });        \r\n        this.add(lineDown);\r\n\r\n         //循环添加topo图上的节点\r\n        var startComputeX = 70;\r\n        var startStorageX = 110; \r\n        var startSwitchX = 90; \r\n        for ( var i = 0; i < nodeList.length; i++ ) {\r\n            var nodeY = 145;\r\n            var modelObj = {};\r\n            var _typeNode = \"TopoDrawNode\";\r\n            if ( nodeList[i].nodetype === \"1\" ) {\r\n                if (nodeList[i].type  === \"ServerR730\" || nodeList[i].type  === \"ServerX3650\") {\r\n                    nodeY = 125;\r\n                }\r\n                _typeNode = nodeList[i].type + \"Node\";\r\n                modelObj = {\r\n                    resourceId: util.getUUID(),  \r\n                    bounds: {\r\n                        upperLeft: {x: startComputeX, y: nodeY}  \r\n                    },\r\n                    stencil: {type: _typeNode}\r\n                };\r\n                modelObj.width = serverWidth;\r\n                startComputeX += serverWidth + 20;\r\n            } else if (nodeList[i].nodetype === \"2\" ) {           \r\n                nodeY = 550;\r\n                _typeNode = nodeList[i].type + \"Node\";\r\n                modelObj = {\r\n                    resourceId: util.getUUID(),  \r\n                    bounds: {\r\n                        upperLeft: {x: startStorageX, y: nodeY}  \r\n                    },\r\n                    stencil: {type: _typeNode}\r\n                };\r\n                modelObj.width = serverWidth;\r\n                startStorageX += serverWidth + 20;\r\n            } else if (nodeList[i].nodetype === \"3\" ) {\r\n                _typeNode = nodeList[i].type + \"Node\";\r\n                nodeY = 335;\r\n                modelObj = {\r\n                    resourceId: util.getUUID(),  \r\n                    bounds: {\r\n                        upperLeft: {x: startSwitchX, y: nodeY}  \r\n                    },\r\n                    stencil: {type: _typeNode}\r\n                }; \r\n                if ( nodeList[i].type  === \"SwitchHalfIB\" ) {\r\n                    modelObj.width = switchWidth / 2;\r\n                    startSwitchX += switchWidth / 2 + 50;\r\n                } else {\r\n                    modelObj.width = switchWidth;\r\n                    startSwitchX += switchWidth + 50;\r\n                } \r\n            }\r\n            modelObj.name = nodeList[i].reourceName;\r\n            modelObj.nodetype = nodeList[i].nodetype;\r\n            modelObj.height =  15;\r\n            if ( nodeList[i].cards != undefined ) {\r\n                modelObj.cards = nodeList[i].cards;\r\n            }\r\n            \r\n\r\n            //判断是否band悬浮事件\r\n            modelObj.showTip = _showTip;\r\n            var serverModel = new NetworkModel(modelObj);\r\n            this.addNodeByModel(serverModel, api);\r\n        }\r\n        for ( var ps = 0; ps < this.portList.length; ps++ ) {\r\n            var startNode = this.portList[ps];\r\n            var endNode = null;\r\n            for ( var pe = 0; pe < this.portList.length; pe++ ) {\r\n                if (startNode.lineInfo.targetReource === this.portList[pe].lineInfo.sourceReource \r\n                    && startNode.lineInfo.targetPort === this.portList[pe].lineInfo.sourcePort ) {\r\n                    endNode = this.portList[pe];\r\n                    break;\r\n                }\r\n            }\r\n            //连线\r\n            if( endNode !== null && startNode != null ) {\r\n                this.drawLine(startNode, endNode, api);\r\n            }\r\n\r\n\r\n        }\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    TopoDrawNode.prototype.getWidth = function( p_nodeList, p_serverW, p_switchW ) {\r\n        var computeCount = 0;\r\n        var storageCount = 0; \r\n        var switchCount = 0; \r\n        for ( var i = 0; i < p_nodeList.length; i++ ) {\r\n            if ( p_nodeList[i].nodetype === \"1\" ) {\r\n               computeCount++;\r\n            } else if (p_nodeList[i].nodetype === \"2\" ) {           \r\n                storageCount++;\r\n            } else if (p_nodeList[i].nodetype === \"3\" ) {\r\n                switchCount++;\r\n            }\r\n        }\r\n        var serverCount = computeCount > storageCount ? computeCount : storageCount; \r\n        var w1 = 60 + serverCount * (p_serverW + 50) + 150;\r\n        var s1 = 40 + switchCount * (p_switchW + 50) + 150;\r\n        return w1 > s1 ? w1 : s1;\r\n    };\r\n\r\n    TopoDrawNode.prototype.addNodeByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, api);\r\n            this.add(node);\r\n            if( node.portNodeList !== undefined && node.portNodeList.length > 0 ) {\r\n                for (var i = 0; i < node.portNodeList.length; i++ ) {\r\n                    this.portList.push(node.portNodeList[i]);\r\n                }\r\n                //this.portList.concat(node.portNodeList);\r\n            }\r\n        }\r\n    };\r\n\r\n    TopoDrawNode.prototype.drawLine = function( p_startNode, p_endNode, api ) {\r\n        var fleftx = p_startNode.position[0] + p_startNode.parent.position[0] + p_startNode.parent.parent.position[0];\r\n        var flefty = p_startNode.position[1] + p_startNode.parent.position[1] + p_startNode.parent.parent.position[1];\r\n        var fwidth = p_startNode.model.get(\"width\");\r\n        var fheight = p_startNode.model.get(\"height\");\r\n\r\n        var torightx = p_endNode.position[0] + p_endNode.parent.position[0];\r\n        var torighty = p_endNode.position[1] + p_endNode.parent.position[1];\r\n        var towidth = p_endNode.model.get(\"width\");\r\n        var toheight =p_endNode.model.get(\"height\");\r\n        var moddleY = 250;\r\n        var nodetype = p_startNode.model.get(\"lineInfo\").nodetype;\r\n        if( nodetype === \"2\" ) {\r\n            moddleY = 450;\r\n        }\r\n\r\n        var _moddleX = p_startNode.lineInfo.moddleX;\r\n        var defaultOption = {\r\n            fromBounds : {x: fleftx, y: flefty, width: fwidth, height: fheight},\r\n            toBounds: {x: torightx, y: torighty, width: towidth, height: toheight},\r\n            moddleY: moddleY,\r\n            style : {\r\n                lineWidth : 1,\r\n                stroke: '#62A4DD'//,\r\n                //fill: '#9699DD'\r\n            },\r\n            hoverStyle : {\r\n                lineWidth : 2,\r\n                stroke: 'red'//,\r\n                //fill:'#2FDE92'\r\n            }\r\n        };\r\n        if ( _moddleX !== undefined ) {\r\n            defaultOption.moddleX =  _moddleX;\r\n        }\r\n        var netWorkLineModel = new NetWorkLineModel(defaultOption);\r\n        var netWorkLineNode = new NetWorkLineNode(netWorkLineModel);\r\n        this.add(netWorkLineNode);\r\n        netWorkLineNode.on(\"mouseover\", function(e) {\r\n            var params = {};\r\n                params.event = e;\r\n                params.x = e.offsetX;\r\n                params.y = e.offsetY;\r\n                params.width = 150;\r\n                params.height = 170;\r\n                params.eWidth =  5 ;\r\n                params.parmDate = e.target.parmDate;\r\n                api.showTipWindow(params);\r\n\r\n        });\r\n        netWorkLineNode.on(\"mouseout\", function(e) {\r\n             api.hideTipWindow(e.event.target);\r\n        });\r\n        // //线 bind 事件\r\n        // var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];\r\n        // //绑定悬浮事件\r\n        // zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n        //     netWorkLineNode.on(eveName, function (e) {\r\n\r\n        //     }, this);\r\n        // }, this);\r\n\r\n\r\n    }\r\n    zrUtil.inherits(TopoDrawNode, NetworkNode);\r\n    module.exports = TopoDrawNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/TopoDrawNode.js\n ** module id = 82\n ** module chunks = 0\n **/","\r\n\tvar Node = require(\"../../../fish-topo-core/lib/Node\");\r\n    var NetworkNode = require(\"./NetworkNode\");\r\n\tvar Util = require('../../../fish-topo-core/lib/util');\r\n\tvar graphic = require(\"../../../fish-topo-core/lib/graphic.js\");\r\n    var Point = require(\"../../../fish-topo-core/lib/Point.js\");\r\n    var Connector = require(\"../../../fish-topo-core/lib/shapes/Connector.js\");\r\n\r\n\tfunction NetWorkLineNode(model,api) {\r\n\t\tNode.call(this);\r\n        this.model = model;  // NetWorkLineModal\r\n        this.con = null;        \r\n\t\tthis.render();\r\n\t\tthis.refreshLine();\r\n        \r\n\t};\r\n\r\n\tNetWorkLineNode.prototype.render = function() {\r\n            var parmData = {};\r\n            if ( this.model.get(\"isVector\") ) {\r\n                 parmData.symbol = {type:\"arrow\", size: 10, color:\"#000000\"};\r\n            } else {\r\n                 parmData.symbol = {type:\"\"};\r\n            }\r\n            var _style = this.model.get(\"style\");\r\n            var _hoverStyle = this.model.get(\"hoverStyle\");\r\n            parmData.style = _style;\r\n            parmData.hoverStyle = _hoverStyle;\r\n            \r\n            var _isEdit = this.model.get(\"isEdit\");\r\n            parmData.isEdit = _isEdit;\r\n            \r\n            this.con =  new Connector(parmData);  //\"arrow\"\r\n            this.add(this.con);\r\n\t};\r\n\r\n    NetWorkLineNode.prototype.refreshLine = function () {\r\n        var moddleY = this.model.get(\"moddleY\");\r\n        var moddleX = this.model.get(\"moddleX\");\r\n\r\n        var sRect = this.model.get(\"fromBounds\");\r\n        var sBounds = [sRect.x, sRect.y, sRect.x + sRect.width, sRect.y + sRect.height];\r\n\r\n        var eRect = this.model.get(\"toBounds\");\r\n        var eBounds = [eRect.x, eRect.y, eRect.x + eRect.width, eRect.y + eRect.height];\r\n\r\n        var sConnectorPoint = Util.getConnectorPoints(sRect);\r\n        var eConnectorPoint = Util.getConnectorPoints(eRect);\r\n\r\n        var startPoint = null;\r\n        var endPoint = null;\r\n        if (sRect.y < eRect.y) {\r\n            startPoint = sConnectorPoint.bottom;\r\n            endPoint = eConnectorPoint.top;\r\n        } else {\r\n            startPoint = sConnectorPoint.top;\r\n            endPoint = eConnectorPoint.bottom;\r\n        }\r\n\r\n        var solutions = this.connector2Points(startPoint, endPoint, moddleX, \r\n                        moddleY, sBounds, eBounds);\r\n            //adjust connector\r\n        //  console.info(\"connector2Points() -> Solution: \" + solutions[0][2]);\r\n        // var points = Util.traslatePoints(solutions[0][2]);\r\n\r\n        //this.line.attr('shape', {points: points});\r\n        this.con.refresh(solutions[0][2]);\r\n    };\r\n\r\n    NetWorkLineNode.prototype.connector2Points = function(startPoint, endPoint, moddleX, middleY, sBounds, eBounds ){\r\n        var solutions = [];\r\n        //Basic solution 最基本的解决方案   为其他解决方案做准备\r\n        var s = [startPoint];\r\n        if ( moddleX !== undefined && moddleX !== null ) {\r\n             s.push(new Point(startPoint.x - moddleX, startPoint.y));\r\n             s.push(new Point(startPoint.x - moddleX, middleY));\r\n             s.push(new Point(endPoint.x, middleY)); \r\n        } else {\r\n            s.push(new Point(startPoint.x, middleY));\r\n            s.push(new Point(endPoint.x, middleY)); \r\n        }\r\n        s.push(endPoint);        \r\n\r\n        //SO - no additional points     S0 解决方案 \r\n        var s0 = Point.cloneArray(s);\r\n        solutions.push(['s0', 's0', s0]);\r\n        return solutions;\r\n        \r\n    };\r\n\r\n\tUtil.inherits(NetWorkLineNode, Node);\r\n\r\n\tmodule.exports = NetWorkLineNode;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/NetWorkLineNode.js\n ** module id = 83\n ** module chunks = 0\n **/","/**\r\n * 连接线\r\n * @author wang.xiaohu\r\n */\r\n\r\n    var Util = require(\"../util.js\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../graphic.js\");\r\n    var Node = require(\"../Node.js\");\r\n    var symbolUtil = require(\"./Symbol.js\");\r\n    var Handle = require(\"./Handle.js\");\r\n    var ConnectionPoint = require(\"./ConnectionPoint.js\");\r\n    /**\r\n     * 构造函数\r\n     * @param {[type]} points [description]\r\n     */\r\n    function Connector(options) {\r\n        Node.call(this);\r\n        this.resourceId = Util.getUUID();  // 生成节点ID\r\n        var defaultOptions = {\r\n            symbol: {type:\"arrow\" , size: 10, color:\"#000000\"},  //箭头  可选值为： 'circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow'\r\n            style: {lineWidth:1, stroke:\"#000000\", lineType:Connector.TYPE_STRAIGHT},    //样式\r\n            hoverStyle: {lineWidth:2, stroke:\"lime\"}, //移上去的样式\r\n            arrowHoverStyle: {fill:\"lime\"},\r\n            shape: {points:null, smooth:false, smoothConstraint:null},//形状\r\n            position: [0,0],\r\n            isEdit: true,  //是否可编辑\r\n            text: {\r\n                text: \"\",\r\n                color: '#000000', // 文本颜色\r\n                textFont: '12px Microsoft YaHei'\r\n            }\r\n        }\r\n        var opt = options || {};\r\n        this.options = zrUtil.merge(defaultOptions, opt, true);\r\n        this.model = options.model;\r\n        this.handles = [];\r\n        this.connectionPoints = [];\r\n\r\n        this.conPointsGroup = null;\r\n        this.startNode = null;\r\n        this.endNode = null;\r\n        this.icons = [];\r\n        this.render();\r\n    };\r\n\r\n    Connector.TYPE_STRAIGHT = 'straight';\r\n\r\n    Connector.TYPE_JAGGED = 'jagged';\r\n\r\n    Connector.TYPE_ROUND = 'round';\r\n\r\n    Connector.RADIUS = 3;\r\n\r\n    Connector.START_NODE = \"startNode\";\r\n\r\n    Connector.END_NODE = \"endNode\";\r\n\r\n    Connector.LEFT = \"left\";\r\n\r\n    Connector.RIGHT = \"right\";\r\n\r\n    Connector.TOP = \"top\";\r\n\r\n    Connector.BOTTOM = \"bottom\";\r\n\r\n    Connector.BOTTOM = \"bottom\";\r\n\r\n    Connector.SEPERATOR = \"-\";\r\n    /**\r\n     * 重新画线，如果传空则根据turningPoints 重新画线\r\n     * @param  {[type]} points [description]\r\n     * @return {[type]}        [description]\r\n     */\r\n    Connector.prototype.refresh = function(points) {\r\n        if(points) {\r\n            this.turningPoints = points;\r\n        }\r\n        //将[x:0,y:0]转化为[0, 0]  给zrender使用\r\n        var points = Util.traslatePoints(this.turningPoints);\r\n        this.line.attr('shape', {points: points});\r\n\r\n        var symbolTo = this.childOfName('toSymbol');\r\n        if(symbolTo) {\r\n            symbolTo.attr('position', points[points.length -1]);\r\n            symbolTo.attr('rotation', Util.tangentRotation(this.turningPoints[this.turningPoints.length-2], this.turningPoints[this.turningPoints.length-1]));\r\n        };\r\n\r\n        var lineText = this.childOfName('lineText');\r\n        //开始没有创建文本，后来传进来text了，需要先创建文本\r\n        if (!lineText  && this.options.text.text) {\r\n            var text = this.drawText(\"lineText\", this.options.text.text,0, 0);\r\n            this.add(text.text);\r\n            lineText = this.childOfName('lineText');\r\n        };\r\n        if (lineText) {\r\n            lineText.setStyle(\"text\", this.options.text.text);\r\n            var middlePoint = this.middle(this.options.text);\r\n\r\n\r\n            if (this.options.style.lineType == Connector.TYPE_STRAIGHT ) {\r\n                //计算出极坐标的角度\r\n                var points  = Util.getMaxLineLength(this.turningPoints);\r\n                var angle = - Math.atan2(points[1].y - middlePoint[1], points[1].x - middlePoint[0]);\r\n                lineText.attr('rotation', angle);  //,Math.PI/2\r\n            }\r\n\r\n            lineText.attr(\"position\", middlePoint);\r\n        };\r\n   };\r\n    /**\r\n     * 渲染\r\n     * @return {[type]} [description]\r\n     */\r\n    Connector.prototype.render = function() {\r\n        var that = this;\r\n        this.line = new graphic.Polyline({\r\n            position: this.options.position,\r\n            shape: this.options.shape,\r\n            style: this.options.style,\r\n            z:0 //\r\n        });\r\n        this.add(this.line);\r\n        var MOUSE_EVENT_NAMES = ['dblclick', 'click'];//'click', 'dblclick', 'mouseover', 'mouseout'\r\n\r\n        zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n            that.line.on(eveName, function (e) {\r\n                var params = {};\r\n                params.event = e;\r\n                params.type = \"Connector:\" + eveName;\r\n                params.target = that;\r\n                that.trigger(params.type, params);\r\n                if(that.options.isEdit == false){return;}\r\n                if(that.options.isEdit && that.connectionPoints.length < 1 && that.turningPoints.length >=2) {\r\n                    that.createAllconnectionPoint()\r\n                }\r\n                if(that.handles.length < 1 ) {\r\n                    that.shapeSetHandle();\r\n                }\r\n\r\n\r\n            });\r\n        });\r\n\r\n        if(this.options.isEdit) {\r\n            this.conPointsGroup = new graphic.Group();\r\n            this.add(this.conPointsGroup);\r\n        }\r\n\r\n        var symbolTo = this.createSymbol('toSymbol', this.options.symbol.type, this.options.symbol.size, this.options.symbol.color); //arrow,triangle\r\n        if (symbolTo) {\r\n            this.add(symbolTo);\r\n        }\r\n\r\n        if (this.options.hoverStyle) {\r\n            var el = this.line;\r\n            graphic.setElementHoverStl(el, this.options.hoverStyle);\r\n            if(symbolTo){graphic.setElementHoverStl(symbolTo, this.options.arrowHoverStyle);}\r\n\r\n            el.on('mouseover', function() {\r\n                graphic.doEnterHover(el);\r\n                if(symbolTo){graphic.doEnterHover(symbolTo);}\r\n\r\n            })\r\n              .on('mouseout', function() {\r\n                graphic.doLeaveHover(el);\r\n                if(symbolTo){graphic.doLeaveHover(symbolTo);}\r\n\r\n            })\r\n        }\r\n\r\n        //创建文本\r\n        if (this.options.text.text && this.options.text.text != \"\") {\r\n            var text = this.drawText(\"lineText\", this.options.text.text,0, 0);\r\n            this.add(text.text);\r\n        };\r\n\r\n\r\n    };\r\n\r\n    /**\r\n     * 创建Node的连接点\r\n     * @private\r\n     *\r\n     * @return {[type]} [description]\r\n     */\r\n    Connector.prototype.createAllconnectionPoint = function() {\r\n        var sRect = this.startNode.getRect? this.startNode.getRect().boundingRect : Util.getRect(this.startNode).boundingRect;\r\n\r\n        var eRect = this.endNode.getRect? this.endNode.getRect().boundingRect : Util.getRect(this.endNode).boundingRect;\r\n\r\n        var sConnectorPoint = Util.getConnectorPoints(sRect);\r\n        var eConnectorPoint = Util.getConnectorPoints(eRect);\r\n\r\n        this.connectionPointCreate(this.startNode, sConnectorPoint.left, Connector.START_NODE + Connector.SEPERATOR + Connector.LEFT);\r\n        this.connectionPointCreate(this.startNode, sConnectorPoint.right, Connector.START_NODE + Connector.SEPERATOR + Connector.RIGHT);\r\n        this.connectionPointCreate(this.startNode, sConnectorPoint.top, Connector.START_NODE + Connector.SEPERATOR + Connector.TOP);\r\n        this.connectionPointCreate(this.startNode, sConnectorPoint.bottom, Connector.START_NODE + Connector.SEPERATOR + Connector.BOTTOM);\r\n\r\n        this.connectionPointCreate(this.endNode, eConnectorPoint.left, Connector.END_NODE + Connector.SEPERATOR + Connector.LEFT);\r\n        this.connectionPointCreate(this.endNode, eConnectorPoint.right, Connector.END_NODE + Connector.SEPERATOR + Connector.RIGHT);\r\n        this.connectionPointCreate(this.endNode, eConnectorPoint.top, Connector.END_NODE + Connector.SEPERATOR + Connector.TOP);\r\n        this.connectionPointCreate(this.endNode, eConnectorPoint.bottom, Connector.END_NODE + Connector.SEPERATOR + Connector.BOTTOM);\r\n\r\n\r\n        this.connectionPointCreate(this, this.turningPoints[0].clone(), ConnectionPoint.TYPE_CONNECTOR);\r\n\r\n        this.connectionPointCreate(this, this.turningPoints[this.turningPoints.length-1].clone(), ConnectionPoint.TYPE_CONNECTOR);\r\n    };\r\n\r\n    /**\r\n     * 创建连接点\r\n     * @private\r\n     * @param  {[type]} shape [description]\r\n     * @param  {[type]} point [description]\r\n     * @param  {[type]} type  [description]\r\n     * @return {[type]}       [description]\r\n     */\r\n    Connector.prototype.connectionPointCreate = function(shape, point, type) {\r\n        var conPoint = new ConnectionPoint(this, point, type);\r\n        this.conPointsGroup.add(conPoint.shape);\r\n    };\r\n\r\n    /**\r\n     * 清空控制点\r\n     * @return {[type]} [description]\r\n     */\r\n    Connector.prototype.clearHandles = function() {\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            this.remove(this.handles[i].handleShape);\r\n        };\r\n        this.handles = [];\r\n        if (this.conPointsGroup) {\r\n            this.conPointsGroup.removeAll();\r\n        };\r\n    };\r\n\r\n    /**\r\n     * 创建拆线 线断的控制点\r\n     * @return {[type]} [description]\r\n     */\r\n    Connector.prototype.shapeSetHandle = function() {\r\n        for(var i=1; i<this.turningPoints.length-2; i++){\r\n            var h;\r\n            var x, y;\r\n            //是否在一条线上\r\n            var isCollineaityFirst = Util.collinearity(this.turningPoints[i-1], this.turningPoints[i], this.turningPoints[i+1]);\r\n            var isCollineaitySecond = Util.collinearity(this.turningPoints[i], this.turningPoints[i+1], this.turningPoints[i+2]);\r\n            if( (!isCollineaityFirst && (!isCollineaitySecond || this.turningPoints[i+1].equals(this.turningPoints[i+2])))\r\n                || ( (!isCollineaityFirst || this.turningPoints[i-1].equals(this.turningPoints[i])) && !isCollineaitySecond )) {\r\n\r\n                if(this.turningPoints[i].x === this.turningPoints[i+1].x){ //same vertical\r\n                    x = this.turningPoints[i].x;\r\n                    y = (this.turningPoints[i].y + this.turningPoints[i+1].y) / 2;\r\n\r\n                    h = new Handle('h',x,y,this);\r\n\r\n\r\n                }\r\n                else if(this.turningPoints[i].y === this.turningPoints[i+1].y){ // same horizontal\r\n                    x = (this.turningPoints[i].x +  this.turningPoints[i+1].x) / 2;\r\n                    y = this.turningPoints[i].y;\r\n                    h =  new  Handle('v',x,y,this);\r\n                }\r\n                if (h) {\r\n                    this.add(h.handleShape);\r\n                    this.handles.push(h);\r\n                }\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * 创建箭头\r\n     * @param  {[type]} name       [description]\r\n     * @param  {[type]} symbolType [description]\r\n     * @param  {[type]} symbolSize [description]\r\n     * @param  {[type]} color      [description]\r\n     * @return {[type]}            [description]\r\n     */\r\n    Connector.prototype.createSymbol = function(name,symbolType, symbolSize, color) {\r\n        if (symbolType === 'none') {\r\n            return;\r\n        }\r\n\r\n        if (!zrUtil.isArray(symbolSize)) {\r\n            symbolSize = [symbolSize, symbolSize];\r\n        }\r\n        var symbolPath = symbolUtil.createSymbol(\r\n            symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2,\r\n            symbolSize[0], symbolSize[1], color\r\n        );\r\n        symbolPath.name = name;\r\n\r\n        return symbolPath;\r\n    };\r\n\r\n    /**\r\n     * 绘制线段上的文本\r\n     * @param  {[type]} content [description]\r\n     * @param  {[type]} x       [description]\r\n     * @param  {[type]} y       [description]\r\n     * @param  {[type]} color   [description]\r\n     * @return {[type]}         [description]\r\n     */\r\n    Connector.prototype.drawText = function (name,content, x, y, color) {\r\n        var text = new graphic.Text({\r\n            style: {\r\n                text: content,\r\n                x: x,\r\n                y: y,\r\n                fill: color ? color : this.options.text.color,\r\n                textFont: this.options.text.textFont\r\n            },\r\n            zlevel: 20\r\n        });\r\n        text.name = name;\r\n        return {\r\n            text: text,\r\n            rect: text.getBoundingRect()\r\n        };\r\n    };\r\n\r\n    /**\r\n     * 获取线段的中间值\r\n     * @param {[options {text:xx,textFont:xx}]} [可无 文本] [description]\r\n     * @return {[type]} [x, y]\r\n     */\r\n    Connector.prototype.middle = function(text){\r\n\r\n        if(this.options.style.lineType == Connector.TYPE_STRAIGHT){\r\n            var points  = Util.getMaxLineLength(this.turningPoints);\r\n            //如果是求线段上的文字的中间值\r\n            if(text) {\r\n                //取出字的长度，计算角度，\r\n                var textWidth = graphic.textContain.getWidth(text.text, text.textFont);\r\n                var angle = Util.getAngle(points[0],points[1]);\r\n                var length =  Util.distance(points[0],points[1])/2 - textWidth/2;\r\n                var newPoint = Util.getEndPoint(points[0], length, angle);\r\n                return [newPoint.x, newPoint.y];\r\n            } else {\r\n                var middleX = (points[0].x + points[1].x)/2;\r\n                var middleY = (points[0].y + points[1].y) /2;\r\n                return [middleX, middleY];\r\n            }\r\n        }\r\n        else if(this.options.style.lineType == Connector.TYPE_JAGGED){\r\n\r\n            //find total distance\r\n            var distance = 0;\r\n            for(var i=0; i<this.turningPoints.length-1; i++){\r\n                distance += Util.getLength(this.turningPoints[i], this.turningPoints[i+1]);\r\n            }\r\n\r\n            //find between what turning points the half distance is\r\n            var index = -1;\r\n            var ellapsedDistance = 0;\r\n            for(var i=0; i<this.turningPoints.length-1; i++){\r\n                index = i;\r\n                var segment = Util.getLength(this.turningPoints[i], this.turningPoints[i+1]);\r\n                if(ellapsedDistance + segment < distance /2){\r\n                    ellapsedDistance += segment;\r\n                }\r\n                else{\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //we have the middle distance somewhere between i(ndex) and i(ndex)+1\r\n            if(index != -1){\r\n                var missingDistance = distance / 2 - ellapsedDistance;\r\n                if( Util.round(this.turningPoints[index].x, 3) == Util.round(this.turningPoints[index + 1].x, 3) ){ //vertical segment (same x)\r\n                    return [this.turningPoints[index].x, Math.min(this.turningPoints[index].y, this.turningPoints[index + 1].y) + missingDistance];\r\n                } else if( Util.round(this.turningPoints[index].y, 3) == Util.round(this.turningPoints[index + 1].y, 3) ) { //horizontal segment (same y)\r\n                    return [Math.min(this.turningPoints[index].x, this.turningPoints[index + 1].x) + missingDistance, this.turningPoints[index].y];\r\n                } else{\r\n                    console.error(\"Connector:middle() - this should never happen \" + this.turningPoints[index] + \" \" + this.turningPoints[index + 1]\r\n                        + \" nr of points \" + this.turningPoints.length\r\n                        );\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * 转JSON对象\r\n     * @return {[type]} [description]\r\n     */\r\n    Connector.prototype.toJSON = function() {\r\n\r\n        this.model.set(\"resourceId\", this.resourceId);\r\n        this.model.set(\"properties.type\", 14);\r\n\r\n        this.model.set(\"bounds.upperLeft.x\", this.position[0]);\r\n        this.model.set(\"bounds.upperLeft.y\", this.position[1]);\r\n        this.model.set(\"bounds.lowerRight.x\", this.position[0] + this.getBoundingRect().width);\r\n        this.model.set(\"bounds.lowerRight.y\", this.position[1] + this.getBoundingRect().height);\r\n        this.model.set(\"style.sPos\", this.sPos);\r\n        this.model.set(\"style.ePos\", this.ePos);\r\n        this.model.set(\"dockers\",this.turningPoints);\r\n        return this.model.option;\r\n    };\r\n\r\n     /**\r\n     * refreshModel\r\n     * @return {[type]} [description]\r\n     */\r\n    Connector.prototype.refreshModel = function() {\r\n        this.model.set(\"options.dockers\",this.turningPoints);\r\n    };\r\n\r\n    Util.inherits(Connector,Node);\r\n\r\n    module.exports = Connector;\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/shapes/Connector.js\n ** module id = 84\n ** module chunks = 0\n **/","'use strict';\n// Symbol factory\r\n\r\n\r\n    var graphic = require('../graphic');\r\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\r\n    /**\r\n     * Triangle shape\r\n     * @inner\r\n     */\r\n    var Triangle = graphic.extendShape({\r\n        type: 'triangle',\r\n        shape: {\r\n            cx: 0,\r\n            cy: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n        buildPath: function (path, shape) {\r\n            var cx = shape.cx;\r\n            var cy = shape.cy;\r\n            var width = shape.width / 2;\r\n            var height = shape.height / 2;\r\n            path.moveTo(cx, cy - height);\r\n            path.lineTo(cx + width, cy + height);\r\n            path.lineTo(cx - width, cy + height);\r\n            path.closePath();\r\n        }\r\n    });\r\n    /**\r\n     * Diamond shape\r\n     * @inner\r\n     */\r\n    var Diamond = graphic.extendShape({\r\n        type: 'diamond',\r\n        shape: {\r\n            cx: 0,\r\n            cy: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n        buildPath: function (path, shape) {\r\n            var cx = shape.cx;\r\n            var cy = shape.cy;\r\n            var width = shape.width / 2;\r\n            var height = shape.height / 2;\r\n            path.moveTo(cx, cy - height);\r\n            path.lineTo(cx + width, cy);\r\n            path.lineTo(cx, cy + height);\r\n            path.lineTo(cx - width, cy);\r\n            path.closePath();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Pin shape\r\n     * @inner\r\n     */\r\n    var Pin = graphic.extendShape({\r\n        type: 'pin',\r\n        shape: {\r\n            // x, y on the cusp\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        buildPath: function (path, shape) {\r\n            var x = shape.x;\r\n            var y = shape.y;\r\n            var w = shape.width / 5 * 3;\r\n            // Height must be larger than width\r\n            var h = Math.max(w, shape.height);\r\n            var r = w / 2;\r\n\r\n            // Dist on y with tangent point and circle center\r\n            var dy = r * r / (h - r);\r\n            var cy = y - h + r + dy;\r\n            var angle = Math.asin(dy / r);\r\n            // Dist on x with tangent point and circle center\r\n            var dx = Math.cos(angle) * r;\r\n\r\n            var tanX = Math.sin(angle);\r\n            var tanY = Math.cos(angle);\r\n\r\n            path.arc(\r\n                x, cy, r,\r\n                Math.PI - angle,\r\n                Math.PI * 2 + angle\r\n            );\r\n\r\n            var cpLen = r * 0.6;\r\n            var cpLen2 = r * 0.7;\r\n            path.bezierCurveTo(\r\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\r\n                x, y - cpLen2,\r\n                x, y\r\n            );\r\n            path.bezierCurveTo(\r\n                x, y - cpLen2,\r\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\r\n                x - dx, cy + dy\r\n            );\r\n            path.closePath();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Arrow shape\r\n     * @inner\r\n     */\r\n    var Arrow = graphic.extendShape({\r\n\r\n        type: 'arrow',\r\n\r\n        shape: {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            var height = shape.height;\r\n            var width = shape.width;\r\n            var x = shape.x;\r\n            var y = shape.y;\r\n            var dx = width / 3 * 2;\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x + dx, y + height);\r\n            ctx.lineTo(x, y + height / 4 * 3);\r\n            ctx.lineTo(x - dx, y + height);\r\n            ctx.lineTo(x, y);\r\n            ctx.closePath();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Map of path contructors\r\n     * @type {Object.<string, module:zrender/graphic/Path>}\r\n     */\r\n    var symbolCtors = {\r\n        line: graphic.Line,\r\n\r\n        rect: graphic.Rect,\r\n\r\n        roundRect: graphic.Rect,\r\n\r\n        square: graphic.Rect,\r\n\r\n        circle: graphic.Circle,\r\n\r\n        diamond: Diamond,\r\n\r\n        pin: Pin,\r\n\r\n        arrow: Arrow,\r\n\r\n        triangle: Triangle\r\n    };\r\n\r\n    var symbolShapeMakers = {\r\n\r\n        line: function (x, y, w, h, shape) {\r\n            // FIXME\r\n            shape.x1 = x;\r\n            shape.y1 = y + h / 2;\r\n            shape.x2 = x + w;\r\n            shape.y2 = y + h / 2;\r\n        },\r\n\r\n        rect: function (x, y, w, h, shape) {\r\n            shape.x = x;\r\n            shape.y = y;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        },\r\n\r\n        roundRect: function (x, y, w, h, shape) {\r\n            shape.x = x;\r\n            shape.y = y;\r\n            shape.width = w;\r\n            shape.height = h;\r\n            shape.r = Math.min(w, h) / 4;\r\n        },\r\n\r\n        square: function (x, y, w, h, shape) {\r\n            var size = Math.min(w, h);\r\n            shape.x = x;\r\n            shape.y = y;\r\n            shape.width = size;\r\n            shape.height = size;\r\n        },\r\n\r\n        circle: function (x, y, w, h, shape) {\r\n            // Put circle in the center of square\r\n            shape.cx = x + w / 2;\r\n            shape.cy = y + h / 2;\r\n            shape.r = Math.min(w, h) / 2;\r\n        },\r\n\r\n        diamond: function (x, y, w, h, shape) {\r\n            shape.cx = x + w / 2;\r\n            shape.cy = y + h / 2;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        },\r\n\r\n        pin: function (x, y, w, h, shape) {\r\n            shape.x = x + w / 2;\r\n            shape.y = y + h / 2;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        },\r\n\r\n        arrow: function (x, y, w, h, shape) {\r\n            shape.x = x + w / 2;\r\n            shape.y = y + h / 2;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        },\r\n\r\n        triangle: function (x, y, w, h, shape) {\r\n            shape.cx = x + w / 2;\r\n            shape.cy = y + h / 2;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        }\r\n    };\r\n\r\n    var symbolBuildProxies = {};\r\n    for (var name in symbolCtors) {\r\n        symbolBuildProxies[name] = new symbolCtors[name]();\r\n    }\r\n\r\n    var Symbol = graphic.extendShape({\r\n\r\n        type: 'symbol',\r\n\r\n        shape: {\r\n            symbolType: '',\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        beforeBrush: function () {\r\n            var style = this.style;\r\n            var shape = this.shape;\r\n            // FIXME\r\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\r\n                style.textPosition = ['50%', '40%'];\r\n                style.textAlign = 'center';\r\n                style.textVerticalAlign = 'middle';\r\n            }\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            var symbolType = shape.symbolType;\r\n            var proxySymbol = symbolBuildProxies[symbolType];\r\n            if (shape.symbolType !== 'none') {\r\n                if (!proxySymbol) {\r\n                    // Default rect\r\n                    symbolType = 'rect';\r\n                    proxySymbol = symbolBuildProxies[symbolType];\r\n                }\r\n                symbolShapeMakers[symbolType](\r\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\r\n                );\r\n                proxySymbol.buildPath(ctx, proxySymbol.shape);\r\n            }\r\n        }\r\n    });\r\n\r\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\r\n    var symbolPathSetColor = function (color) {\r\n        if (this.type !== 'image') {\r\n            var symbolStyle = this.style;\r\n            var symbolShape = this.shape;\r\n            if (symbolShape && symbolShape.symbolType === 'line') {\r\n                symbolStyle.stroke = color;\r\n            }\r\n            else if (this.__isEmptyBrush) {\r\n                symbolStyle.stroke = color;\r\n                symbolStyle.fill = '#fff';\r\n            }\r\n            else {\r\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\r\n                symbolStyle.fill && (symbolStyle.fill = color);\r\n                symbolStyle.stroke && (symbolStyle.stroke = color);\r\n            }\r\n            this.dirty();\r\n        }\r\n    };\r\n\r\n    var symbolUtil = {\r\n        /**\r\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n         * @param {string} symbolType\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @param {number} w\r\n         * @param {number} h\r\n         * @param {string} color\r\n         */\r\n        createSymbol: function (symbolType, x, y, w, h, color) {\r\n            var isEmpty = symbolType.indexOf('empty') === 0;\r\n            if (isEmpty) {\r\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\r\n            }\r\n            var symbolPath;\r\n\r\n            if (symbolType.indexOf('image://') === 0) {\r\n                symbolPath = new graphic.Image({\r\n                    style: {\r\n                        image: symbolType.slice(8),\r\n                        x: x,\r\n                        y: y,\r\n                        width: w,\r\n                        height: h\r\n                    }\r\n                });\r\n            }\r\n            else if (symbolType.indexOf('path://') === 0) {\r\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\r\n            }\r\n            else {\r\n                symbolPath = new Symbol({\r\n                    shape: {\r\n                        symbolType: symbolType,\r\n                        x: x,\r\n                        y: y,\r\n                        width: w,\r\n                        height: h\r\n                    }\r\n                });\r\n            }\r\n\r\n            symbolPath.__isEmptyBrush = isEmpty;\r\n\r\n            symbolPath.setColor = symbolPathSetColor;\r\n\r\n            symbolPath.setColor(color);\r\n\r\n            return symbolPath;\r\n        }\r\n    };\r\n\r\n    module.exports = symbolUtil;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/shapes/Symbol.js\n ** module id = 85\n ** module chunks = 0\n **/","/**\r\n * 画句柄\r\n * @author wang.xiaohu\r\n */\r\n\r\n    var graphic = require(\"../graphic.js\");\r\n    var Util = require(\"../util.js\");\r\n    function Handle(type, x, y, connector){\r\n        this.type = type;\r\n\r\n        this.x = x;\r\n        \r\n        this.y = y;\r\n        \r\n        this.visible = true;\r\n\r\n        this.connector = connector;\r\n\r\n        this.handleShape = new graphic.Circle({\r\n            shape: {\r\n                cx: x,\r\n                cy: y,\r\n                r: Handle.RADIUS\r\n            },\r\n\r\n            style: {\r\n                fill: \"rgb(0,255,0)\",\r\n                stroke:\"rgb(0,0,0)\"\r\n            },\r\n            z : 2,  //节点Z为1 线段为0;\r\n            draggable:true\r\n        }); \r\n\r\n        var that = this\r\n        this.handleShape.on(\"drag\", function(e) {\r\n            that.actionConnector(e.offsetX,e.offsetY);\r\n        })\r\n       // return this.circle;\r\n    }\r\n\r\n    Handle.RADIUS = 4;\r\n\r\n    Handle.prototype = {\r\n        \r\n        constructor : Handle,\r\n        \r\n        equals : function(anotherHandle){\r\n            if(!anotherHandle instanceof Handle){\r\n                return false;\r\n            }\r\n\r\n            return this.type == anotherHandle.type\r\n            && this.x == anotherHandle.x\r\n            && this.y == anotherHandle.y\r\n            && this.visible == anotherHandle.visible;        \r\n        },\r\n\r\n        /**\r\n         * 移动句柄\r\n         * @param  {[type]} newX [description]\r\n         * @param  {[type]} newY [description]\r\n         * @return {[type]}      [description]\r\n         */\r\n        actionConnector: function(newX, newY){\r\n            switch(this.type){\r\n                case 'v':\r\n                    var index;\r\n                    // 找出两个转折点（可移动句柄在这两个转折点中间）\r\n                    for(var i = 1; i < this.connector.turningPoints.length-1; i++){\r\n                        if(this.connector.turningPoints[i-1].y == this.connector.turningPoints[i].y\r\n                            && this.connector.turningPoints[i].y == this.y\r\n                            && Math.min(this.connector.turningPoints[i].x, this.connector.turningPoints[i-1].x) <= this.x\r\n                            && Math.max(this.connector.turningPoints[i].x, this.connector.turningPoints[i-1].x) >= this.x)\r\n                        {\r\n                            index = i;\r\n                        }\r\n                    }\r\n                    var deltaY = newY - this.y;   \r\n                    var translationMatrix = Util.translationMatrix(0, deltaY);   \r\n                    \r\n                    this.connector.turningPoints[index-1].transform(translationMatrix);\r\n                    this.connector.turningPoints[index].transform(translationMatrix);\r\n                    this.connector.refresh();\r\n                    this.y = newY;  //将句柄新的位置赋值给y\r\n\r\n                    break;\r\n\r\n                case 'h':\r\n                    var index;\r\n                    // 找出两个转折点（可移动句柄在这两个转折点中间）\r\n                    for(var i = 1; i < this.connector.turningPoints.length-1; i++){\r\n                        if(this.connector.turningPoints[i-1].x == this.connector.turningPoints[i].x\r\n                            && this.connector.turningPoints[i].x == this.x\r\n                            && Math.min(this.connector.turningPoints[i].y, this.connector.turningPoints[i-1].y) <= this.y\r\n                            && Math.max(this.connector.turningPoints[i].y, this.connector.turningPoints[i-1].y) >= this.y)\r\n                            {\r\n                            index = i;\r\n                        }\r\n                    }\r\n                    var deltaX = newX-this.x;    \r\n                    var translationMatrix = Util.translationMatrix(deltaX, 0);    \r\n                    this.connector.turningPoints[index-1].transform(translationMatrix);\r\n                    this.connector.turningPoints[index].transform(translationMatrix);\r\n                    this.connector.refresh();\r\n                    this.x = newX; //将句柄新的位置赋值给x\r\n\r\n                    break;\r\n            }\r\n           //. this.shape.updateMiddleText();\r\n        },    \r\n    }\r\n    module.exports = Handle;\r\n\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/shapes/Handle.js\n ** module id = 86\n ** module chunks = 0\n **/","/**\r\n * 控制点\r\n * @author wang.xiaohu\r\n */\r\n\r\n    var graphic = require(\"../graphic.js\");\r\n    var Util = require(\"../util.js\");\r\n    function ConnectionPoint(connector, point, type){\r\n        this.connector = connector;\r\n\r\n        this.point = point.clone();\r\n\r\n        this.type = type;\r\n\r\n        this.color = ConnectionPoint.NORMAL_COLOR;\r\n\r\n        this.oType = 'ConnectionPoint'; \r\n\r\n        this.shape = new graphic.Circle({\r\n            shape: {\r\n                cx: this.point.x,\r\n                cy: this.point.y,\r\n                r: ConnectionPoint.RADIUS\r\n            },\r\n\r\n            style: {\r\n                fill: this.color,\r\n                stroke:'#000000'\r\n            },\r\n            z : 2  //节点Z为1 线段为0;\r\n        }); \r\n        this.shape.type =  this.type;\r\n\r\n        this.shape.connector = connector;\r\n        //return this.circle;\r\n    }\r\n\r\n    ConnectionPoint.NORMAL_COLOR = \"#FFFF33\"; //yellow.\r\n\r\n    ConnectionPoint.OVER_COLOR = \"#FF9900\"; //orange\r\n\r\n    ConnectionPoint.CONNECTED_COLOR = \"#ff0000\"; //red\r\n\r\n    ConnectionPoint.RADIUS = 4;\r\n\r\n    ConnectionPoint.TYPE_FIGURE = 'figure';\r\n\r\n    ConnectionPoint.TYPE_CONNECTOR = 'connector';\r\n\r\n    ConnectionPoint.prototype = {\r\n        \r\n        constructor : ConnectionPoint,\r\n        \r\n        equals : function(anotherConnectionPoint){\r\n            return this.point.equals(anotherConnectionPoint.point)\r\n            && this.connector == anotherConnectionPoint.connector\r\n            && this.type == anotherConnectionPoint.type\r\n            && this.color == anotherConnectionPoint.color\r\n            && this.radius == anotherConnectionPoint.radius;        \r\n        },\r\n\r\n \r\n    }\r\n    module.exports = ConnectionPoint;\r\n\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-core/lib/shapes/ConnectionPoint.js\n ** module id = 87\n ** module chunks = 0\n **/","/**\r\n * Network model\r\n *\r\n */\r\n\r\n\r\n    var Model = require('../../../fish-topo-core/lib/Model');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var NetWorkLineModel = Model.extend({\r\n        /**\r\n         * @type {Object}\r\n         * @protected\r\n         */\r\n        defaultOption: {\r\n            fromBounds: {x:0, y:0, width:0, height:0},  // [左上角X, 左上角Y, 宽度 , 高度]\r\n            toBounds: {x:0, y:0, width:0, height:0},  // [左上角X, 左上角Y, 宽度 , 高度]\r\n            moddleX: 0,  // 中间线的Y坐标\r\n            moddleY: 0,  // 中间线的Y坐标\r\n            style: {\r\n                lineWidth:1,  // 线宽度\r\n                stroke: \"#FFFFFF\",  //线颜色\r\n            },\r\n            hoverStyle: {\r\n                lineWidth:1,  // 线宽度\r\n                stroke: \"#FFFFFF\",  //线颜色                \r\n            },\r\n            isVector: false\r\n        },\r\n\r\n        init: function (option, parentModel, extraOpt) {\r\n            zrUtil.merge(option, this.getDefaultOption());\r\n        },\r\n\r\n        getDefaultOption: function () {\r\n            if (!this.hasOwnProperty('__defaultOption')) {\r\n                var optList = [];\r\n                var Class = this.constructor;\r\n                while (Class) {\r\n                    var opt = Class.prototype.defaultOption;\r\n                    opt && optList.push(opt);\r\n                    Class = Class.superClass;\r\n                }\r\n\r\n                var defaultOption = {};\r\n                for (var i = optList.length - 1; i >= 0; i--) {\r\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n                }\r\n                this.__defaultOption = defaultOption;\r\n            }\r\n            return this.__defaultOption;                \r\n        }\r\n\r\n    });\r\n    module.exports = NetWorkLineModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/model/NetWorkLineModel.js\n ** module id = 88\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var ServerTopoNode = require(\"./ServerTopoNode\");\r\n    \r\n    function ServerR630Node(model,api) {\r\n        ServerTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ServerR630Node\" };    \r\n        this.model = model;\r\n        this.portNodeList = [];\r\n        this.cardNodeList = [];\r\n        this.render(model,api);\r\n    };\r\n\r\n    ServerR630Node.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n        var _width = model.get(\"width\");\r\n        var _height = 20;\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: _height,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var serverNodeB = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR630b.png',\r\n                width: _width,\r\n                height:  _height\r\n            },\r\n            z: 1000,\r\n            draggable: false\r\n        }); \r\n\r\n        var serverNodeA = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR630a.png',\r\n                width: _width,\r\n                height:  _height\r\n            },\r\n            draggable: false\r\n        }); \r\n\r\n\r\n        serverNodeB.on(\"mouseover\", function(params){\r\n            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeA.attr(\"position\", [0,0]);\r\n          //  serverNodeA.show();\r\n        });\r\n        serverNodeA.on(\"mouseout\", function(params){\r\n            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeB.attr(\"position\", [0,0]);\r\n        });\r\n\r\n        this.add(serverNodeA);\r\n        this.add(serverNodeB);\r\n        \r\n        var cardList = model.get(\"cards\");\r\n        var defaultPorts = [];\r\n        if ( cardList !== undefined ) {\r\n             for ( var c = 0; c < cardList.length; c++ ) {\r\n                if ( cardList[c].type === \"default\" ) {\r\n                    defaultPorts = cardList[c].ports !== undefined ? cardList[c].ports : undefined;\r\n\r\n                    var portModel = {};\r\n                    portModel = {\r\n                        resourceId: util.getUUID(),  \r\n                        bounds: {\r\n                            upperLeft: {x: 14, y: _height / 2.5}  \r\n                        },\r\n                        stencil: {type: \"PointNode\"}\r\n                    };\r\n                    portModel.height = 7;\r\n                    portModel.width = 7;\r\n                    var _linInfo = {};\r\n                    _linInfo.sourceReource = this.model.get(\"name\");\r\n                    _linInfo.sourcePort = i;\r\n                    _linInfo.cardNo = 0;\r\n                    _linInfo.nodetype = this.model.get(\"nodetype\");\r\n                    if( defaultPorts !== undefined && defaultPorts[0] !== undefined ) {\r\n                        _linInfo.targetReource = defaultPorts[0].target !== undefined ? defaultPorts[0].target.reourceName : \"\";\r\n                        _linInfo.targetPort = defaultPorts[0].target !== undefined ? defaultPorts[0].target.port : \"\";\r\n                    }\r\n                    portModel.lineInfo = _linInfo;\r\n                    var pModel = new NetworkModel(portModel);\r\n                    this.addPortByModel(pModel, api);\r\n\r\n                    var _kmx = 70;\r\n                    for ( var i = 1; i < 5; i++ ) {\r\n                        var portModel = {};\r\n                        portModel = {\r\n                            resourceId: util.getUUID(),  \r\n                            bounds: {\r\n                                upperLeft: {x: _kmx, y: _height / 2.5}  \r\n                            },\r\n                            stencil: {type: \"PointNode\"}\r\n                        };\r\n                        portModel.height = 7;\r\n                        portModel.width = 7;\r\n                        var _linInfo = {};\r\n                        _linInfo.sourceReource = this.model.get(\"name\");\r\n                        _linInfo.sourcePort = i;\r\n                        _linInfo.sourceCardNo = 0;\r\n                        _linInfo.nodetype = this.model.get(\"nodetype\");\r\n                        var _index = i;\r\n                        if( defaultPorts !== undefined && defaultPorts[_index] !== undefined ) {\r\n                            _linInfo.targetReource = defaultPorts[_index].target !== undefined ? defaultPorts[_index].target.reourceName : \"\";\r\n                            _linInfo.targetPort = defaultPorts[_index].target !== undefined ? defaultPorts[_index].target.port : \"\";\r\n                        }\r\n                        portModel.lineInfo = _linInfo;\r\n                        var pModel = new NetworkModel(portModel);\r\n                        this.addPortByModel(pModel, api);\r\n                        _kmx = _kmx + 11;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n       \r\n\r\n        var ports = model.get('ports');\r\n        if ( ports !== undefined && ports.card1 !== undefined && ports.card1.length < 3) {\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n        \r\n\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    ServerR630Node.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this._api);\r\n            this.portNodeList.push(node);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(ServerR630Node, NetworkNode);\r\n    module.exports = ServerR630Node;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/ServerR630Node.js\n ** module id = 89\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    \r\n    function ServerTopoNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ServerTopoNode\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    ServerTopoNode.prototype.render = function(model, api) {\r\n     \r\n    };\r\n\r\n    zrUtil.inherits(ServerTopoNode, NetworkNode);\r\n    module.exports = ServerTopoNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/ServerTopoNode.js\n ** module id = 90\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var CardModel = require(\"../../model/topo/CardModel.js\");\r\n    var ServerTopoNode = require(\"./ServerTopoNode\");\r\n    \r\n    function ServerR730Node(model,api) {\r\n        ServerTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ServerR730Node\" };    \r\n        this.model = model;\r\n        this.portNodeList = [];\r\n        this.cardNodeList = [];\r\n        this.render(model,api);\r\n    };\r\n\r\n    ServerR730Node.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n        var me = this;\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var serverNodeB = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR730b.jpg',\r\n                width: model.get(\"width\"),\r\n                height:  40,\r\n            },\r\n            z: 1000,\r\n            draggable: false\r\n        }); \r\n\r\n        var serverNodeA = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/sDellR730a.jpg',\r\n                width: model.get(\"width\"),\r\n                height:  40\r\n            },\r\n            draggable: false\r\n        }); \r\n\r\n\r\n        serverNodeB.on(\"mouseover\", function(params){\r\n            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeA.attr(\"position\", [0,0]);\r\n            if ( me.cardNodeList.length > 0 ) {\r\n                for ( var j = 0; j < me.cardNodeList.length; j++ ) {\r\n                    me.cardNodeList[j]._children[0].show();\r\n                }\r\n            }\r\n          //  serverNodeA.show();\r\n        });\r\n        serverNodeA.on(\"mouseout\", function(params){\r\n            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeB.attr(\"position\", [0,0]);\r\n            if ( me.cardNodeList.length > 0 ) {\r\n                for ( var j = 0; j < me.cardNodeList.length; j++ ) {\r\n                    me.cardNodeList[j]._children[0].hide();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.add(serverNodeA);\r\n        this.add(serverNodeB);\r\n        \r\n        var cardList = model.get(\"cards\");\r\n        var defaultPorts = [];\r\n        if ( cardList !== undefined ) {\r\n             for ( var c = 0; c < cardList.length; c++ ) {\r\n                if ( cardList[c].type === \"default\" ) {\r\n                    defaultPorts = cardList[c].ports !== undefined ? cardList[c].ports : undefined;\r\n                    var _kmx = 75;\r\n                    for (var i = 1; i < 5; i++ ) {\r\n                        var portModel = {};\r\n                        portModel = {\r\n                            resourceId: util.getUUID(),  \r\n                            bounds: {\r\n                                upperLeft: {x: _kmx, y: 26}  \r\n                            },\r\n                            stencil: {type: \"PointNode\"}\r\n                        };\r\n                        portModel.height = 7;\r\n                        portModel.width = 7;\r\n\r\n                        var _linInfo = {};\r\n                        _linInfo.sourceReource = this.model.get(\"name\");\r\n                        _linInfo.sourcePort = i;\r\n                        _linInfo.nodetype = this.model.get(\"nodetype\");\r\n                        var _index = i - 1;\r\n                        if( defaultPorts !== undefined && defaultPorts[_index] !== undefined ) {\r\n                            _linInfo.targetReource = defaultPorts[_index].target !== undefined ? defaultPorts[_index].target.reourceName : \"\";\r\n                            _linInfo.targetPort = defaultPorts[_index].target !== undefined ? defaultPorts[_index].target.port : \"\";\r\n                        }\r\n                        portModel.lineInfo = _linInfo;\r\n\r\n                        var pModel = new NetworkModel(portModel);\r\n                        this.addPortByModel(pModel, api);\r\n                        _kmx = _kmx + 10;\r\n                    } \r\n                }\r\n\r\n                var cardX,cardY,cardWidth,cardHeight,_direction,_No;\r\n                // 一号卡槽\r\n                if ( cardList[c].No === 1 ) {\r\n                    cardX = 15;\r\n                    cardY = 3;\r\n                    cardWidth = 33;\r\n                    cardHeight = 8;\r\n                    _direction = \"leftRight\";\r\n                    _No = \"1\";\r\n                } else if ( cardList[c].No === 2  ) {\r\n                    cardX = 15;\r\n                    cardY = 12;\r\n                    cardWidth = 33;\r\n                    cardHeight = 8;\r\n                    _direction = \"leftRight\";\r\n                    _No = \"2\";\r\n                } else if ( cardList[c].No === 3 ) {\r\n                    cardX = 15;\r\n                    cardY = 20;\r\n                    cardWidth = 33;\r\n                    cardHeight = 8;\r\n                    _direction = \"leftRight\";\r\n                    _No = \"3\";\r\n                } else if ( cardList[c].No === 4 ) {\r\n                    cardX = 60;\r\n                    cardY = 3;\r\n                    cardWidth = 50;\r\n                    cardHeight = 8;\r\n                    _direction = \"leftRight\";\r\n                    _No = \"4\";\r\n                } else if ( cardList[c].No === 5  ) {\r\n                    cardX = 60;\r\n                    cardY = 12;\r\n                    cardWidth = 50;\r\n                    cardHeight = 8;\r\n                    _direction = \"leftRight\";\r\n                    _No = \"5\";\r\n                } else if ( cardList[c].No === 6 ) {\r\n                    cardX = 15;\r\n                    cardY = 3;\r\n                    cardWidth = 50;\r\n                    cardHeight = 8;\r\n                    _direction = \"leftRight\";\r\n                    _No = \"6\";\r\n                } \r\n\r\n                var portModel = {};\r\n                    portModel = {\r\n                        resourceId: util.getUUID(),  \r\n                        bounds: {\r\n                            upperLeft: {x: cardX, y: cardY}  \r\n                        },\r\n                        stencil: {type: \"CardNode\"}\r\n                    };\r\n                    portModel.No = _No;\r\n                    portModel.height = cardHeight;\r\n                    portModel.width = cardWidth;\r\n                    portModel.type = cardList[c].type;\r\n                    portModel.portData = cardList[c].ports;\r\n                    portModel.direction = _direction;//updown\r\n                    portModel.resourcesName = model.get(\"name\");\r\n                    portModel.resourceNodeType = model.get(\"nodetype\");\r\n                    var pModel = new CardModel(portModel);\r\n\r\n                    this.addNodeByModel(pModel, api);\r\n\r\n            }\r\n        }     \r\n        \r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    ServerR730Node.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this._api);\r\n            this.portNodeList.push(node);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n    ServerR730Node.prototype.addNodeByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, api);\r\n            var pointList = node.pointList;\r\n            if ( pointList !== undefined && pointList.length > 0 ) {\r\n                for( var i = 0; i < pointList.length; i++ ) {\r\n                    if ( pointList[i].lineInfo.sourceCardNo === \"1\" ) {\r\n                        pointList[i].lineInfo.moddleX = 35;\r\n                    } else if( pointList[i].lineInfo.sourceCardNo === \"2\" ) {\r\n                        pointList[i].lineInfo.moddleX = 25;\r\n                    } else if( pointList[i].lineInfo.sourceCardNo === \"3\" ) {\r\n\r\n                    } else if( pointList[i].lineInfo.sourceCardNo === \"4\" ) {\r\n                        pointList[i].lineInfo.moddleX = 25;\r\n                    }else if( pointList[i].lineInfo.sourceCardNo === \"5\" ) {\r\n\r\n                    }\r\n                  this.portNodeList.push(pointList[i]);   \r\n                }\r\n            }\r\n            this.add(node);\r\n            this.cardNodeList.push(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(ServerR730Node, NetworkNode);\r\n    module.exports = ServerR730Node;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/ServerR730Node.js\n ** module id = 91\n ** module chunks = 0\n **/","\r\n\r\n    var Model = require('../../../../fish-topo-core/lib/Model');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var NetworkModel = require('../NetworkModel');\r\n\r\n    var CardModel = NetworkModel.extend({\r\n        No: \"\",\r\n        resourcesName: \"\",\r\n        resourceNodeType : \"1\",\r\n        height: 5,\r\n        width: 5,\r\n        type: \"\",\r\n        direction: \"leftRight\",//updown\r\n        portData: []\r\n    });\r\n    module.exports = CardModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/model/topo/CardModel.js\n ** module id = 92\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var ServerTopoNode = require(\"./ServerTopoNode\");\r\n    \r\n    function ServerX3550Node(model,api) {\r\n        ServerTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ServerX3550Node\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    ServerX3550Node.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var serverNodeB = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/xIBMX3550b.png',\r\n                width: model.get(\"width\"),\r\n                height:  40\r\n            },\r\n            draggable: false\r\n        }); \r\n\r\n        var serverNodeA = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/xIBMX3550a.png',\r\n                width: model.get(\"width\"),\r\n                height:  40\r\n            },\r\n            draggable: false\r\n        }); \r\n\r\n\r\n        serverNodeB.on(\"mouseover\", function(params){\r\n            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeA.attr(\"position\", [0,0]);\r\n        });\r\n        serverNodeA.on(\"mouseout\", function(params){\r\n            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeB.attr(\"position\", [0,0]);\r\n        });\r\n\r\n        this.add(serverNodeA);\r\n        this.add(serverNodeB);\r\n        \r\n        //画默认的以太网端口\r\n        var _kmx = 95;\r\n        for (var i = 0; i < 4; i++ ) {\r\n            var portModel = {};\r\n            portModel = {\r\n                resourceId: util.getUUID(),  \r\n                bounds: {\r\n                    upperLeft: {x: _kmx, y: 15}  \r\n                },\r\n                stencil: {type: \"PointNode\"}\r\n            };\r\n            portModel.height = 8;\r\n            portModel.width = 8;\r\n            var pModel = new NetworkModel(portModel);\r\n            this.addPortByModel(pModel, api);\r\n            _kmx = _kmx + 13;\r\n        }\r\n\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    ServerX3550Node.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this._api);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(ServerX3550Node, NetworkNode);\r\n    module.exports = ServerX3550Node;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/ServerX3550Node.js\n ** module id = 93\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var ServerTopoNode = require(\"./ServerTopoNode\");\r\n    \r\n    function ServerX3650Node(model,api) {\r\n        ServerTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ServerX3650Node\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    ServerX3650Node.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var serverNodeB = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/xIBMX3650b_8.png',\r\n                width: model.get(\"width\"),\r\n                height:  80\r\n            },\r\n            draggable: false\r\n        }); \r\n\r\n        var serverNodeA = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/xIBMX3650a.png',\r\n                width: model.get(\"width\"),\r\n                height:  80\r\n            },\r\n            draggable: false\r\n        }); \r\n\r\n\r\n        serverNodeB.on(\"mouseover\", function(params){\r\n            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeA.attr(\"position\", [0,0]);\r\n          //  serverNodeA.show();\r\n        });\r\n        serverNodeA.on(\"mouseout\", function(params){\r\n            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeB.attr(\"position\", [0,0]);\r\n        });\r\n\r\n        this.add(serverNodeA);\r\n        this.add(serverNodeB);\r\n        \r\n        //画默认的以太网端口\r\n        var _kmx = 165;\r\n        for (var i = 0; i < 4; i++ ) {\r\n            var portModel = {};\r\n            portModel = {\r\n                resourceId: util.getUUID(),  \r\n                bounds: {\r\n                    upperLeft: {x: _kmx, y: 55}  \r\n                },\r\n                stencil: {type: \"PointNode\"}\r\n            };\r\n            portModel.height = 10;\r\n            portModel.width = 10;\r\n            var pModel = new NetworkModel(portModel);\r\n            this.addPortByModel(pModel, api);\r\n            _kmx = _kmx + 13;\r\n        }\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    ServerX3650Node.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this._api);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(ServerX3650Node, NetworkNode);\r\n    module.exports = ServerX3650Node;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/ServerX3650Node.js\n ** module id = 94\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var ServerTopoNode = require(\"./ServerTopoNode\");\r\n    \r\n    function ServerRD350Node(model,api) {\r\n        ServerTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ServerRD350Node\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    ServerRD350Node.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var serverNodeB = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/lenovoRd350b.png',\r\n                width: model.get(\"width\"),\r\n                height:  40\r\n            },\r\n            draggable: false\r\n        }); \r\n\r\n        var serverNodeA = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/lenovoRd350a.png',\r\n                width: model.get(\"width\"),\r\n                height:  40\r\n            },\r\n            z: 1000,\r\n            draggable: false\r\n        }); \r\n\r\n\r\n        serverNodeB.on(\"mouseover\", function(params){\r\n            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeA.attr(\"position\", [0,0]);\r\n        });\r\n        serverNodeA.on(\"mouseout\", function(params){\r\n            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeB.attr(\"position\", [0,0]);\r\n        });\r\n\r\n        this.add(serverNodeA);\r\n        this.add(serverNodeB);\r\n        \r\n        //画默认的以太网端口\r\n        var _kmx = 95;\r\n        for (var i = 0; i < 4; i++ ) {\r\n            var portModel = {};\r\n            portModel = {\r\n                resourceId: util.getUUID(),  \r\n                bounds: {\r\n                    upperLeft: {x: _kmx, y: 15}  \r\n                },\r\n                stencil: {type: \"PointNode\"}\r\n            };\r\n            portModel.height = 8;\r\n            portModel.width = 8;\r\n            var pModel = new NetworkModel(portModel);\r\n            this.addPortByModel(pModel, api);\r\n            _kmx = _kmx + 13;\r\n        }\r\n\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    ServerRD350Node.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this._api);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(ServerRD350Node, NetworkNode);\r\n    module.exports = ServerRD350Node;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/ServerRD350Node.js\n ** module id = 95\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var ServerTopoNode = require(\"./ServerTopoNode\");\r\n    \r\n    function ServerRD650Node(model,api) {\r\n        ServerTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ServerRD650Node\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    ServerRD650Node.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var serverNodeB = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/lenovoRd650b.png',\r\n                width: model.get(\"width\"),\r\n                height:  80\r\n            },\r\n            draggable: false\r\n        }); \r\n\r\n        var serverNodeA = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/lenovoRd650a.png',\r\n                width: model.get(\"width\"),\r\n                height:  80\r\n            },\r\n            z: 1000,\r\n            draggable: false\r\n        }); \r\n\r\n\r\n        serverNodeB.on(\"mouseover\", function(params){\r\n            serverNodeB.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeA.attr(\"position\", [0,0]);\r\n          //  serverNodeA.show();\r\n        });\r\n        serverNodeA.on(\"mouseout\", function(params){\r\n            serverNodeA.attr(\"position\" , [-1000, -1000]);\r\n            serverNodeB.attr(\"position\", [0,0]);\r\n        });\r\n\r\n        this.add(serverNodeA);\r\n        this.add(serverNodeB);\r\n        \r\n        //画默认的以太网端口\r\n        var portModel = {};\r\n        portModel = {\r\n            resourceId: util.getUUID(),  \r\n            bounds: {\r\n                upperLeft: {x: 88, y: 55}  \r\n            },\r\n            stencil: {type: \"PointNode\"}\r\n        };\r\n        portModel.height = 10;\r\n        portModel.width = 10;\r\n        var pModel = new NetworkModel(portModel);\r\n        this.addPortByModel(pModel, api);\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    ServerRD650Node.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this._api);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(ServerRD650Node, NetworkNode);\r\n    module.exports = ServerRD650Node;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/ServerRD650Node.js\n ** module id = 96\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    \r\n    function SwitchTopoNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"SwitchTopoNode\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    SwitchTopoNode.prototype.render = function(model, api) {\r\n        \r\n    };\r\n\r\n    zrUtil.inherits(SwitchTopoNode, NetworkNode);\r\n    module.exports = SwitchTopoNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/SwitchTopoNode.js\n ** module id = 97\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var SwitchTopoNode = require(\"./SwitchTopoNode\");\r\n    \r\n    function SwitchHalfIBNode(model,api) {\r\n        SwitchTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"SwitchHalfIBNode\" };    \r\n        this.model = model;\r\n        this.portNodeList = [];\r\n        this.render(model,api);\r\n    };\r\n\r\n    SwitchHalfIBNode.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var switchNode = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/IBSwitchHalf.png',\r\n                width: model.get(\"width\"),\r\n                height:  40\r\n            },\r\n            draggable: false\r\n        }); \r\n        this.add(switchNode);\r\n\r\n        var _y = 12;\r\n        var _x = 70;\r\n        for (var i = 1; i < 5; i++ ) {\r\n            var portModel = {};\r\n            portModel = {\r\n                resourceId: util.getUUID(),  \r\n                bounds: {\r\n                    upperLeft: {x: _x, y: _y}  \r\n                },\r\n                stencil: {type: \"PointNode\"}\r\n            };\r\n            portModel.height = 6;\r\n            portModel.width = 11;\r\n            var _linInfo = {};\r\n            _linInfo.sourceReource = model.get(\"name\")\r\n            _linInfo.sourcePort = i.toString();\r\n            portModel.lineInfo = _linInfo;\r\n            var pModel = new NetworkModel(portModel);\r\n            this.addPortByModel(pModel, api);\r\n            _x = _x + portModel.width + 3;\r\n     \r\n        }\r\n        \r\n        _y = 22;\r\n        _x = 70;\r\n        for (var i = 5; i < 9; i++ ) {\r\n            var portModel = {};\r\n            portModel = {\r\n                resourceId: util.getUUID(),  \r\n                bounds: {\r\n                    upperLeft: {x: _x, y: _y}  \r\n                },\r\n                stencil: {type: \"PointNode\"}\r\n            };\r\n            portModel.height = 6;\r\n            portModel.width = 11;\r\n            var _linInfo = {};\r\n            _linInfo.sourceReource = model.get(\"name\")\r\n            _linInfo.sourcePort = i.toString();\r\n            portModel.lineInfo = _linInfo;\r\n            var pModel = new NetworkModel(portModel);\r\n            this.addPortByModel(pModel, api);\r\n            _x = _x + portModel.width + 3;     \r\n        }\r\n\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    SwitchHalfIBNode.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this._api);\r\n            this.add(node);\r\n            this.portNodeList.push(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(SwitchHalfIBNode, NetworkNode);\r\n    module.exports = SwitchHalfIBNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/SwitchHalfIBNode.js\n ** module id = 98\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var SwitchTopoNode = require(\"./SwitchTopoNode\");\r\n    \r\n    function SwitchFullIBNode(model,api) {\r\n        SwitchTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"SwitchFullIBNode\" };    \r\n        this.model = model;\r\n        this.portNodeList = [];\r\n        this.render(model,api);\r\n    };\r\n\r\n    SwitchFullIBNode.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var switchNode = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/IBSwitchFull.png',\r\n                width: model.get(\"width\"),\r\n                height: 40\r\n            },\r\n            draggable: false\r\n        }); \r\n        this.add(switchNode);\r\n\r\n        var _y = 14;\r\n        var _x = 18;\r\n        for (var i = 1; i < 19; i++ ) {\r\n            var portModel = {};\r\n            portModel = {\r\n                resourceId: util.getUUID(),  \r\n                bounds: {\r\n                    upperLeft: {x: _x, y: _y}  \r\n                },\r\n                stencil: {type: \"PointNode\"}\r\n            };\r\n            portModel.height = 6;\r\n            portModel.width = 11;\r\n            var _linInfo = {};\r\n            _linInfo.sourceReource = model.get(\"name\")\r\n            _linInfo.sourcePort = i.toString();\r\n            portModel.lineInfo = _linInfo;\r\n            var pModel = new NetworkModel(portModel);\r\n            this.addPortByModel(pModel, api);\r\n            if (i % 3 === 0 ) {\r\n                _x = _x + portModel.width + 5;\r\n            } else {\r\n                _x = _x + portModel.width + 2;\r\n            }       \r\n        }\r\n        \r\n        _y = 24;\r\n        _x = 18;\r\n        for (var i = 19; i < 37; i++ ) {\r\n            var portModel = {};\r\n            portModel = {\r\n                resourceId: util.getUUID(),  \r\n                bounds: {\r\n                    upperLeft: {x: _x, y: _y}  \r\n                },\r\n                stencil: {type: \"PointNode\"}\r\n            };\r\n            portModel.height = 6;\r\n            portModel.width = 11;\r\n            var _linInfo = {};\r\n            _linInfo.sourceReource = this.model.get(\"name\");\r\n            _linInfo.sourcePort = i.toString();\r\n            portModel.lineInfo = _linInfo;\r\n            var pModel = new NetworkModel(portModel);\r\n            this.addPortByModel(pModel, api);\r\n            if (i % 3 === 0 ) {\r\n                _x = _x + portModel.width + 5;\r\n            } else {\r\n                _x = _x + portModel.width + 2;\r\n            }       \r\n        }\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n     SwitchFullIBNode.prototype.addPortByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this._api);\r\n            this.portNodeList.push(node);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(SwitchFullIBNode, NetworkNode);\r\n    module.exports = SwitchFullIBNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/SwitchFullIBNode.js\n ** module id = 99\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var SwitchTopoNode = require(\"./SwitchTopoNode\");\r\n    \r\n    function SwitchGMNode(model,api) {\r\n        SwitchTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"SwitchGMNode\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    SwitchGMNode.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var switchNode = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/GMSwitch.png',\r\n                width: model.get(\"width\"),\r\n                height: 40\r\n            },\r\n            draggable: false\r\n        }); \r\n        this.add(switchNode);\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n   \r\n\r\n    zrUtil.inherits(SwitchGMNode, NetworkNode);\r\n    module.exports = SwitchGMNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/SwitchGMNode.js\n ** module id = 100\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var SwitchTopoNode = require(\"./SwitchTopoNode\");\r\n    \r\n    function SwitchKMNode(model,api) {\r\n        SwitchTopoNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"SwitchKMNode\" };    \r\n        this.model = model;\r\n        this.render(model,api);\r\n    };\r\n\r\n    SwitchKMNode.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var _showTip = model.get(\"showTip\");\r\n\r\n        var _title = new graphic.Text({\r\n            style: {\r\n                x: model.get(\"width\") / 2 - 10,\r\n                y: -20,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '12px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });\r\n        this.add(_title);\r\n\r\n        var switchNode = new graphic.Image({\r\n            position: [0, 0],\r\n            scale: [1, 1],\r\n            style: {\r\n                x: 0,\r\n                y: 0,\r\n                image: '../../../src/third-party/fish-topo/fish-topo-network/src/images/KMSwitch.png',\r\n                width: model.get(\"width\"),\r\n                height: 40\r\n            },\r\n            draggable: false\r\n        }); \r\n        this.add(switchNode);\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    zrUtil.inherits(SwitchKMNode, NetworkNode);\r\n    module.exports = SwitchKMNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/topo/SwitchKMNode.js\n ** module id = 101\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkNode = require(\"../NetworkNode.js\");\r\n    var NetWorkLineNode = require(\"../NetWorkLineNode.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var DatabaseModel = require(\"../../model/cluster/DatabaseModel.js\");\r\n\tvar AsmModel = require(\"../../model/cluster/AsmModel.js\");\r\n\tvar ISEModel = require(\"../../model/cluster/ISEModel.js\");\r\n    var NetWorkLineModel = require(\"../../model/NetWorkLineModel.js\");\r\n\r\n\r\n    function ClusterDrawNode(model, api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.info = {type: -1, name: \"ClusterDrawNode\" };    \r\n        this.model = model;\r\n        this.databaseList = [];\r\n        this.dgList = [];\r\n        this.render(model, api);\r\n    };\r\n\r\n    ClusterDrawNode.prototype.render = function(model, api) {\r\n    \tvar nodeList = model.get(\"nodeList\");\r\n        var _showTip = model.get(\"showTip\");\r\n        var dataModelData = {};\r\n    \tvar asmModelData = {};\r\n    \tvar storageModelData = {};\r\n    \tvar _dgList = [];\r\n    \tfor( var i = 0; i < nodeList.length; i++ ) {\r\n    \t\tvar nodeY = 10;\r\n            var startX = 50;\r\n    \t\tif ( nodeList[i].type === \"database\" ) {\r\n    \t\t\tvar dbData = nodeList[i].dbData;\r\n    \t\t\tif ( dbData != undefined && dbData.length > 0 ) {\r\n                    dataModelData = {\r\n                        resourceId: util.getUUID(),  \r\n                        bounds: {\r\n                            upperLeft: {x: startX, y: nodeY}  \r\n                        },\r\n                        stencil: {type: \"ClusterDatabaseNode\"}\r\n                    };\r\n                    dataModelData.dbData = dbData;\r\n                    dataModelData.showTip = _showTip;\r\n    \t\t\t\tfor ( var d = 0; d < dbData.length; d++ ) {\r\n\t\t    //             var dgInfomation = {};\r\n\t\t\t\t\t\t// dgInfomation.dgList = dbData[d].dg;\r\n\t\t\t\t\t\t// var dgLineInfo = {};\r\n\t\t    //             dgLineInfo.source = dbData[d].name + \"dg\";\r\n\t\t    //             dgLineInfo.target = dbData[d].name;\r\n\t\t    //             dgInfomation.lineInfo = dgLineInfo;\r\n\r\n\t\t                _dgList.push(dbData[d].dg);\r\n\r\n    \t\t\t\t}\r\n    \t\t\t}\t\r\n    \t\t} else if( nodeList[i].type === \"asm\") {\r\n    \t\t\tvar startX = 50;\r\n    \t\t\tnodeY = 250;\r\n    \t\t\tasmModelData = {\r\n                    resourceId: util.getUUID(),  \r\n                    bounds: {\r\n                        upperLeft: {x: startX, y: nodeY}  \r\n                    },\r\n                    stencil: {type: \"ClusterAsmNode\"}\r\n                };\r\n                asmModelData.name = nodeList[i].name;\r\n                asmModelData.asmData = nodeList[i].asmData;\r\n                asmModelData.status = nodeList[i].status;\r\n                asmModelData.showTip = _showTip;\r\n    \t\t} else if( nodeList[i].type === \"storage\" ) {\r\n    \t\t\tvar startX = 50;\r\n    \t\t\tnodeY = 550;\r\n    \t\t\tstorageModelData = {\r\n                    resourceId: util.getUUID(),  \r\n                    bounds: {\r\n                        upperLeft: {x: startX, y: nodeY}  \r\n                    },\r\n                    stencil: {type: \"ClusterIseNode\"}\r\n                };\r\n                storageModelData.childNodeList = nodeList[i].iseData;\r\n                storageModelData.showTip = _showTip;\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n        var databaseModel = new DatabaseModel(dataModelData);\r\n        this.addNodeByModel(databaseModel, api);\r\n\r\n        \r\n        //画矩形\r\n        var mangerNode = new graphic.Rect({\r\n            shape: {\r\n                x: 50,\r\n                y: 400,\r\n                width: api.getWidth() - 100,\r\n                height: 200\r\n            },\r\n            style: {\r\n                fill: '#FFFFFF',\r\n                stroke: '#B3B3B3',\r\n                lineWidth: '1',\r\n                lineDash: [2]  \r\n            }          \r\n        });              \r\n        this.add(mangerNode);\r\n\r\n    \tasmModelData.dg = _dgList;\r\n    \tvar asmModel = new AsmModel(asmModelData);\r\n        this.addNodeByModel(asmModel, api);\r\n\r\n        var iseModel = new ISEModel(storageModelData);\r\n        this.addNodeByModel(iseModel, api);\r\n\r\n        //连线\r\n        for (var l = 0; l < this.databaseList.length; l++ ) {\r\n            this.drawLine(this.databaseList[l], this.dgList[l], api);\r\n        }\r\n\r\n    };\r\n\r\n    ClusterDrawNode.prototype.addNodeByModel = function( p_model, api) {\r\n        var MOUSE_EVENT_NAMES = ['click'];\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, api);\r\n            this.add(node);\r\n            // if ( p_model.get(\"showTip\") ) {\r\n            //     MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];\r\n            // }\r\n            // this.bind(node, MOUSE_EVENT_NAMES, api);\r\n\r\n            if ( api.getWidth()  < node.clientWidth ) {\r\n                api.resize(node.clientWidth, api.getHeight());\r\n            }\r\n            if( node.portNodeList !== undefined && node.portNodeList.length > 0 ) {\r\n                if ( node.info.name === \"ClusterDatabaseNode\" ) {\r\n                    for (var i = 0; i < node.portNodeList.length; i++ ) {\r\n                        this.databaseList.push(node.portNodeList[i]);\r\n                    }\r\n                } else if( node.info.name === \"ClusterAsmNode\" ) {\r\n                    for (var i = 0; i < node.portNodeList.length; i++ ) {\r\n                        this.dgList.push(node.portNodeList[i]);\r\n                    }\r\n                } \r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    ClusterDrawNode.prototype.drawLine = function( p_startNode, p_endNode, api ) {\r\n        var fleftx = p_startNode.parent.position[0] + p_startNode.shape.x;\r\n        var flefty = p_startNode.parent.position[1] + p_startNode.shape.y;\r\n        var fwidth =  p_startNode.shape.width;\r\n        var fheight = p_startNode.shape.height;\r\n\r\n        var torightx = p_endNode.parent.position[0] + p_endNode.shape.x;\r\n        var torighty = p_endNode.parent.position[1] + p_endNode.shape.y;\r\n        var towidth =  p_endNode.shape.width;\r\n        var toheight = p_endNode.shape.height;\r\n        var moddleY = 200;\r\n     \r\n\r\n        var defaultOptionDatabase = {\r\n            fromBounds : {x: fleftx - 25, y: flefty, width: fwidth, height: fheight},\r\n            toBounds: {x: torightx - 25, y: torighty, width: towidth, height: toheight},\r\n            moddleY: moddleY,\r\n            style : {\r\n                lineWidth : 3,\r\n                stroke: '#0704EC'//,\r\n                //fill: '#9699DD'\r\n            },\r\n            hoverStyle : {\r\n                lineWidth : 3,\r\n                stroke: '#FF0000'//,\r\n                //fill:'#2FDE92'\r\n            },\r\n            isEdit: false,\r\n            isVector: true\r\n        }\r\n        var databaseModel = new NetWorkLineModel(defaultOptionDatabase);\r\n        var databaseNode = new NetWorkLineNode(databaseModel);\r\n        this.add(databaseNode);\r\n\r\n        var moddleX = api.getWidth() / 2; \r\n        var _moddleY = moddleY;\r\n        if ( torightx + 25 > moddleX ) {\r\n            _moddleY = moddleY + 20;\r\n        } else {\r\n            _moddleY = moddleY - 20;\r\n        }\r\n         var defaultOptionDg = {\r\n            fromBounds : {x: torightx + 25, y: torighty, width: towidth, height: toheight},\r\n            toBounds: {x: fleftx + 25, y: flefty, width: fwidth, height: fheight},\r\n            moddleY: _moddleY,\r\n            style : {\r\n                lineWidth : 3,\r\n                stroke: '#0704EC'//,\r\n                //fill: '#9699DD'\r\n            },\r\n            hoverStyle : {\r\n                lineWidth : 3,\r\n                stroke: '#FF0000'//,\r\n                //fill:'#2FDE92'\r\n            },\r\n            isEdit: false,\r\n            isVector: true\r\n        }\r\n        var dgModel = new NetWorkLineModel(defaultOptionDg);\r\n        var dgNode = new NetWorkLineNode(dgModel);\r\n        this.add(dgNode);\r\n\r\n\r\n    };\r\n\r\n    ClusterDrawNode.prototype.bind = function( p_node, p_eventList, api) {\r\n        if ( p_eventList != undefined && p_eventList.length > 0 ) {\r\n            //绑定悬浮事件\r\n            zrUtil.each(p_eventList, function (eveName) {\r\n                p_node.on(eveName, function (e) {\r\n                    if ( eveName === \"mouseover\") {\r\n                        var params = {};\r\n                        params.event = e;\r\n                        params.x = p_node.position[0] + e.target.shape.width;\r\n                        params.y = p_node.position[1] + e.target.shape.height / 2;\r\n                        params.width = 150;\r\n                        params.height = 170;\r\n                        params.eWidth =  5 ;\r\n                        params.parmDate = e.target.parmDate;\r\n                        api.showTipWindow(params);\r\n                    } else {\r\n                        api.hideTipWindow(e.event.target);\r\n                    }    \r\n                }, this);\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    zrUtil.inherits(ClusterDrawNode, NetworkNode);\r\n    module.exports = ClusterDrawNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/cluster/ClusterDrawNode.js\n ** module id = 102\n ** module chunks = 0\n **/","/**\r\n * Server DatabaseModel\r\n *\r\n */\r\n\r\n\r\n    var Model = require('../../../../fish-topo-core/lib/Model');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var NetworkModel = require('../NetworkModel');\r\n\r\n    var DatabaseModel = NetworkModel.extend({  \r\n        name: \"\", \r\n    \theight: 200,\r\n        width: 190,\r\n        status : \"online\",\r\n        instanse: {},\r\n        dg: []\r\n    });\r\n    module.exports = DatabaseModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/model/cluster/DatabaseModel.js\n ** module id = 103\n ** module chunks = 0\n **/","/**\r\n * Server AsmModel\r\n *\r\n */\r\n\r\n\r\n    var Model = require('../../../../fish-topo-core/lib/Model');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var NetworkModel = require('../NetworkModel');\r\n\r\n    var AsmModel = NetworkModel.extend({  \r\n        name: \"\", \r\n    \theight: 200,\r\n        width: 190,\r\n        status : \"online\",\r\n        asmData : [],\r\n        dg: []\r\n    });\r\n    module.exports = AsmModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/model/cluster/AsmModel.js\n ** module id = 104\n ** module chunks = 0\n **/","/**\r\n * ISE Model\r\n *\r\n */\r\n\r\n\r\n    var Model = require('../../../../fish-topo-core/lib/Model');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var NetworkModel = require('../NetworkModel');\r\n\r\n    var ISEModel = NetworkModel.extend({  \r\n        name: \"\", \r\n    \theight: 200,\r\n        width: 250,\r\n        status : \"online\",\r\n        childNodeList: []\r\n    });\r\n    module.exports = ISEModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/model/cluster/ISEModel.js\n ** module id = 105\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var ClusterDrawNode = require(\"./ClusterDrawNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    \r\n    function ClusterDatabaseNode(model, api) {\r\n        ClusterDrawNode.call(this, model, api);\r\n        this.info = {type: -1, name: \"ClusterDatabaseNode\" };    \r\n        this.model = model;\r\n        this.lineInfo = model.get('lineInfo');\r\n        this.portNodeList = [];\r\n        this.render(model,api);\r\n    };\r\n\r\n    ClusterDatabaseNode.prototype.render = function(model, api) {\r\n        this.model = model;\r\n        var dbData = model.get(\"dbData\");\r\n        var _x = 0;\r\n        var _y = 0;\r\n        var _width = 280;\r\n        var _height = 80;\r\n        for ( var d = 0; d < dbData.length; d++ ) {\r\n             //创建数据库对象\r\n            var portNode = new graphic.Rect({\r\n                shape: {\r\n                    x: _x,\r\n                    y: _y,\r\n                    width: _width,\r\n                    height: _height\r\n                },\r\n                style: {\r\n                    fill: '#E2E3D9',\r\n                    stroke: '#B3B3B3',\r\n                    opacity: 1,\r\n                    lineWidth: '2'//,\r\n                }          \r\n            });  \r\n            portNode.lineInfo = this.lineInfo;            \r\n            this.add(portNode);\r\n\r\n            var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];   \r\n            zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n                 portNode.on(eveName, function (e) {\r\n                    if ( eveName === \"mouseover\") {\r\n                        var params = {};\r\n                        params.event = e;\r\n                        params.x = portNode.parent.position[0] + e.target.shape.x + e.target.shape.width;\r\n                        params.y = portNode.parent.position[1] + e.target.shape.y + e.target.shape.height / 2;\r\n                        params.width = 150;\r\n                        params.height = 170;\r\n                        params.eWidth =  5 ;\r\n                        params.parmDate = e.target.parmDate;\r\n                        if ( api.getWidth() - params.x < params.width ) {\r\n                            params.layout = \"left\";\r\n                        } else {\r\n                            params.layout = \"right\";\r\n                        }\r\n                        api.showTipWindow(params);\r\n                    } else {\r\n                        api.hideTipWindow(e.event.target);\r\n                    }    \r\n                }, this);\r\n            });\r\n           \r\n\r\n            this.portNodeList.push(portNode);\r\n\r\n            var _instanse = dbData[d].instanse;\r\n            //创建数据库实例对象\r\n            if( _instanse != undefined && _instanse.length > 0 ) {\r\n                var _instanseX = _x + 10;\r\n                var _instanseWidth = 80;\r\n                for (var i = 0; i < _instanse.length; i++ ) {\r\n\r\n                    var _instanseNode = new graphic.Rect({\r\n                        shape: {\r\n                            x: _instanseX,\r\n                            y: 10,\r\n                            width: _instanseWidth,\r\n                            height: 30\r\n                        },\r\n                        style: {\r\n                            fill: '#CFCFCF',\r\n                            stroke: '#B3B3B3',\r\n                            opacity: 1,\r\n                            lineWidth: '2'//,\r\n                        }          \r\n                    }); \r\n                    this.add(_instanseNode);\r\n\r\n                     //状态 \r\n                    var _instansestatusNode = new graphic.Circle({\r\n                         shape: {\r\n                            cx: _instanseX + 15,\r\n                            cy: 25,\r\n                            r: 5\r\n                        },\r\n                        style: {\r\n                            fill: '#00D407',\r\n                            stroke: '#B3B3B3',\r\n                            lineWidth: '2'//,\r\n                        } \r\n                    });\r\n                    if ( _instanse[i].status === \"offline\") {\r\n                        _instansestatusNode.style.fill = \"#CFB624\";\r\n                    }\r\n                    this.add(_instansestatusNode);\r\n\r\n                    //文字\r\n                    var _instanseTitle = new graphic.Text({\r\n                        style: {\r\n                            x: _instanseX + 25,\r\n                            y: 15,\r\n                            text: _instanse[i].name,\r\n                            width: 200,\r\n                            height: 20,\r\n                            fill: '#8F8B8A',\r\n                            textFont: '14px Microsoft Yahei',\r\n                            textBaseline: 'top'\r\n                        },\r\n                        draggable: true\r\n                    });       \r\n                    this.add(_instanseTitle);\r\n                    _instanseX = _instanseWidth + _instanseX + 10;\r\n                }\r\n            }\r\n\r\n\r\n            // //物理状态 \r\n            // var _phyStatus = new graphic.Rect({\r\n            //     shape: {\r\n            //         x: _instanseX,\r\n            //         y: 32,\r\n            //         width: 280,\r\n            //         height: 50\r\n            //     },\r\n            //     style: {\r\n            //         fill: '#CCCCCC',\r\n            //         stroke: '#B3B3B3',\r\n            //         lineWidth: '2'//,\r\n            //     }          \r\n            // }); \r\n            // if ( model.get(\"status\") === \"offline\") {\r\n            //     _phyStatus.style.fill = \"#CFB624\";\r\n            // }\r\n            // this.add(_phyStatus);\r\n\r\n            //状态 \r\n            var _status = new graphic.Circle({\r\n                 shape: {\r\n                    cx: _x + _width / 2,\r\n                    cy: 60,\r\n                    r: 5\r\n                },\r\n                style: {\r\n                    fill: '#00D407',\r\n                    stroke: '#B3B3B3',\r\n                    lineWidth: '2'//,\r\n                } \r\n            });\r\n            if ( model.get(\"status\") === \"offline\") {\r\n                _status.style.fill = \"#CFB624\";\r\n            }\r\n            this.add(_status);\r\n\r\n            var _title = new graphic.Text({\r\n                style: {\r\n                    x: _x + _width / 2 + 20,\r\n                    y: 50,\r\n                    text: dbData[d].name,\r\n                    width: 200,\r\n                    height: 20,\r\n                    fill: '#8F8B8A',\r\n                    textFont: '18px Microsoft Yahei',\r\n                    textBaseline: 'top'\r\n                },\r\n                draggable: true\r\n            });\r\n            this.add(_title);\r\n            _x = _x + _width + 50;\r\n        }\r\n        this.clientWidth = _x + 50;\r\n    \r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n   \r\n    zrUtil.inherits(ClusterDatabaseNode, NetworkNode);\r\n    module.exports = ClusterDatabaseNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/cluster/ClusterDatabaseNode.js\n ** module id = 106\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var ClusterDrawNode = require(\"./ClusterDrawNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    \r\n    function ClusterAsmNode(model,api) {\r\n        ClusterDrawNode.call(this, model, api);\r\n        this.info = {type: -1, name: \"ClusterAsmNode\" };    \r\n        this.model = model;\r\n        this.lineInfo = model.get('lineInfo');\r\n        return this.render(model,api);\r\n    };\r\n\r\n    ClusterAsmNode.prototype.render = function(model, api) {\r\n        var dgList = model.get(\"dg\");\r\n        var maxcount = 0;\r\n        for ( var c = 0; c < dgList.length; c++ ) {\r\n            maxcount = maxcount > dgList[c].length ? maxcount: dgList[c].length;\r\n        }\r\n        var dgHeight = this.getDgNodeHeight(maxcount, 30, 2);\r\n        var _dgW = 180;\r\n        var _startX = (api.getWidth() -  dgList.length * _dgW) / 2;\r\n\r\n        //dg Node\r\n        for ( var i = 0; i < dgList.length; i++ ) {\r\n            //创建dg对象\r\n            var dgNode = new graphic.Rect({\r\n                shape: {\r\n                    x: _startX,\r\n                    y: 0,\r\n                    width: _dgW,\r\n                    height: dgHeight\r\n                },\r\n                style: {\r\n                    fill: '#E2E3D9',\r\n                    stroke: '#B3B3B3',\r\n                    opacity: 1,\r\n                    lineWidth: '2'//,\r\n                }          \r\n            });\r\n            this.add(dgNode);\r\n            dgNode.lineInfo = this.lineInfo;\r\n            this.portNodeList.push(dgNode);  \r\n\r\n            var dg = dgList[i];\r\n            var _dgCellY = 2;\r\n            for ( var d = 0; d < dg.length; d++ ) {\r\n                var cellModelData = {\r\n                    resourceId: util.getUUID(), \r\n                    bounds: {\r\n                            upperLeft: {x: 0, y: 0}  \r\n                        }, \r\n                    stencil: {type: \"ClusterAsmCellNode\"}\r\n                };\r\n                \r\n                if ( d === 0 || d % 2 === 0 ) {\r\n                    cellModelData.bounds.upperLeft.x = _startX + 5;\r\n                } else {\r\n                    cellModelData.bounds.upperLeft.x = _startX + _dgW / 2 + 2;\r\n                }\r\n                if ( d !== 0 && d % 2 === 0 ) {\r\n                    _dgCellY = _dgCellY + 30 + 2;\r\n                }\r\n                cellModelData.bounds.upperLeft.y = _dgCellY + 2;\r\n                cellModelData.height = 30;\r\n                cellModelData.width = _dgW / 2 - 6;\r\n                cellModelData.title = dg[d].name;\r\n                cellModelData.status = dg[d].status;\r\n                var cellModel = new NetworkModel(cellModelData);\r\n                this.addNodeByModel(cellModel, api); \r\n\r\n            }\r\n            _startX = _startX + _dgW;\r\n        }\r\n      \r\n\r\n        \r\n        \r\n        //创建Asm Node\r\n        var _asmX = (api.getWidth() -  dgList.length * _dgW) / 2;\r\n        var asmNode = new graphic.Rect({\r\n            shape: {\r\n                x: _asmX,\r\n                y: dgHeight,\r\n                width: dgList.length * _dgW,\r\n                height: 100\r\n            },\r\n            style: {\r\n                fill: '#E2E3D9',\r\n                stroke: '#B3B3B3',\r\n                opacity: 1,\r\n                lineWidth: '2'//,\r\n            }          \r\n        });              \r\n        this.add(asmNode);\r\n        var MOUSE_EVENT_NAMES = ['click', 'mouseover', 'mouseout'];   \r\n            zrUtil.each(MOUSE_EVENT_NAMES, function (eveName) {\r\n                 asmNode.on(eveName, function (e) {\r\n                    if ( eveName === \"mouseover\") {\r\n                        var params = {};\r\n                        params.event = e;\r\n                        params.x = asmNode.parent.position[0] + e.target.shape.x + e.target.shape.width;\r\n                        params.y = asmNode.parent.position[1] + e.target.shape.y + e.target.shape.height / 2;\r\n                        params.width = 150;\r\n                        params.height = 170;\r\n                        params.eWidth =  5 ;\r\n                        params.parmDate = e.target.parmDate;\r\n                        if ( api.getWidth() - params.x < params.width ) {\r\n                            params.layout = \"left\";\r\n                        } else {\r\n                            params.layout = \"right\";\r\n                        }\r\n                        api.showTipWindow(params);\r\n                    } else {\r\n                        api.hideTipWindow(e.event.target);\r\n                    }    \r\n                }, this);\r\n            });\r\n\r\n        //遍历ASM实例对象\r\n        var asmData = model.get(\"asmData\");\r\n        var _asmInstanseX = _asmX + (dgList.length * _dgW - asmData.length * 100) / 2;\r\n        var _width = 100;\r\n        for ( var asmIn = 0; asmIn < asmData.length; asmIn++ ) {\r\n            //创建Asm Instance对象\r\n            var asmInsatanceNode = new graphic.Rect({\r\n                shape: {\r\n                    x: _asmInstanseX,\r\n                    y: dgHeight + 10,\r\n                    width: _width,\r\n                    height: 30\r\n                },\r\n                style: {\r\n                    fill: '#CFCFCF',\r\n                    stroke: '#B3B3B3',\r\n                    opacity: 1,\r\n                    lineWidth: '2'//,\r\n                }          \r\n            });              \r\n            this.add(asmInsatanceNode);\r\n            //状态 \r\n            var _asmInsatanceStatusNode = new graphic.Circle({\r\n                 shape: {\r\n                    cx: _asmInstanseX + 20,\r\n                    cy: dgHeight + 25,\r\n                    r: 5\r\n                },\r\n                style: {\r\n                    fill: '#00D407',\r\n                    stroke: '#B3B3B3',\r\n                    lineWidth: '2'//,\r\n                } \r\n            });\r\n            if ( model.get(\"status\") === \"offline\") {\r\n                _asmInsatanceStatusNode.style.fill = \"#CFB624\";\r\n            }\r\n            this.add(_asmInsatanceStatusNode);\r\n\r\n            var _asmInsatanceTitle = new graphic.Text({\r\n                style: {\r\n                    x: _asmInstanseX + 30,\r\n                    y: dgHeight + 15,\r\n                    text: asmData[asmIn].name,\r\n                    width: 200,\r\n                    height: 20,\r\n                    fill: '#8F8B8A',\r\n                    textFont: '14px Microsoft Yahei',\r\n                    textBaseline: 'top'\r\n                },\r\n                draggable: true\r\n            });       \r\n            this.add(_asmInsatanceTitle);\r\n            _asmInstanseX = _asmInstanseX + _width + 10;\r\n        }\r\n        //遍历ASM实例对象 end\r\n        \r\n        var _asmStatusX = dgList.length * _dgW / 2 + 150;\r\n        //状态 \r\n        var _asmStatusNode = new graphic.Circle({\r\n             shape: {\r\n                cx: _asmStatusX,\r\n                cy: dgHeight + 75,\r\n                r: 7\r\n            },\r\n            style: {\r\n                fill: '#00D407',\r\n                stroke: '#B3B3B3',\r\n                lineWidth: '2'//,\r\n            } \r\n        });\r\n        if ( model.get(\"status\") === \"offline\") {\r\n            _asmStatusNode.style.fill = \"#CFB624\";\r\n        }\r\n        this.add(_asmStatusNode);\r\n\r\n        var _asmTitle = new graphic.Text({\r\n            style: {\r\n                x: _asmStatusX + 20,\r\n                y: dgHeight + 65,\r\n                text: model.get(\"name\"),\r\n                width: 200,\r\n                height: 20,\r\n                fill: '#8F8B8A',\r\n                textFont: '18px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });       \r\n        this.add(_asmTitle);\r\n        this.position = [model.get(\"bounds.upperLeft.x\") , model.get(\"bounds.upperLeft.y\")];\r\n        return dgHeight + 100;\r\n    };\r\n\r\n    ClusterAsmNode.prototype.addNodeByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this.api);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n\r\n    ClusterAsmNode.prototype.getDgNodeHeight  = function( p_count, p_height, p_space) {\r\n        var returnValue = 0;\r\n        if(  p_count % 2 !== 0 ) {\r\n            returnValue =  ( (parseInt(p_count) - 1) / 2 + 1) * p_height;\r\n        } else {\r\n            returnValue =  ( parseInt(p_count) / 2) * p_height;\r\n        }\r\n        if( p_space !== undefined ) {\r\n            returnValue = returnValue + (p_count + 1) * p_space\r\n        }\r\n        return returnValue;\r\n    };\r\n\r\n    zrUtil.inherits(ClusterAsmNode, NetworkNode);\r\n    module.exports = ClusterAsmNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/cluster/ClusterAsmNode.js\n ** module id = 107\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    \r\n    function ClusterAsmCellNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ClusterAsmCellNode\" };    \r\n        this.model = model;\r\n        this.lineInfo = model.get('lineInfo');\r\n        this.render(model,api);\r\n    };\r\n\r\n    ClusterAsmCellNode.prototype.render = function(model, api) {\r\n        var _y = model.get(\"bounds.upperLeft.y\");\r\n        var _x = model.get(\"bounds.upperLeft.x\");\r\n        var _width = model.get(\"width\");\r\n        var _height = model.get(\"height\");\r\n        var cellNode = new graphic.Rect({\r\n            shape: {\r\n                x: 0,\r\n                y: 0,\r\n                width: _width,\r\n                height: _height\r\n            },\r\n            style: {\r\n                fill: '#CFCFCF',\r\n                stroke: '#B3B3B3',\r\n                opacity: 1,\r\n                lineWidth: '2'//,\r\n            }          \r\n        });              \r\n        this.add(cellNode);\r\n\r\n        //状态 \r\n        var cellNode = new graphic.Circle({\r\n             shape: {\r\n                cx: 10,\r\n                cy: 15,\r\n                r: _height / 2 - 10\r\n            },\r\n            style: {\r\n                fill: '#00D407',\r\n                stroke: '#B3B3B3',\r\n                lineWidth: '2'//,\r\n            } \r\n        });\r\n        if ( model.get(\"status\") === \"offline\") {\r\n            cellNode.style.fill = \"#CFB624\";\r\n        }\r\n        this.add(cellNode);\r\n\r\n        var cellTitle = new graphic.Text({\r\n            style: {\r\n                x: 20,\r\n                y: 5,\r\n                text: model.get(\"title\"),\r\n                width: 50,\r\n                height: 30,\r\n                fill: '#8F8B8A',\r\n                textFont: '14px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });       \r\n        this.add(cellTitle);\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\"), model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n\r\n    zrUtil.inherits(ClusterAsmCellNode, NetworkNode);\r\n    module.exports = ClusterAsmCellNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/cluster/ClusterAsmCellNode.js\n ** module id = 108\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    var ISEModel = require(\"../../model/cluster/ISEModel.js\");\r\n    function ClusterIseNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ClusterIseNode\" };    \r\n        this.model = model;\r\n        this.lineInfo = model.get('lineInfo');\r\n        this.render(model,api);\r\n    };\r\n\r\n    ClusterIseNode.prototype.render = function(model, api) {\r\n        var iseList = model.get(\"childNodeList\");\r\n        var startX = 0;\r\n        var startY = 0;\r\n        var nodeWidth = 0;\r\n        for ( var i = 0; i < iseList.length; i++ ) {\r\n            var isedata = {\r\n                resourceId: util.getUUID(),  \r\n                bounds: {\r\n                    upperLeft: {x: startX, y: startY}  \r\n                },\r\n                stencil: {type: \"ClusterIseCellNode\"}\r\n            };\r\n            isedata.width = 100;\r\n            isedata.height = 150;\r\n            isedata.status = iseList[i].status;\r\n            isedata.title = iseList[i].name;\r\n            isedata.childNodeList = iseList[i].disk;\r\n            var iseCellModel = new ISEModel(isedata);\r\n            this.addNodeByModel(iseCellModel, api);\r\n            startX = startX + 100 + 50;\r\n            nodeWidth = nodeWidth + 150;\r\n        }\r\n\r\n        var _x = (api.getWidth() - nodeWidth) / 2;\r\n        this.position = [_x , model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n    ClusterIseNode.prototype.addNodeByModel = function( p_model, api) {\r\n        var Shape = api.getNodeClass(p_model.get(\"stencil.type\"));\r\n        var node = null;\r\n        if ( Shape ) {\r\n            node = new Shape(p_model, this.api);\r\n            this.add(node);\r\n        }\r\n    };\r\n\r\n\r\n    ClusterIseNode.prototype.getDgNodeWidth  = function( p_count, p_height, p_space) {\r\n        var returnValue = 0;\r\n       \r\n        return returnValue;\r\n    };\r\n\r\n    zrUtil.inherits(ClusterIseNode, NetworkNode);\r\n    module.exports = ClusterIseNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/cluster/ClusterIseNode.js\n ** module id = 109\n ** module chunks = 0\n **/","\r\n    var util = require(\"../../../../fish-topo-core/lib/util.js\");\r\n    var NetworkNode = require(\"../NetworkNode\");\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require(\"../../../../fish-topo-core/lib/graphic.js\");\r\n    var NetworkModel = require(\"../../model/NetworkModel.js\");\r\n    \r\n    function ClusterIseCellNode(model,api) {\r\n        NetworkNode.call(this, model, api);\r\n        this.rackkInfo = {type: -1, name: \"ClusterIseCellNode\" };    \r\n        this.model = model;\r\n        this.lineInfo = model.get('lineInfo');\r\n        this.render(model,api);\r\n    };\r\n\r\n    ClusterIseCellNode.prototype.render = function(model, api) {\r\n        var isecellNode = new graphic.Rect({\r\n            shape: {\r\n                x: 0,\r\n                y: 0,\r\n                width: 80,\r\n                height: 100\r\n            },\r\n            style: {\r\n                fill: '#CFCFCF',\r\n                stroke: '#B3B3B3',\r\n                opacity: 1,\r\n                lineWidth: '2'//,\r\n            }          \r\n        });              \r\n        this.add(isecellNode);\r\n\r\n        //状态 \r\n        var isecellStatus = new graphic.Circle({\r\n             shape: {\r\n                cx: 25,\r\n                cy: 45,\r\n                r: 5\r\n            },\r\n            style: {\r\n                fill: '#00D407',\r\n                stroke: '#B3B3B3',\r\n                lineWidth: '2'//,\r\n            } \r\n        });\r\n        if ( model.get(\"status\") === \"offline\") {\r\n            isecellStatus.style.fill = \"#CFB624\";\r\n        }\r\n        this.add(isecellStatus);\r\n\r\n        var isecellTitle = new graphic.Text({\r\n            style: {\r\n                x: 45,\r\n                y: 35,\r\n                text: model.get(\"title\"),\r\n                width: 50,\r\n                height: 30,\r\n                fill: '#8F8B8A',\r\n                textFont: '14px Microsoft Yahei',\r\n                textBaseline: 'top'\r\n            },\r\n            draggable: true\r\n        });       \r\n        this.add(isecellTitle);\r\n\r\n        this.position = [model.get(\"bounds.upperLeft.x\"), model.get(\"bounds.upperLeft.y\")];\r\n    };\r\n\r\n\r\n    zrUtil.inherits(ClusterIseCellNode, NetworkNode);\r\n    module.exports = ClusterIseCellNode;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fish-topo-network/lib/node/cluster/ClusterIseCellNode.js\n ** module id = 110\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}